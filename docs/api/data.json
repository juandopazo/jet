{
    "project": {
        "name": "Jet",
        "description": "JavaScript Extensible Toolkit",
        "version": "0.1.2",
        "url": "http://github.com/juandopazo/jet/",
        "dependencies": {
            "combohandler": "0.1.2",
            "express": "2.4.6"
        }
    },
    "files": {
        "build/anim.js": {
            "name": "build/anim.js",
            "modules": {},
            "classes": {
                "Easing": 1,
                "TimeFrame": 1,
                "Tween": 1
            },
            "fors": {
                "NodeList": 1
            },
            "namespaces": {}
        },
        "build/anim.min.js": {
            "name": "build/anim.min.js",
            "modules": {
                "anim": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/appview.js": {
            "name": "build/appview.js",
            "modules": {},
            "classes": {
                "FanLoader": 1,
                "Scrollable": 1,
                "Page": 1,
                "AppView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/appview.min.js": {
            "name": "build/appview.min.js",
            "modules": {
                "appview": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/array-extras.js": {
            "name": "build/array-extras.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/array-extras.min.js": {
            "name": "build/array-extras.min.js",
            "modules": {
                "array-extras": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/base.js": {
            "name": "build/base.js",
            "modules": {},
            "classes": {
                "EventFacade": 1,
                "EventTarget": 1,
                "Attribute": 1,
                "Base": 1,
                "Utility": 1,
                "Widget": 1,
                "Mouse": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/base.min.js": {
            "name": "build/base.min.js",
            "modules": {
                "base": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/button.js": {
            "name": "build/button.js",
            "modules": {},
            "classes": {
                "Button": 1,
                "ToggleButton": 1,
                "ButtonGroup": 1,
                "ComboOption": 1,
                "ComboBox": 1,
                "RadioButton": 1,
                "RadioGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/button.min.js": {
            "name": "build/button.min.js",
            "modules": {
                "button": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/container.js": {
            "name": "build/container.js",
            "modules": {},
            "classes": {
                "Module": 1,
                "Overlay": 1,
                "Tooltip": 1,
                "PanelBase": 1,
                "Panel": 1,
                "StaticPanel": 1,
                "SimpleDialog": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/container.min.js": {
            "name": "build/container.min.js",
            "modules": {
                "container": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/cookie.js": {
            "name": "build/cookie.js",
            "modules": {},
            "classes": {
                "Cookie": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/cookie.min.js": {
            "name": "build/cookie.min.js",
            "modules": {
                "cookie": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/datasource.js": {
            "name": "build/datasource.js",
            "modules": {},
            "classes": {
                "Record": 1,
                "RecordSet": 1,
                "DataSource": 1,
                "DataSource.Get": 1,
                "DataSource.Ajax": 1,
                "DataSource.XDR": 1,
                "DataSource.Local": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/datasource.min.js": {
            "name": "build/datasource.min.js",
            "modules": {
                "datasource": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/datatable.js": {
            "name": "build/datatable.js",
            "modules": {},
            "classes": {
                "Cell": 1,
                "Column": 1,
                "DataTable": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/datatable.min.js": {
            "name": "build/datatable.min.js",
            "modules": {
                "datatable": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/deferred.js": {
            "name": "build/deferred.js",
            "modules": {},
            "classes": {
                "Deferred": 1,
                "jet~deferred": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/deferred.min.js": {
            "name": "build/deferred.min.js",
            "modules": {
                "deferred": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/dragdrop.js": {
            "name": "build/dragdrop.js",
            "modules": {},
            "classes": {
                "Drag": 1,
                "DragDrop": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/dragdrop.min.js": {
            "name": "build/dragdrop.min.js",
            "modules": {
                "dragdrop": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/escape.js": {
            "name": "build/escape.js",
            "modules": {},
            "classes": {
                "Escape": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/escape.min.js": {
            "name": "build/escape.min.js",
            "modules": {
                "escape": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/form.js": {
            "name": "build/form.js",
            "modules": {},
            "classes": {
                "FormField": 1,
                "CheckBox": 1,
                "FieldSet": 1,
                "Form": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/form.min.js": {
            "name": "build/form.min.js",
            "modules": {
                "form": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/history.js": {
            "name": "build/history.js",
            "modules": {},
            "classes": {
                "History": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/history.min.js": {
            "name": "build/history.min.js",
            "modules": {
                "history": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/imageloader.js": {
            "name": "build/imageloader.js",
            "modules": {},
            "classes": {
                "Image": 1,
                "ImageLoader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/imageloader.min.js": {
            "name": "build/imageloader.min.js",
            "modules": {
                "imageloader": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/io-xdr.js": {
            "name": "build/io-xdr.js",
            "modules": {},
            "classes": {},
            "fors": {
                "IO": 1
            },
            "namespaces": {}
        },
        "build/io-xdr.min.js": {
            "name": "build/io-xdr.min.js",
            "modules": {
                "io-xdr": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/io.js": {
            "name": "build/io.js",
            "modules": {},
            "classes": {
                "IO": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/io.min.js": {
            "name": "build/io.min.js",
            "modules": {
                "io": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/jet.js": {
            "name": "build/jet.js",
            "modules": {},
            "classes": {
                "NodeList": 1,
                "Lang": 1,
                "Array": 1,
                "Object": 1,
                "ArrayList": 1,
                "UA": 1,
                "Get": 1,
                "Core": 1,
                "jet": 1,
                "Event.Cache": 1,
                "DOMEventHandler": 1,
                "DOM": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/jet.min.js": {
            "name": "build/jet.min.js",
            "modules": {
                "node": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/json.js": {
            "name": "build/json.js",
            "modules": {},
            "classes": {
                "JSON": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/json.min.js": {
            "name": "build/json.min.js",
            "modules": {
                "json": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/layout.js": {
            "name": "build/layout.js",
            "modules": {},
            "classes": {
                "LayoutPanelBase": 1,
                "LayoutPanel": 1,
                "Layout": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/layout.min.js": {
            "name": "build/layout.min.js",
            "modules": {
                "layout": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/log.js": {
            "name": "build/log.js",
            "modules": {},
            "classes": {
                "Log": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/log.min.js": {
            "name": "build/log.min.js",
            "modules": {
                "log": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/menu.js": {
            "name": "build/menu.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/menu.min.js": {
            "name": "build/menu.min.js",
            "modules": {
                "menu": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/node-deferred.js": {
            "name": "build/node-deferred.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/node-deferred.min.js": {
            "name": "build/node-deferred.min.js",
            "modules": {
                "node-deferred": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/oop.js": {
            "name": "build/oop.js",
            "modules": {},
            "classes": {
                "Class": 1,
                "BuiltClass": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/oop.min.js": {
            "name": "build/oop.min.js",
            "modules": {
                "oop": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/paginator.js": {
            "name": "build/paginator.js",
            "modules": {},
            "classes": {
                "Paginator": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/paginator.min.js": {
            "name": "build/paginator.min.js",
            "modules": {
                "paginator": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/progressbar.js": {
            "name": "build/progressbar.js",
            "modules": {},
            "classes": {
                "ProgressBar": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/progressbar.min.js": {
            "name": "build/progressbar.min.js",
            "modules": {
                "progressbar": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/resize.js": {
            "name": "build/resize.js",
            "modules": {},
            "classes": {
                "Resize": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/resize.min.js": {
            "name": "build/resize.min.js",
            "modules": {
                "resize": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/selector.js": {
            "name": "build/selector.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/selector.min.js": {
            "name": "build/selector.min.js",
            "modules": {
                "selector": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/sizzle.js": {
            "name": "build/sizzle.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/sizzle.min.js": {
            "name": "build/sizzle.min.js",
            "modules": {
                "sizzle": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/swf.js": {
            "name": "build/swf.js",
            "modules": {},
            "classes": {
                "SWF": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/swf.min.js": {
            "name": "build/swf.min.js",
            "modules": {
                "swf": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/tabview.js": {
            "name": "build/tabview.js",
            "modules": {},
            "classes": {
                "Tab": 1,
                "TabView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/tabview.min.js": {
            "name": "build/tabview.min.js",
            "modules": {
                "tabview": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/touch.js": {
            "name": "build/touch.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/touch.min.js": {
            "name": "build/touch.min.js",
            "modules": {
                "touch": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/transition.js": {
            "name": "build/transition.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/transition.min.js": {
            "name": "build/transition.min.js",
            "modules": {
                "transition": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/treeview.js": {
            "name": "build/treeview.js",
            "modules": {},
            "classes": {
                "TreeNode": 1,
                "TreeView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/treeview.min.js": {
            "name": "build/treeview.min.js",
            "modules": {
                "treeview": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/vector.js": {
            "name": "build/vector.js",
            "modules": {},
            "classes": {
                "Vector": 1,
                "Vector.Rectangle": 1,
                "Vector.RoundedRectangle": 1,
                "Vector.Ellipse": 1,
                "Vector.Circle": 1,
                "Vector.Line": 1,
                "Vector.Path": 1,
                "Vector.Text": 1,
                "Vector.Image": 1,
                "VectorView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/vector.min.js": {
            "name": "build/vector.min.js",
            "modules": {
                "vector": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/widget-alignment.js": {
            "name": "build/widget-alignment.js",
            "modules": {},
            "classes": {
                "WidgetAlignment": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/widget-alignment.min.js": {
            "name": "build/widget-alignment.min.js",
            "modules": {
                "widget-alignment": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/widget-parentchild.js": {
            "name": "build/widget-parentchild.js",
            "modules": {},
            "classes": {
                "WidgetParent": 1,
                "WidgetChild": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/widget-parentchild.min.js": {
            "name": "build/widget-parentchild.min.js",
            "modules": {
                "widget-parentchild": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/widget-sandbox.js": {
            "name": "build/widget-sandbox.js",
            "modules": {},
            "classes": {
                "Frame": 1,
                "Sandbox": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/widget-sandbox.min.js": {
            "name": "build/widget-sandbox.min.js",
            "modules": {
                "widget-sandbox": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/widget-stack.js": {
            "name": "build/widget-stack.js",
            "modules": {},
            "classes": {
                "WidgetStack": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/widget-stack.min.js": {
            "name": "build/widget-stack.min.js",
            "modules": {
                "widget-stack": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "anim": {
            "name": "anim",
            "submodules": {},
            "classes": {
                "Easing": 1,
                "TimeFrame": 1,
                "Tween": 1
            },
            "fors": {
                "NodeList": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "build/anim.min.js",
            "line": 1,
            "requires": [
                "node, node-deferred;\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "appview": {
            "name": "appview",
            "submodules": {},
            "classes": {
                "FanLoader": 1,
                "Scrollable": 1,
                "Page": 1,
                "AppView": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/appview.min.js",
            "line": 1,
            "requires": [
                "base\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "array-extras": {
            "name": "array-extras",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/array-extras.min.js",
            "line": 1,
            "requires": [
                "Copyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "base": {
            "name": "base",
            "submodules": {},
            "classes": {
                "EventFacade": 1,
                "EventTarget": 1,
                "Attribute": 1,
                "Base": 1,
                "Utility": 1,
                "Widget": 1,
                "Mouse": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/base.min.js",
            "line": 1,
            "requires": [
                "node\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "button": {
            "name": "button",
            "submodules": {},
            "classes": {
                "Button": 1,
                "ToggleButton": 1,
                "ButtonGroup": 1,
                "ComboOption": 1,
                "ComboBox": 1,
                "RadioButton": 1,
                "RadioGroup": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/button.min.js",
            "line": 1,
            "requires": [
                "base\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "container": {
            "name": "container",
            "submodules": {},
            "classes": {
                "Module": 1,
                "Overlay": 1,
                "Tooltip": 1,
                "PanelBase": 1,
                "Panel": 1,
                "StaticPanel": 1,
                "SimpleDialog": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/container.min.js",
            "line": 1,
            "requires": [
                "base,widget-alignment,widget-stack\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "cookie": {
            "name": "cookie",
            "submodules": {},
            "classes": {
                "Cookie": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/cookie.min.js",
            "line": 1,
            "requires": [
                "jet\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "datasource": {
            "name": "datasource",
            "submodules": {},
            "classes": {
                "Record": 1,
                "RecordSet": 1,
                "DataSource": 1,
                "DataSource.Get": 1,
                "DataSource.Ajax": 1,
                "DataSource.XDR": 1,
                "DataSource.Local": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/datasource.min.js",
            "line": 1,
            "requires": [
                "base\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "datatable": {
            "name": "datatable",
            "submodules": {},
            "classes": {
                "Cell": 1,
                "Column": 1,
                "DataTable": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/datatable.min.js",
            "line": 1,
            "requires": [
                "base\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "deferred": {
            "name": "deferred",
            "submodules": {},
            "classes": {
                "Deferred": 1,
                "jet~deferred": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/deferred.min.js",
            "line": 1,
            "requires": [
                "oop\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "dragdrop": {
            "name": "dragdrop",
            "submodules": {},
            "classes": {
                "Drag": 1,
                "DragDrop": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/dragdrop.min.js",
            "line": 1,
            "requires": [
                "base\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "escape": {
            "name": "escape",
            "submodules": {},
            "classes": {
                "Escape": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/escape.min.js",
            "line": 1,
            "requires": [
                "Copyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ],
            "static": 1,
            "since": "3.3.0"
        },
        "form": {
            "name": "form",
            "submodules": {},
            "classes": {
                "FormField": 1,
                "CheckBox": 1,
                "FieldSet": 1,
                "Form": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/form.min.js",
            "line": 1,
            "requires": [
                "widget\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "history": {
            "name": "history",
            "submodules": {},
            "classes": {
                "History": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/history.min.js",
            "line": 1,
            "requires": [
                "base\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "imageloader": {
            "name": "imageloader",
            "submodules": {},
            "classes": {
                "Image": 1,
                "ImageLoader": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/imageloader.min.js",
            "line": 1,
            "requires": [
                "base\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "io-xdr": {
            "name": "io-xdr",
            "submodules": {},
            "classes": {},
            "fors": {
                "IO": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "build/io-xdr.min.js",
            "line": 1,
            "requires": [
                "base,io\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "io": {
            "name": "io",
            "submodules": {},
            "classes": {
                "IO": 1,
                "Lang": 1,
                "Array": 1,
                "Object": 1,
                "ArrayList": 1,
                "UA": 1,
                "Get": 1,
                "Core": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/io.min.js",
            "line": 1,
            "requires": [
                "deferred\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "node": {
            "name": "node",
            "submodules": {},
            "classes": {
                "NodeList": 1,
                "jet": 1,
                "Event.Cache": 1,
                "DOMEventHandler": 1,
                "DOM": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/jet.min.js",
            "line": 34,
            "requires": [
                "Copyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "json": {
            "name": "json",
            "submodules": {},
            "classes": {
                "JSON": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/json.min.js",
            "line": 1,
            "requires": [
                "jet\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "layout": {
            "name": "layout",
            "submodules": {},
            "classes": {
                "LayoutPanelBase": 1,
                "LayoutPanel": 1,
                "Layout": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/layout.min.js",
            "line": 1,
            "requires": [
                "base,resize,widget-parentchild\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "log": {
            "name": "log",
            "submodules": {},
            "classes": {
                "Log": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/log.min.js",
            "line": 1,
            "requires": [
                "jet\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "menu": {
            "name": "menu",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/menu.min.js",
            "line": 1,
            "requires": [
                "base,widget-parentchild,widget-alignment\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "node-deferred": {
            "name": "node-deferred",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/node-deferred.min.js",
            "line": 1,
            "requires": [
                "deferred\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "oop": {
            "name": "oop",
            "submodules": {},
            "classes": {
                "Class": 1,
                "BuiltClass": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/oop.min.js",
            "line": 1,
            "requires": [
                "Copyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "paginator": {
            "name": "paginator",
            "submodules": {},
            "classes": {
                "Paginator": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/paginator.min.js",
            "line": 1,
            "requires": [
                "base\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "progressbar": {
            "name": "progressbar",
            "submodules": {},
            "classes": {
                "ProgressBar": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/progressbar.min.js",
            "line": 1,
            "requires": [
                "base\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "resize": {
            "name": "resize",
            "submodules": {},
            "classes": {
                "Resize": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/resize.min.js",
            "line": 1,
            "requires": [
                "base\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "selector": {
            "name": "selector",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/selector.min.js",
            "line": 1,
            "requires": [
                "Copyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "sizzle": {
            "name": "sizzle",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/sizzle.min.js",
            "line": 1,
            "requires": [
                "Copyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "swf": {
            "name": "swf",
            "submodules": {},
            "classes": {
                "SWF": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/swf.min.js",
            "line": 1,
            "requires": [
                "Copyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "tabview": {
            "name": "tabview",
            "submodules": {},
            "classes": {
                "Tab": 1,
                "TabView": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/tabview.min.js",
            "line": 1,
            "requires": [
                "base,widget-parentchild\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "touch": {
            "name": "touch",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/touch.min.js",
            "line": 1,
            "requires": [
                "node\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "transition": {
            "name": "transition",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/transition.min.js",
            "line": 1,
            "requires": [
                "node,anim,deferred\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "treeview": {
            "name": "treeview",
            "submodules": {},
            "classes": {
                "TreeNode": 1,
                "TreeView": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/treeview.min.js",
            "line": 1,
            "requires": [
                "base,widget-parentchild\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "vector": {
            "name": "vector",
            "submodules": {},
            "classes": {
                "Vector": 1,
                "Vector.Rectangle": 1,
                "Vector.RoundedRectangle": 1,
                "Vector.Ellipse": 1,
                "Vector.Circle": 1,
                "Vector.Line": 1,
                "Vector.Path": 1,
                "Vector.Text": 1,
                "Vector.Image": 1,
                "VectorView": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/vector.min.js",
            "line": 1,
            "requires": [
                "base,anim\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "widget-alignment": {
            "name": "widget-alignment",
            "submodules": {},
            "classes": {
                "WidgetAlignment": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/widget-alignment.min.js",
            "line": 1,
            "requires": [
                "base\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "widget-parentchild": {
            "name": "widget-parentchild",
            "submodules": {},
            "classes": {
                "WidgetParent": 1,
                "WidgetChild": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/widget-parentchild.min.js",
            "line": 1,
            "requires": [
                "base\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "widget-sandbox": {
            "name": "widget-sandbox",
            "submodules": {},
            "classes": {
                "Frame": 1,
                "Sandbox": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/widget-sandbox.min.js",
            "line": 1,
            "requires": [
                "base\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        },
        "widget-stack": {
            "name": "widget-stack",
            "submodules": {},
            "classes": {
                "WidgetStack": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "build/widget-stack.min.js",
            "line": 1,
            "requires": [
                "base\n\nCopyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.\nCode licensed under the BSD License\nhttps://github.com/juandopazo/jet/blob/master/LICENSE.md"
            ]
        }
    },
    "classes": {
        "Easing": {
            "name": "Easing",
            "shortname": "Easing",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "anim",
            "namespace": "",
            "file": "build/anim.js",
            "line": 44,
            "description": "Easing modes",
            "static": 1
        },
        "TimeFrame": {
            "name": "TimeFrame",
            "shortname": "TimeFrame",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "anim",
            "namespace": "",
            "file": "build/anim.js",
            "line": 102,
            "description": "A timeframe for queueing animations",
            "uses": [
                "EventTarget"
            ],
            "static": 1
        },
        "Tween": {
            "name": "Tween",
            "shortname": "Tween",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "anim",
            "namespace": "",
            "file": "build/anim.js",
            "line": 178,
            "description": "A Tween is a variation of a property during a lapse of time that has a certain easing associated",
            "extends": "Base",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying configuration properties",
                    "type": "Object"
                }
            ]
        },
        "NodeList": {
            "name": "NodeList",
            "shortname": "NodeList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "node",
            "namespace": "",
            "file": "build/jet.js",
            "line": 1927,
            "description": "A collection of DOM Nodes",
            "is_constructor": 1,
            "extends": "ArrayList",
            "params": [
                {
                    "name": "nodes",
                    "description": "",
                    "type": "Array|DOMCollection|DOMNode"
                },
                {
                    "name": "root",
                    "description": "",
                    "type": "DOMNode|Document"
                }
            ]
        },
        "FanLoader": {
            "name": "FanLoader",
            "shortname": "FanLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "appview",
            "namespace": "",
            "file": "build/appview.js",
            "line": 12,
            "description": "A loader indicator that looks like a rotating fan",
            "extends": "Widget",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying configuration properties",
                    "type": "Object"
                }
            ]
        },
        "Scrollable": {
            "name": "Scrollable",
            "shortname": "Scrollable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "appview",
            "namespace": "",
            "file": "build/appview.js",
            "line": 163,
            "description": "Fakes that a node is scrolling verically in the page with touch movements, \nso that other nodes can remain fixed on the screen",
            "extends": "Utility",
            "construcor": "",
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying configuration properties",
                    "type": "Object"
                }
            ]
        },
        "Page": {
            "name": "Page",
            "shortname": "Page",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "appview",
            "namespace": "",
            "file": "build/appview.js",
            "line": 346,
            "description": "An standard application page. A page consists in a container and a navigation panel with a title and buttons.",
            "extends": "Widget",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying configuration properties",
                    "type": "Object"
                }
            ]
        },
        "AppView": {
            "name": "AppView",
            "shortname": "AppView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "appview",
            "namespace": "",
            "file": "build/appview.js",
            "line": 612,
            "description": "Basic class for creating an App. Should be used only once per app.",
            "extends": "Module",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying configuration properties",
                    "type": "Object"
                }
            ]
        },
        "EventFacade": {
            "name": "EventFacade",
            "shortname": "EventFacade",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "base",
            "namespace": "",
            "file": "build/base.js",
            "line": 42,
            "description": "A custom event object, only to be used by EventTarget",
            "is_constructor": 1
        },
        "EventTarget": {
            "name": "EventTarget",
            "shortname": "EventTarget",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "TimeFrame"
            ],
            "module": "base",
            "namespace": "",
            "file": "build/base.js",
            "line": 81,
            "description": "<p>A class designed to be inherited or used by other classes to provide custom events.</p>\n<p>Custom events work by attaching event listeners to a class that extends EventTarget.\nAn event listener can be a function or an object with a method called \"handleEvent\".\nIf it is a function, when fired the context will be the firing object. In the case of an object, the \ncontext will be the object itself.</p>\n<p>Attaching an object to the \"*\" event type allows for a different approach:</p>\n<code>\nsomeObj.handleEvent = function (e) {<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;switch (e.type) {<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case \"someEvent\":<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//do something<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case \"otherEvent\":<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//do something else<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\n};<br/>\neventProvider.on(\"*\", someObj);\n</code>",
            "is_constructor": 1
        },
        "Attribute": {
            "name": "Attribute",
            "shortname": "Attribute",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "base",
            "namespace": "",
            "file": "build/base.js",
            "line": 255,
            "description": "Provides get() and set() methods, along with getters, setters and options for configuration attributres",
            "extends": "EventTarget",
            "is_constructor": 1
        },
        "Base": {
            "name": "Base",
            "shortname": "Base",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "base",
            "namespace": "",
            "file": "build/base.js",
            "line": 410,
            "description": "Base class for all widgets and utilities.",
            "extends": "Attribute",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "Utility": {
            "name": "Utility",
            "shortname": "Utility",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "base",
            "namespace": "",
            "file": "build/base.js",
            "line": 537,
            "description": "Basic class for all utilities",
            "extends": "Base",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "Widget": {
            "name": "Widget",
            "shortname": "Widget",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "base",
            "namespace": "",
            "file": "build/base.js",
            "line": 567,
            "description": "Base class for all widgets. \nProvides show, hide, render and destroy methods, the rendering process logic\nand basic attributes shared by all widgets",
            "extends": "Base",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "Mouse": {
            "name": "Mouse",
            "shortname": "Mouse",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "base",
            "namespace": "",
            "file": "build/base.js",
            "line": 993,
            "description": "A utility for tracking the mouse movement without crashing the browser rendering engine.\nAlso allows for moving the mouse over iframes and other pesky elements",
            "is_constructor": 1,
            "extends": "Utility",
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying configuration properties",
                    "type": "Object"
                }
            ]
        },
        "Button": {
            "name": "Button",
            "shortname": "Button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "button",
            "namespace": "",
            "file": "build/button.js",
            "line": 35,
            "description": "A button widget",
            "extends": "Widget",
            "uses": [
                "WidgetChild"
            ],
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "ToggleButton": {
            "name": "ToggleButton",
            "shortname": "ToggleButton",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "button",
            "namespace": "",
            "file": "build/button.js",
            "line": 163,
            "description": "A button widget that selects/unselects itself when clicked",
            "extends": "Button",
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "ButtonGroup": {
            "name": "ButtonGroup",
            "shortname": "ButtonGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "button",
            "namespace": "",
            "file": "build/button.js",
            "line": 176,
            "description": "A group of buttons that can be styled as a pill",
            "extends": "Widget",
            "uses": [
                "WidgetParent"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "ComboOption": {
            "name": "ComboOption",
            "shortname": "ComboOption",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "button",
            "namespace": "",
            "file": "build/button.js",
            "line": 214,
            "description": "An option of a <select> element",
            "extends": "Widget",
            "uses": [
                "WidgetChild"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "ComboBox": {
            "name": "ComboBox",
            "shortname": "ComboBox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "button",
            "namespace": "",
            "file": "build/button.js",
            "line": 272,
            "description": "A ComboBox is a select html element",
            "extends": "Button",
            "uses": [
                "WidgetParent"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "RadioButton": {
            "name": "RadioButton",
            "shortname": "RadioButton",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "button",
            "namespace": "",
            "file": "build/button.js",
            "line": 391,
            "description": "A radio button",
            "extends": "Button",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "RadioGroup": {
            "name": "RadioGroup",
            "shortname": "RadioGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "button",
            "namespace": "",
            "file": "build/button.js",
            "line": 417,
            "description": "A group of radio buttons that interact together",
            "extends": "Widget",
            "uses": [
                "WidgetParent"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "Module": {
            "name": "Module",
            "shortname": "Module",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "container",
            "namespace": "",
            "file": "build/container.js",
            "line": 64,
            "description": "A module is a basic container with header, body and footer",
            "extends": "Widget",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "Overlay": {
            "name": "Overlay",
            "shortname": "Overlay",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "container",
            "namespace": "",
            "file": "build/container.js",
            "line": 184,
            "description": "An Overlay is a Module that floats in the page (doesn't have position static)",
            "is_constructor": 1,
            "extends": "Module",
            "uses": [
                "WidgetStack"
            ],
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "Tooltip": {
            "name": "Tooltip",
            "shortname": "Tooltip",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "container",
            "namespace": "",
            "file": "build/container.js",
            "line": 298,
            "description": "A simple tooltip implementation",
            "extends": "Widget",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "PanelBase": {
            "name": "PanelBase",
            "shortname": "PanelBase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Panel",
                "StaticPanel"
            ],
            "module": "container",
            "namespace": "",
            "file": "build/container.js",
            "line": 353,
            "description": "A panel is an overlay that resembles an OS window without actually being one,\nto the problems they have (stop javascript execution, etc)",
            "is_constructor": 1
        },
        "Panel": {
            "name": "Panel",
            "shortname": "Panel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "container",
            "namespace": "",
            "file": "build/container.js",
            "line": 438,
            "description": "A panel is an overlay that resembles an OS window without actually being one,\nto the problems they have (stop javascript execution, etc)",
            "extends": "Overlay",
            "uses": [
                "PanelBase"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "StaticPanel": {
            "name": "StaticPanel",
            "shortname": "StaticPanel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "container",
            "namespace": "",
            "file": "build/container.js",
            "line": 449,
            "description": "An panel with static position and a close button",
            "extends": "Module",
            "uses": [
                "PanelBase"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "SimpleDialog": {
            "name": "SimpleDialog",
            "shortname": "SimpleDialog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "container",
            "namespace": "",
            "file": "build/container.js",
            "line": 458,
            "description": "A SimpleDialog is a Panel with simple form options and a button row instead of the footer",
            "extends": "Panel",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "Cookie": {
            "name": "Cookie",
            "shortname": "Cookie",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cookie",
            "namespace": "",
            "file": "build/cookie.js",
            "line": 13,
            "description": "Provides abstracion for easier use of cookies",
            "static": 1
        },
        "Record": {
            "name": "Record",
            "shortname": "Record",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datasource",
            "namespace": "",
            "file": "build/datasource.js",
            "line": 45,
            "description": "A record is a Hash width a unique id",
            "is_constructor": 1,
            "params": [
                {
                    "name": "An",
                    "description": "object literal",
                    "type": "Object"
                }
            ]
        },
        "RecordSet": {
            "name": "RecordSet",
            "shortname": "RecordSet",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datasource",
            "namespace": "",
            "file": "build/datasource.js",
            "line": 89,
            "description": "A collections of Records",
            "extends": "EventTarget",
            "uses": [
                ""
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "data",
                    "description": "If data is passed, it is converted into several Records",
                    "type": "Array"
                }
            ]
        },
        "DataSource": {
            "name": "DataSource",
            "shortname": "DataSource",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datasource",
            "namespace": "",
            "file": "build/datasource.js",
            "line": 184,
            "description": "Base class for all data sources. The DataSource class shouldn't be used directly",
            "extends": "Utility",
            "access": "protected",
            "tagname": "",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "DataSource.Get": {
            "name": "DataSource.Get",
            "shortname": "DataSource.Get",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datasource",
            "namespace": "",
            "file": "build/datasource.js",
            "line": 470,
            "description": "A Get DataSource that uses JSON for getting data across domains",
            "extends": "DataSource",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying configuration properties",
                    "type": "Object"
                }
            ]
        },
        "DataSource.Ajax": {
            "name": "DataSource.Ajax",
            "shortname": "DataSource.Ajax",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datasource",
            "namespace": "",
            "file": "build/datasource.js",
            "line": 522,
            "description": "An AJAX DataSource",
            "extends": "DataSource",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "DataSource.XDR": {
            "name": "DataSource.XDR",
            "shortname": "DataSource.XDR",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datasource",
            "namespace": "",
            "file": "build/datasource.js",
            "line": 552,
            "description": "Cross-domain data source",
            "extends": "DataSource",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying configuration properties",
                    "type": "Object"
                }
            ]
        },
        "DataSource.Local": {
            "name": "DataSource.Local",
            "shortname": "DataSource.Local",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datasource",
            "namespace": "",
            "file": "build/datasource.js",
            "line": 583,
            "description": "A Local DataSource uses local variables",
            "extends": "DataSource",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "Cell": {
            "name": "Cell",
            "shortname": "Cell",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datatable",
            "namespace": "",
            "file": "build/datatable.js",
            "line": 20,
            "description": "A cell in a DataTable",
            "is_constructor": 1,
            "extends": "Base"
        },
        "Column": {
            "name": "Column",
            "shortname": "Column",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datatable",
            "namespace": "",
            "file": "build/datatable.js",
            "line": 63,
            "description": "Represents a column in a DataTable",
            "extends": "Base",
            "is_constructor": 1
        },
        "DataTable": {
            "name": "DataTable",
            "shortname": "DataTable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datatable",
            "namespace": "",
            "file": "build/datatable.js",
            "line": 157,
            "description": "A DataTable is an HTML table that can be sorted and linked to a DataSource",
            "extends": "Widget",
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ],
            "is_constructor": 1
        },
        "Deferred": {
            "name": "Deferred",
            "shortname": "Deferred",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "deferred",
            "namespace": "",
            "file": "build/deferred.js",
            "line": 43,
            "description": "A deferred keeps two lists of callbacks, one for the success scenario and another for the failure case.\nIt runs these callbacks once a call to resolve() or reject() is made.\n\nThis class is designed to augment others",
            "is_constructor": 1
        },
        "jet~deferred": {
            "name": "jet~deferred",
            "shortname": "jet~deferred",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "deferred",
            "namespace": "",
            "file": "build/deferred.js",
            "line": 180,
            "description": "Methods for working with asynchronous calls",
            "static": 1
        },
        "Drag": {
            "name": "Drag",
            "shortname": "Drag",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dragdrop",
            "namespace": "",
            "file": "build/dragdrop.js",
            "line": 22,
            "description": "Makes an element draggable",
            "extends": "Base",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "DragDrop": {
            "name": "DragDrop",
            "shortname": "DragDrop",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dragdrop",
            "namespace": "",
            "file": "build/dragdrop.js",
            "line": 162,
            "description": "DragDrop class",
            "extends": "Drag",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "Escape": {
            "name": "Escape",
            "shortname": "Escape",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "escape",
            "namespace": "",
            "file": "build/escape.js",
            "line": 18,
            "description": "Provides utility methods for escaping strings."
        },
        "FormField": {
            "name": "FormField",
            "shortname": "FormField",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "build/form.js",
            "line": 13,
            "extends": "Widget",
            "uses": [
                "WidgetChild"
            ],
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "CheckBox": {
            "name": "CheckBox",
            "shortname": "CheckBox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "build/form.js",
            "line": 78,
            "description": "A Checkbox",
            "extends": "FormField",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "FieldSet": {
            "name": "FieldSet",
            "shortname": "FieldSet",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "build/form.js",
            "line": 118,
            "extends": "Widget",
            "uses": [
                "WidgetParent",
                "WidgetChild"
            ],
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "Form": {
            "name": "Form",
            "shortname": "Form",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form",
            "namespace": "",
            "file": "build/form.js",
            "line": 180,
            "extends": "Widget",
            "uses": [
                "WidgetParent"
            ],
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "History": {
            "name": "History",
            "shortname": "History",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "history",
            "namespace": "",
            "file": "build/history.js",
            "line": 197,
            "description": "History management class",
            "extends": "Base",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying configuration properties",
                    "type": "Object"
                }
            ]
        },
        "Image": {
            "name": "Image",
            "shortname": "Image",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "imageloader",
            "namespace": "",
            "file": "build/imageloader.js",
            "line": 23,
            "description": "The Image class enhances the native class",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying image configuration properties",
                    "type": "Object"
                }
            ]
        },
        "ImageLoader": {
            "name": "ImageLoader",
            "shortname": "ImageLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "imageloader",
            "namespace": "",
            "file": "build/imageloader.js",
            "line": 177,
            "description": "Handles loading of multiple images",
            "is_constructor": 1,
            "extends": "Base",
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying configuration properties",
                    "type": "Object"
                }
            ]
        },
        "IO": {
            "name": "IO",
            "shortname": "IO",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "io",
            "namespace": "",
            "file": "build/io.js",
            "line": 139,
            "description": "Handles AJAX and JSONP requests",
            "static": 1
        },
        "Lang": {
            "name": "Lang",
            "shortname": "Lang",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "io",
            "namespace": "",
            "file": "build/jet.js",
            "line": 137,
            "description": "Provides utility methods for finding object types and other\nmethods that javascript provides in some browsers but not in others such as trim()",
            "static": 1
        },
        "Array": {
            "name": "Array",
            "shortname": "Array",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "io",
            "namespace": "",
            "file": "build/jet.js",
            "line": 347,
            "description": "Utilities for working with Arrays",
            "static": 1
        },
        "Object": {
            "name": "Object",
            "shortname": "Object",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "io",
            "namespace": "",
            "file": "build/jet.js",
            "line": 465,
            "description": "Utilities for working with object literals\nThroughout jet the Object type means an object lieteral",
            "static": 1
        },
        "ArrayList": {
            "name": "ArrayList",
            "shortname": "ArrayList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "WidgetParent"
            ],
            "module": "io",
            "namespace": "",
            "file": "build/jet.js",
            "line": 526,
            "description": "A collection of elements",
            "is_constructor": 1,
            "params": [
                {
                    "name": "items",
                    "description": "An element or an array of elements",
                    "type": "Array|Object"
                }
            ]
        },
        "UA": {
            "name": "UA",
            "shortname": "UA",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "io",
            "namespace": "",
            "file": "build/jet.js",
            "line": 693,
            "description": "Browser sniffing",
            "static": 1
        },
        "Get": {
            "name": "Get",
            "shortname": "Get",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "io",
            "namespace": "",
            "file": "build/jet.js",
            "line": 757,
            "description": "Loads scripts and CSS files.\nIncluded in the jet() core",
            "static": 1
        },
        "Core": {
            "name": "Core",
            "shortname": "Core",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "io",
            "namespace": "",
            "file": "build/jet.js",
            "line": 898,
            "description": "Core methods",
            "static": 1
        },
        "jet": {
            "name": "jet",
            "shortname": "jet",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "node",
            "namespace": "",
            "file": "build/jet.js",
            "line": 1422,
            "description": "<p>Global function. Returns an object with 2 methods: use() and add().</p>\n \n<code>jet().use(\"node\", function ($) {\n\t //do something with $\n});</code>\n\n<p>This snippet will load the Node module, and when it finishes loading it'll execute\nthe function. Each module must call the jet.add() method to tell the loader\nit has finished loading:</p>\n\n<code>jet.add(\"node\", function ($) {\n\t $.method = function () {};\n});</code>\n\n<p>A variable is passed to every module and the function defined in the use() method. \nThis variable acts as a main library and is shared by each module and the main\nfunction, but not between different calls to the \"use\" method. Ie:</p>\n\n<code>jet().use(\"node\", function ($) {\n\t $.testProperty = \"test\";\n});\n\njet().use(\"node\", function ($) {\n\t alert($.testProperty); //alerts \"undefined\"\n});</code>\n\n<p>Since it is a parameter, it can have any name but it still acts the same way. Also,\neach module is called in the order defined by the \"use\" method. So:</p>\n\n<code>jet().use(\"node\", \"anim\", function (L) {\n\t // Here the L variable contains both Node and Anim\n\t // The Node module is called first on L and the Anim module after,\n\t // so it can overwrite anything Node did, extend classes, etc\n});</code>\n\n<p>New modules can be defined by passing an object literal instead of a string to the\n\"use\" method with a \"name\" property and a \"path\" or \"fullpath\" property.</p> \n\n<code>jet().use(\"node\", {name:\"myModule\", fullpath:\"http://localhost/myModule.js\"}, function ($) {\n\t //do something\n});</code>\n\n<p>If \"path\" is defined instead of \"fullpath\", the loader will append \"path\"\nto a predefined base URL. This base URL can be modified by passing\nthe jet() function an object literal with a \"base\" property:</p>\n\n <code>jet({\n\t  base: \"http://www.mydomain.com/modules/\"\n }).use(\"node\", function ($) {\n\t  //in this case the \"core\" module is loaded from http://www.mydomain.com/modules/node.min.js\n });</code>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal with configuration options",
                    "type": "Object"
                }
            ]
        },
        "Event.Cache": {
            "name": "Event.Cache",
            "shortname": "Event.Cache",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "node",
            "namespace": "",
            "file": "build/jet.js",
            "line": 1616,
            "description": "Keeps a record of all listeners attached to the DOM in order to remove them when necessary",
            "static": 1
        },
        "DOMEventHandler": {
            "name": "DOMEventHandler",
            "shortname": "DOMEventHandler",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "node",
            "namespace": "",
            "file": "build/jet.js",
            "line": 1804,
            "description": "A collection of DOM Event handlers for later detaching",
            "is_constructor": 1,
            "params": [
                {
                    "name": "handlers",
                    "description": "",
                    "type": "Array"
                }
            ]
        },
        "DOM": {
            "name": "DOM",
            "shortname": "DOM",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "node",
            "namespace": "",
            "file": "build/jet.js",
            "line": 1831,
            "description": "Bla",
            "static": 1
        },
        "JSON": {
            "name": "JSON",
            "shortname": "JSON",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "json",
            "namespace": "",
            "file": "build/json.js",
            "line": 13,
            "description": "JSON parsing",
            "static": 1
        },
        "LayoutPanelBase": {
            "name": "LayoutPanelBase",
            "shortname": "LayoutPanelBase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "LayoutPanel",
                "Layout"
            ],
            "module": "layout",
            "namespace": "",
            "file": "build/layout.js",
            "line": 15,
            "description": "Base class used to create both the Layout and LayoutPanel classes.\nProvides functionality to resize panels keeping the declared layout structure",
            "is_constructor": 1
        },
        "LayoutPanel": {
            "name": "LayoutPanel",
            "shortname": "LayoutPanel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "layout",
            "namespace": "",
            "file": "build/layout.js",
            "line": 182,
            "description": "A Layout Panel is a resizable block which size is constrained by the other blocks in the same container",
            "uses": [
                "LayoutPanelBase",
                "WidgetParent",
                "WidgetChild"
            ],
            "extends": "Widget",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "Layout": {
            "name": "Layout",
            "shortname": "Layout",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "layout",
            "namespace": "",
            "file": "build/layout.js",
            "line": 198,
            "description": "A Layout is a container of Layout Panels",
            "uses": [
                "LayoutPanelBase",
                "WidgetParent"
            ],
            "extends": "Widget",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "Log": {
            "name": "Log",
            "shortname": "Log",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "log",
            "namespace": "",
            "file": "build/log.js",
            "line": 13,
            "description": "Adds the following methods to the $ object",
            "static": 1
        },
        "Class": {
            "name": "Class",
            "shortname": "Class",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "oop",
            "namespace": "",
            "file": "build/oop.js",
            "line": 13,
            "description": "Basic class from which all classes should inherit\nProvides the functionality for the 'initializer' method and mixins",
            "is_constructor": 1
        },
        "BuiltClass": {
            "name": "BuiltClass",
            "shortname": "BuiltClass",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "oop",
            "namespace": "",
            "file": "build/oop.js",
            "line": 122,
            "description": "Every class created with Class.create() shares this properties",
            "is_constructor": 1
        },
        "Paginator": {
            "name": "Paginator",
            "shortname": "Paginator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "paginator",
            "namespace": "",
            "file": "build/paginator.js",
            "line": 25,
            "description": "A simple paginator that works on top of a data source",
            "extends": "Widget",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying configuration properties",
                    "type": "Object"
                }
            ]
        },
        "ProgressBar": {
            "name": "ProgressBar",
            "shortname": "ProgressBar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "progressbar",
            "namespace": "",
            "file": "build/progressbar.js",
            "line": 23,
            "description": "A progressbar for informing the user of the status of loading resources.\nOther uses include equalizers, ratings, etc",
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying configuration properties",
                    "type": "Object"
                }
            ]
        },
        "Resize": {
            "name": "Resize",
            "shortname": "Resize",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "resize",
            "namespace": "",
            "file": "build/resize.js",
            "line": 37,
            "description": "Provides a utility for resizing elements",
            "extends": "Utility",
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying configuration properties",
                    "type": "Object"
                }
            ]
        },
        "SWF": {
            "name": "SWF",
            "shortname": "SWF",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "swf",
            "namespace": "",
            "file": "build/swf.js",
            "line": 27,
            "description": "A widget based Flash implementation. Does not work with progressive enhancement yet",
            "extends": "Widget",
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "Tab": {
            "name": "Tab",
            "shortname": "Tab",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "tabview",
            "namespace": "",
            "file": "build/tabview.js",
            "line": 27,
            "description": "A tab instance has a label and a panel",
            "extends": "Widget",
            "uses": [
                "WidgetChild"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying configuration properties",
                    "type": "Object"
                }
            ]
        },
        "TabView": {
            "name": "TabView",
            "shortname": "TabView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "tabview",
            "namespace": "",
            "file": "build/tabview.js",
            "line": 173,
            "description": "A view of tabs",
            "extends": "Widget",
            "uses": [
                "WidgetParent"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying configuration properties",
                    "type": "Object"
                }
            ]
        },
        "TreeNode": {
            "name": "TreeNode",
            "shortname": "TreeNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "treeview",
            "namespace": "",
            "file": "build/treeview.js",
            "line": 46,
            "description": "A node in a TreeView",
            "extends": "Widget",
            "uses": [
                "WidgetParent",
                "WidgetChild"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying configuration properties",
                    "type": "Object"
                }
            ]
        },
        "TreeView": {
            "name": "TreeView",
            "shortname": "TreeView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "treeview",
            "namespace": "",
            "file": "build/treeview.js",
            "line": 191,
            "description": "A labeled tree",
            "extends": "Widget",
            "uses": [
                "WidgetParent"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying configuration properties",
                    "type": "Object"
                }
            ]
        },
        "Vector": {
            "name": "Vector",
            "shortname": "Vector",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "vector",
            "namespace": "",
            "file": "build/vector.js",
            "line": 29,
            "description": "Basic Vector class\nA graphic represents a figure, an SVG element or its VML counterpart",
            "extends": "Attribute",
            "is_constructor": 1,
            "params": [
                {
                    "name": "configuration",
                    "description": "key/value pairs, as in the Attribute class",
                    "type": "Object"
                }
            ]
        },
        "Vector.Rectangle": {
            "name": "Vector.Rectangle",
            "shortname": "Vector.Rectangle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "vector",
            "namespace": "",
            "file": "build/vector.js",
            "line": 485,
            "description": "Draws a rectangle",
            "extends": "Vector",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "Vector.RoundedRectangle": {
            "name": "Vector.RoundedRectangle",
            "shortname": "Vector.RoundedRectangle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "vector",
            "namespace": "",
            "file": "build/vector.js",
            "line": 510,
            "description": "A rectangle with rounded corners",
            "extends": "Rectangle",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "Vector.Ellipse": {
            "name": "Vector.Ellipse",
            "shortname": "Vector.Ellipse",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "vector",
            "namespace": "",
            "file": "build/vector.js",
            "line": 522,
            "description": "An ellipse",
            "extends": "Vector",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "Vector.Circle": {
            "name": "Vector.Circle",
            "shortname": "Vector.Circle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "vector",
            "namespace": "",
            "file": "build/vector.js",
            "line": 602,
            "description": "A circle vector",
            "extends": "Vector",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "Vector.Line": {
            "name": "Vector.Line",
            "shortname": "Vector.Line",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "vector",
            "namespace": "",
            "file": "build/vector.js",
            "line": 668,
            "description": "A line vector",
            "extends": "Vector",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "Vector.Path": {
            "name": "Vector.Path",
            "shortname": "Vector.Path",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "vector",
            "namespace": "",
            "file": "build/vector.js",
            "line": 715,
            "description": "An Path vector",
            "extends": "Vector",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "Vector.Text": {
            "name": "Vector.Text",
            "shortname": "Vector.Text",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "vector",
            "namespace": "",
            "file": "build/vector.js",
            "line": 738,
            "description": "A Text vector",
            "extends": "Vector",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "Vector.Image": {
            "name": "Vector.Image",
            "shortname": "Vector.Image",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "vector",
            "namespace": "",
            "file": "build/vector.js",
            "line": 750,
            "description": "An Image vector",
            "extends": "Vector",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "VectorView": {
            "name": "VectorView",
            "shortname": "VectorView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "vector",
            "namespace": "",
            "file": "build/vector.js",
            "line": 762,
            "description": "A canvas for Vectors",
            "extends": "Widget",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "WidgetAlignment": {
            "name": "WidgetAlignment",
            "shortname": "WidgetAlignment",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "widget-alignment",
            "namespace": "",
            "file": "build/widget-alignment.js",
            "line": 26,
            "description": "A widget extension that provides alignment support",
            "is_constructor": 1
        },
        "WidgetParent": {
            "name": "WidgetParent",
            "shortname": "WidgetParent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "ButtonGroup",
                "ComboBox",
                "RadioGroup",
                "FieldSet",
                "Form",
                "LayoutPanel",
                "Layout",
                "TabView",
                "TreeNode",
                "TreeView"
            ],
            "module": "widget-parentchild",
            "namespace": "",
            "file": "build/widget-parentchild.js",
            "line": 30,
            "description": "A widget extension that makes the current widget contein child widgets",
            "uses": [
                "ArrayList"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "WidgetChild": {
            "name": "WidgetChild",
            "shortname": "WidgetChild",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Button",
                "ComboOption",
                "FormField",
                "FieldSet",
                "LayoutPanel",
                "Tab",
                "TreeNode"
            ],
            "module": "widget-parentchild",
            "namespace": "",
            "file": "build/widget-parentchild.js",
            "line": 316,
            "description": "An extension that turns a widget into a child widget",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties",
                    "type": "Object"
                }
            ]
        },
        "Frame": {
            "name": "Frame",
            "shortname": "Frame",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "widget-sandbox",
            "namespace": "",
            "file": "build/widget-sandbox.js",
            "line": 23,
            "description": "Creates a wrapper around an iframe. It loads the content either from a local\nfile or from script and creates a local YUI instance bound to that new window and document.",
            "extends": "Base",
            "is_constructor": 1
        },
        "Sandbox": {
            "name": "Sandbox",
            "shortname": "Sandbox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "widget-sandbox",
            "namespace": "",
            "file": "build/widget-sandbox.js",
            "line": 527,
            "description": "An extension that sandboxes a widget by putting its contentBox inside an iframe",
            "is_constructor": 1
        },
        "WidgetStack": {
            "name": "WidgetStack",
            "shortname": "WidgetStack",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Overlay"
            ],
            "module": "widget-stack",
            "namespace": "",
            "file": "build/widget-stack.js",
            "line": 27,
            "description": "Provides stacking support via zIndex and shimming support with iframes",
            "is_constructor": 1
        }
    },
    "classitems": [
        {
            "file": "build/anim.js",
            "line": 50,
            "itemtype": "method",
            "name": "linear",
            "description": "Linear easing",
            "params": [
                {
                    "name": "x",
                    "description": "The time variable",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "The start value of the property that will be changed",
                    "type": "Number"
                },
                {
                    "name": "yf",
                    "description": "The final value of the property that will be changed",
                    "type": "Number"
                },
                {
                    "name": "dur",
                    "description": "Duration of the animation",
                    "type": "Number"
                }
            ],
            "class": "Easing",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 61,
            "itemtype": "method",
            "name": "easein",
            "description": "An easing that's stronger at the beginning and softer at the end",
            "params": [
                {
                    "name": "x",
                    "description": "The time variable",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "The start value of the property that will be changed",
                    "type": "Number"
                },
                {
                    "name": "yf",
                    "description": "The final value of the property that will be changed",
                    "type": "Number"
                },
                {
                    "name": "dur",
                    "description": "Duration of the animation",
                    "type": "Number"
                },
                {
                    "name": "pw",
                    "description": "Easing strengh",
                    "type": "Number"
                }
            ],
            "class": "Easing",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 73,
            "itemtype": "method",
            "name": "easeout",
            "description": "An easing that's softer at the beginning and stronger at the end",
            "params": [
                {
                    "name": "x",
                    "description": "The time variable",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "The start value of the property that will be changed",
                    "type": "Number"
                },
                {
                    "name": "yf",
                    "description": "The final value of the property that will be changed",
                    "type": "Number"
                },
                {
                    "name": "dur",
                    "description": "Duration of the animation",
                    "type": "Number"
                },
                {
                    "name": "pw",
                    "description": "Easing strengh",
                    "type": "Number"
                }
            ],
            "class": "Easing",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 88,
            "itemtype": "method",
            "name": "sling",
            "description": "An easing that goes back before going forward",
            "params": [
                {
                    "name": "x",
                    "description": "The time variable",
                    "type": "Number"
                },
                {
                    "name": "y0",
                    "description": "The start value of the property that will be changed",
                    "type": "Number"
                },
                {
                    "name": "yf",
                    "description": "The final value of the property that will be changed",
                    "type": "Number"
                },
                {
                    "name": "dur",
                    "description": "Duration of the animation",
                    "type": "Number"
                },
                {
                    "name": "pw",
                    "description": "Easing strengh",
                    "type": "Number"
                }
            ],
            "class": "Easing",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 116,
            "itemtype": "property",
            "name": "fps",
            "description": "Refresh speed in frames per second.\nCan't be changed during playback",
            "default": "35",
            "class": "TimeFrame",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 123,
            "itemtype": "method",
            "name": "play",
            "description": "Starts the playback",
            "chainable": 1,
            "class": "TimeFrame",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 142,
            "itemtype": "method",
            "name": "stop",
            "description": "Stops the playback",
            "chainable": 1,
            "class": "TimeFrame",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 154,
            "itemtype": "method",
            "name": "addTween",
            "description": "Adds a Tween to the queue",
            "params": [
                {
                    "name": "tween",
                    "description": "",
                    "type": "Tween"
                }
            ],
            "chainable": 1,
            "class": "TimeFrame",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 164,
            "itemtype": "method",
            "name": "removeTween",
            "description": "Removes a Tween from the queue",
            "params": [
                {
                    "name": "tween",
                    "description": "",
                    "type": "Tween"
                }
            ],
            "chainable": 1,
            "class": "TimeFrame",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 187,
            "itemtype": "attribute",
            "name": "node",
            "description": "The node that will be animated",
            "required": "",
            "writeonce": "",
            "class": "Tween",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 196,
            "itemtype": "attribute",
            "name": "from",
            "description": "an object literal with properties that will be animated",
            "type": "Object",
            "class": "Tween",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 204,
            "itemtype": "attribute",
            "name": "to",
            "description": "an object literal with the target properties for the animation",
            "type": "Object",
            "class": "Tween",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 212,
            "itemtype": "attribute",
            "name": "easing",
            "description": "The easing used by the animation",
            "type": "Function",
            "default": "Easing.linear",
            "class": "Tween",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 224,
            "itemtype": "attribute",
            "name": "easingStrength",
            "description": "The strength of the easing if applicable. Must be >= 0",
            "type": "Number",
            "default": "2",
            "class": "Tween",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 236,
            "itemtype": "attribute",
            "name": "duration",
            "description": "The duration of the animation",
            "default": "1000",
            "type": "{String | Number} Allowd strings: \"fast\", \"slow\", \"normal\". Numbers are milliseconds",
            "class": "Tween",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 251,
            "itemtype": "attribute",
            "name": "playing",
            "description": "Whether the animation is playing or not",
            "readonly": "",
            "type": "Boolean",
            "class": "Tween",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 261,
            "itemtype": "attribute",
            "name": "startTime",
            "description": "Start time is used to calculate the elapsed time of the animation",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "Tween",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 270,
            "description": "Previous time is used for pausing. It keeps how much time had\nelapsed in the last run before the tween was _paused_.\nWhen stopped, \"previous\" is reset to 0.",
            "itemtype": "attribute",
            "name": "previousTime",
            "access": "private",
            "tagname": "",
            "class": "Tween",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 317,
            "description": "Play the tween's animation",
            "itemtype": "method",
            "name": "play",
            "params": [
                {
                    "name": "startTime",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "frameLength",
                    "description": "",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "Tween",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 366,
            "description": "Stops the tween",
            "itemtype": "method",
            "name": "stop",
            "chainable": 1,
            "class": "Tween",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 379,
            "description": "Pauses the tween",
            "itemtype": "method",
            "name": "pause",
            "chainable": 1,
            "class": "Tween",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 391,
            "description": "Reverses the tween",
            "itemtype": "method",
            "name": "reverse",
            "chainable": 1,
            "class": "Tween",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 405,
            "itemtype": "method",
            "name": "animate",
            "description": "Animates all members of the node list. <strong>Requires the Anim module</strong>",
            "params": [
                {
                    "name": "props",
                    "description": "",
                    "type": "Hash"
                },
                {
                    "name": "duration",
                    "description": "The duration in ms or 'fast', 'normal', or 'slow'",
                    "type": "Number | String"
                },
                {
                    "name": "easing",
                    "description": "A predefined easing function ('linear', 'easein', 'easeout', 'sling') or a custom easing function",
                    "type": "String | Function"
                },
                {
                    "name": "callback",
                    "description": "Executes when the animation is complete",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "class": "NodeList",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 427,
            "itemtype": "method",
            "name": "fadeIn",
            "description": "Causes all nodes to fade in. <strong>Requires the Anim module</strong>",
            "params": [
                {
                    "name": "duration",
                    "description": "The duration in ms or 'fast', 'normal', or 'slow'",
                    "type": "Number | String"
                },
                {
                    "name": "easing",
                    "description": "A predefined easing function ('linear', 'easein', 'easeout', 'sling') or a custom easing function",
                    "type": "String | Function"
                },
                {
                    "name": "callback",
                    "description": "Executes when the animation is complete",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "class": "NodeList",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 441,
            "itemtype": "method",
            "name": "fadeOut",
            "description": "Causes all nodes to fade out. <strong>Requires the Anim module</strong>",
            "params": [
                {
                    "name": "duration",
                    "description": "The duration in ms or 'fast', 'normal', or 'slow'",
                    "type": "Number | String"
                },
                {
                    "name": "easing",
                    "description": "A predefined easing function ('linear', 'easein', 'easeout', 'sling') or a custom easing function",
                    "type": "String | Function"
                },
                {
                    "name": "callback",
                    "description": "Executes when the animation is complete",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "class": "NodeList",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 455,
            "itemtype": "method",
            "name": "fadeToggle",
            "description": "Causes all nodes to fade in or out. <strong>Requires the Anim module</strong>",
            "params": [
                {
                    "name": "duration",
                    "description": "The duration in ms or 'fast', 'normal', or 'slow'",
                    "type": "Number | String"
                },
                {
                    "name": "easing",
                    "description": "A predefined easing function ('linear', 'easein', 'easeout', 'sling') or a custom easing function",
                    "type": "String | Function"
                },
                {
                    "name": "callback",
                    "description": "Executes when the animation is complete",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "class": "NodeList",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 479,
            "itemtype": "method",
            "name": "slideDown",
            "description": "Causes all nodes to slide down, changing their height and setting their overflow\n to hidden for the duration of the animation. <strong>Requires the Anim module</strong>",
            "params": [
                {
                    "name": "duration",
                    "description": "The duration in ms or 'fast', 'normal', or 'slow'",
                    "type": "Number | String"
                },
                {
                    "name": "easing",
                    "description": "A predefined easing function ('linear', 'easein', 'easeout', 'sling') or a custom easing function",
                    "type": "String | Function"
                },
                {
                    "name": "callback",
                    "description": "Executes when the animation is complete",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "class": "NodeList",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 497,
            "itemtype": "method",
            "name": "slideUp",
            "description": "Causes all nodes to slide up, changing their height and setting their overflow\n to hidden for the duration of the animation. <strong>Requires the Anim module</strong>",
            "params": [
                {
                    "name": "duration",
                    "description": "The duration in ms or 'fast', 'normal', or 'slow'",
                    "type": "Number | String"
                },
                {
                    "name": "easing",
                    "description": "A predefined easing function ('linear', 'easein', 'easeout', 'sling') or a custom easing function",
                    "type": "String | Function"
                },
                {
                    "name": "callback",
                    "description": "Executes when the animation is complete",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "class": "NodeList",
            "module": "anim"
        },
        {
            "file": "build/anim.js",
            "line": 517,
            "itemtype": "method",
            "name": "stop",
            "description": "Makes the current animation for this nodelist stop. <strong>Requires the Anim module</strong>",
            "chainable": 1,
            "class": "NodeList",
            "module": "anim"
        },
        {
            "file": "build/appview.js",
            "line": 22,
            "itemtype": "config",
            "name": "loading",
            "description": "Whether the loader is in its 'loading' status. Settng 'loading' to false will stop it",
            "default": "false",
            "class": "FanLoader",
            "module": "appview"
        },
        {
            "file": "build/appview.js",
            "line": 30,
            "itemtype": "config",
            "name": "blades",
            "description": "Number of blades in the fan",
            "default": "12",
            "writeonce": "",
            "class": "FanLoader",
            "module": "appview"
        },
        {
            "file": "build/appview.js",
            "line": 40,
            "itemtype": "config",
            "name": "radius",
            "description": "Radius of the fan in pixels. Shouldn't be set with CSS. This resizes the fan so that proportions are kept",
            "default": "40",
            "class": "FanLoader",
            "module": "appview"
        },
        {
            "file": "build/appview.js",
            "line": 48,
            "itemtype": "config",
            "name": "duration",
            "description": "Duration of a revolution in milliseconds",
            "default": "1000",
            "class": "FanLoader",
            "module": "appview"
        },
        {
            "file": "build/appview.js",
            "line": 87,
            "itemtype": "method",
            "name": "start",
            "description": "starts spinning",
            "chainable": 1,
            "class": "FanLoader",
            "module": "appview"
        },
        {
            "file": "build/appview.js",
            "line": 95,
            "itemtype": "method",
            "name": "stop",
            "description": "stops spinning",
            "chainable": 1,
            "class": "FanLoader",
            "module": "appview"
        },
        {
            "file": "build/appview.js",
            "line": 174,
            "itemtype": "attribute",
            "name": "node",
            "description": "node to be scrolled",
            "required": "",
            "class": "Scrollable",
            "module": "appview"
        },
        {
            "file": "build/appview.js",
            "line": 183,
            "itemtype": "attribute",
            "name": "scrollTop",
            "description": "vertical scroll position",
            "class": "Scrollable",
            "module": "appview"
        },
        {
            "file": "build/appview.js",
            "line": 193,
            "itemtype": "attribute",
            "name": "scrolling",
            "description": "Whether the element is scrolling or not. Can be used to stop the scrolling behavior",
            "default": "true",
            "class": "Scrollable",
            "module": "appview"
        },
        {
            "file": "build/appview.js",
            "line": 328,
            "itemtype": "method",
            "name": "scrollTo",
            "description": "Scrolls to a certain vertical position",
            "chainable": 1,
            "class": "Scrollable",
            "module": "appview"
        },
        {
            "file": "build/appview.js",
            "line": 356,
            "itemtype": "config",
            "name": "navHolder",
            "description": "A reference to the node that contains the navigation in an AppView",
            "required": "",
            "class": "Page",
            "module": "appview"
        },
        {
            "file": "build/appview.js",
            "line": 364,
            "itemtype": "config",
            "name": "nav",
            "description": "This page's navigation node",
            "readonly": "",
            "class": "Page",
            "module": "appview"
        },
        {
            "file": "build/appview.js",
            "line": 379,
            "itemtype": "config",
            "name": "titleContent",
            "description": "Title of the page",
            "type": "String",
            "class": "Page",
            "module": "appview"
        },
        {
            "file": "build/appview.js",
            "line": 387,
            "ocnfig": "back",
            "description": "Configuration object for the 'back' button",
            "type": "Object",
            "class": "Page",
            "module": "appview"
        },
        {
            "file": "build/appview.js",
            "line": 394,
            "ocnfig": "back",
            "description": "Configuration object for the 'forward' button",
            "type": "Object",
            "class": "Page",
            "module": "appview"
        },
        {
            "file": "build/appview.js",
            "line": 401,
            "itemtype": "config",
            "name": "loading",
            "description": "If 'loading' is set to true, a loading indicator is shown in the middle of the page and all other content is hidden",
            "default": "false",
            "class": "Page",
            "module": "appview"
        },
        {
            "file": "build/appview.js",
            "line": 409,
            "itemtype": "config",
            "name": "scrollable",
            "description": "If set to true, the page will scroll vertically",
            "class": "Page",
            "module": "appview"
        },
        {
            "file": "build/appview.js",
            "line": 416,
            "itemtype": "config",
            "name": "loadScreen",
            "description": "the load screen node",
            "readonly": "",
            "class": "Page",
            "module": "appview"
        },
        {
            "file": "build/appview.js",
            "line": 425,
            "itemtype": "config",
            "name": "loadingText",
            "description": "Text for the 'loading' status",
            "default": "'Cargando...'",
            "writeonce": "",
            "class": "Page",
            "module": "appview"
        },
        {
            "file": "build/appview.js",
            "line": 435,
            "itemtype": "config",
            "name": "children",
            "description": "An array of all this page's children",
            "readonly": "",
            "class": "Page",
            "module": "appview"
        },
        {
            "file": "build/appview.js",
            "line": 509,
            "itemtype": "method",
            "name": "appendChild",
            "description": "adds a child. This is for reference purposes only, it doesn't make any DOM changes",
            "chainable": 1,
            "class": "Page",
            "module": "appview"
        },
        {
            "file": "build/appview.js",
            "line": 518,
            "itemtype": "method",
            "name": "removeChild",
            "description": "removes a child. This is for reference purposes only, it doesn't make any DOM changes",
            "chainable": 1,
            "class": "Page",
            "module": "appview"
        },
        {
            "file": "build/appview.js",
            "line": 574,
            "itemtype": "event",
            "name": "slideEnd",
            "description": "fires then the slide effect has ended",
            "class": "Page",
            "module": "appview"
        },
        {
            "file": "build/appview.js",
            "line": 623,
            "itemtype": "config",
            "name": "nav",
            "description": "app navigation node",
            "readonly": "",
            "class": "AppView",
            "module": "appview"
        },
        {
            "file": "build/appview.js",
            "line": 632,
            "itemtype": "config",
            "name": "preventScroll",
            "description": "Whether to prevent the default scrolling behavior of the browser (recommended)",
            "default": "true",
            "type": "Boolean",
            "class": "AppView",
            "module": "appview"
        },
        {
            "file": "build/array-extras.js",
            "line": 81,
            "description": "Creates a new array with the results of calling a provided function on every element in this array",
            "itemtype": "method",
            "name": "map",
            "params": [
                {
                    "name": "arr",
                    "description": "The Array to map",
                    "type": "Array"
                },
                {
                    "name": "callback",
                    "description": "Function that produces an element of the new Array from an element of the current one",
                    "type": "Function"
                },
                {
                    "name": "thisp",
                    "description": "Object to use as 'this' when executing 'callback'",
                    "type": "Object"
                }
            ],
            "class": "EventFacade",
            "module": "array-extras"
        },
        {
            "file": "build/base.js",
            "line": 49,
            "itemtype": "property",
            "name": "type",
            "description": "The type of the event",
            "class": "EventFacade",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 54,
            "itemtype": "property",
            "name": "target",
            "description": "The target of the event",
            "class": "EventFacade",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 59,
            "itemtype": "method",
            "name": "preventDefault",
            "description": "Prevents the default behavior of the event",
            "class": "EventFacade",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 144,
            "description": "Adds an event listener",
            "itemtype": "method",
            "name": "addListener",
            "params": [
                {
                    "name": "eventType",
                    "description": "Name of the event to listen to",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Callback to execute when the event fires",
                    "type": "Function"
                },
                {
                    "name": "thisp",
                    "description": "Optional. Context on which the callback will run",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "EventTarget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 156,
            "description": "Listens to an event only once",
            "itemtype": "method",
            "name": "once",
            "params": [
                {
                    "name": "eventType",
                    "description": "Name of the event to listen to",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Callback to execute when the event fires",
                    "type": "Function"
                },
                {
                    "name": "thisp",
                    "description": "Optional. Context on which the callback will run",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "EventTarget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 168,
            "description": "Listens to an 'after' event. This is a shortcut for writing on('afterEvent'), callback)",
            "itemtype": "method",
            "name": "after",
            "params": [
                {
                    "name": "eventType",
                    "description": "Name of the event to listen to",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Callback to execute when the event fires",
                    "type": "Function"
                },
                {
                    "name": "thisp",
                    "description": "Optional. Context on which the callback will run",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "EventTarget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 179,
            "description": "Removes and event listener",
            "itemtype": "method",
            "name": "removeListener",
            "params": [
                {
                    "name": "eventType",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "class": "EventTarget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 209,
            "description": "Fires an event, executing all its listeners",
            "itemtype": "method",
            "name": "fire",
            "params": [
                {
                    "name": "eventType!~YUIDOC_LINE~!Extra",
                    "description": "parameters will be passed to all event listeners",
                    "type": "String"
                }
            ],
            "class": "EventTarget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 236,
            "description": "Alias for EventTarget#addListener",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "eventType",
                    "description": "Name of the event to listen to",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Callback to execute when the event fires",
                    "type": "Function"
                },
                {
                    "name": "thisp",
                    "description": "Optional. Context on which the callback will run",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "EventTarget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 245,
            "description": "Alias for EventTarget#removeListener",
            "itemtype": "method",
            "name": "removeListener",
            "params": [
                {
                    "name": "eventType",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "class": "EventTarget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 268,
            "description": "Adds a configuration attribute, along with its options",
            "itemtype": "method",
            "name": "addAttr",
            "params": [
                {
                    "name": "attrName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "",
                    "type": "$Object"
                }
            ],
            "chainable": 1,
            "class": "Attribute",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 335,
            "description": "Returns a configuration attribute",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "attrName",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Attribute",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 356,
            "description": "Sets a configuration attribute",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "attrName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "attrValue",
                    "description": "",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "Attribute",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 374,
            "description": "Unsets a configuration attribute",
            "itemtype": "method",
            "name": "unset",
            "params": [
                {
                    "name": "attrName",
                    "description": "",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "class": "Attribute",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 384,
            "description": "Adds several configuration attributes",
            "itemtype": "method",
            "name": "addAttrs",
            "params": [
                {
                    "name": "config",
                    "description": "- key/value pairs of attribute names and configs",
                    "type": "$Object"
                }
            ],
            "chainable": 1,
            "class": "Attribute",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 394,
            "description": "Returns a key/value paired object with all attributes",
            "itemtype": "method",
            "name": "getAttrs",
            "return": {
                "description": "",
                "type": "$Object"
            },
            "class": "Attribute",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 461,
            "description": "Starts the destruction lifecycle",
            "itemtype": "method",
            "name": "destroy",
            "class": "Base",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 466,
            "description": "Preventing the default behavior will stop the destroy process",
            "itemtype": "event",
            "name": "destroy",
            "class": "Base",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 490,
            "description": "Allows quick setting of custom events in the constructor",
            "itemtype": "config",
            "name": "on",
            "class": "Base",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 499,
            "description": "Allows quick setting of 'after' event listeners in the constructor",
            "itemtype": "config",
            "name": "after",
            "class": "Base",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 549,
            "itemtype": "attribute",
            "name": "cssPrefix",
            "default": "Utility.CSS_PREFIX",
            "writeonce": "",
            "class": "Utility",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 578,
            "itemtype": "property",
            "name": "CSS_PREFIX",
            "description": "Default prefix for all css classes used in widget by the getClassName() method",
            "static": 1,
            "default": "'jet'",
            "class": "Widget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 588,
            "itemtype": "property",
            "name": "DOM_EVENTS",
            "description": "DOM events that are routed automatically to the widget instance",
            "static": 1,
            "default": "{ click: 1, keypress: 1, mousedown: 1, mouseup: 1, mouseover: 1, mouseout: 1 }",
            "class": "Widget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 604,
            "itemtype": "attribute",
            "name": "srcNode",
            "description": "The node to which the widget will be appended to. May be set as a \nconfiguration attribute, with a setter or as the first parameter of the render() method",
            "type": "DOMNode | NodeList",
            "class": "Widget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 614,
            "itemtype": "attribute",
            "name": "classPrefix",
            "description": "Prefix for all CSS clases. Useful for renaming the project",
            "default": "Widget.CSS_PREFIX",
            "writeonce": "",
            "class": "Widget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 626,
            "itemtype": "attribute",
            "name": "rendered",
            "description": "Rendered status. Shouldn't be changed by anything appart from the Widget.render() method",
            "writeonce": "",
            "default": "false",
            "class": "Widget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 635,
            "description": "The bounding box contains all the parts of the widget",
            "itemtype": "attribute",
            "name": "boundingBox",
            "writeonce": "",
            "type": "NodeList",
            "default": "uses BOUNDING_TEMPLATE instance property",
            "class": "Widget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 645,
            "itemtype": "attribute",
            "name": "contentBox",
            "description": "Another container inside the boundingBox added in order to have a more complex design",
            "writeonce": "",
            "type": "NodeList",
            "default": "uses CONTENT_TEMPLATE instance property",
            "class": "Widget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 655,
            "itemtype": "attribute",
            "name": "width",
            "description": "The width of the overlay",
            "type": "Number",
            "class": "Widget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 663,
            "itemtype": "attribute",
            "name": "height",
            "description": "The height of the overlay.\nIf set to 0 (zero) the height changes with the content",
            "type": "Number",
            "class": "Widget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 672,
            "itemtype": "attribute",
            "name": "id",
            "description": "The id of the widget",
            "default": "class prefix + widget count",
            "class": "Widget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 679,
            "itemtype": "attribute",
            "name": "visible",
            "description": "The visibility status of the widget",
            "default": "true",
            "type": "Boolean",
            "class": "Widget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 689,
            "itemtype": "attribute",
            "name": "disabled",
            "description": "The disabled status of the widget",
            "default": "false",
            "type": "Boolean",
            "class": "Widget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 714,
            "itemtype": "method",
            "name": "getByNode",
            "description": "Returns a widget instance based on a node",
            "static": 1,
            "class": "Widget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 740,
            "description": "Shows the widget",
            "itemtype": "method",
            "name": "show",
            "chainable": 1,
            "class": "Widget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 748,
            "description": "Hides the widget",
            "itemtype": "method",
            "name": "hide",
            "chainable": 1,
            "class": "Widget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 756,
            "description": "Enables the widget",
            "itemtype": "method",
            "name": "enable",
            "chainable": 1,
            "class": "Widget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 764,
            "description": "Disables the widget",
            "itemtype": "method",
            "name": "enable",
            "chainable": 1,
            "class": "Widget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 772,
            "description": "Focuses the widget",
            "itemtype": "method",
            "name": "focus",
            "chainable": 1,
            "class": "Widget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 780,
            "description": "Blurrs the element",
            "itemtype": "method",
            "name": "blur",
            "chainable": 1,
            "class": "Widget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 855,
            "description": "Starts the rendering process. The rendering process is based on custom events.\nThe widget class fires a 'render' event to which all subclasses must subscribe.\nThis way all listeners are fired in the order of the inheritance chain. ie:\nIn the Overlay class, the render process is:\n<code>render() method -> Module listener -> Overlay listener -> rest of the render() method (appends the boundingBox to the srcNode)</code>\nThis helps to use an easy pattern of OOP CSS: each subclass adds a CSS class name to the boundingBox,\nfor example resulting in <div class=\"jet-module jet-overlay jet-panel\"></div>. That way\na panel can inherit css properties from module and overlay.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "NodeList|HTMLElement"
                }
            ],
            "chainable": 1,
            "class": "Widget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 874,
            "description": "Render event. Preventing the default behavior will stop the rendering process",
            "itemtype": "event",
            "name": "render",
            "see": [
                "Widget.render()"
            ],
            "class": "Widget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 884,
            "description": "Fires after the render lifecycle finished. It is also fired after a timeout of 0 milliseconds, \nso it is added to the execution queue rather than fired synchronously",
            "itemtype": "event",
            "name": "afterRender",
            "class": "Widget",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 1004,
            "description": "Frequency at which the tracker updates",
            "itemtype": "attribute",
            "name": "frequency",
            "default": "20 (ms)",
            "type": "Number",
            "class": "Mouse",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 1013,
            "description": "Tracking status. Set it to true to start tracking",
            "itemtype": "attribute",
            "name": "tracking",
            "type": "Boolean",
            "default": "false",
            "class": "Mouse",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 1110,
            "description": "Fires when the mouse button is released",
            "itemtype": "event",
            "name": "mouseup",
            "class": "Mouse",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 1124,
            "description": "Fires not when the mouse moves, but in an interval defined by the frequency attribute\nThis way you can track the mouse position without breakin the browser's rendering engine\nbecause the native mousemove event fires too quickly",
            "itemtype": "event",
            "name": "move",
            "class": "Mouse",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 1146,
            "description": "Start tracking. Equivalent to setting the tracking attribute to true.\nSimulates the mousedown event",
            "itemtype": "method",
            "name": "down",
            "chainable": 1,
            "class": "Mouse",
            "module": "base"
        },
        {
            "file": "build/base.js",
            "line": 1155,
            "description": "Stop tracking. Equivalent to setting the tracking attribute to false\nSimulates the mouseup event",
            "itemtype": "method",
            "name": "up",
            "chainable": 1,
            "class": "Mouse",
            "module": "base"
        },
        {
            "file": "build/button.js",
            "line": 45,
            "itemtype": "attribute",
            "name": "enabled",
            "description": "Enabled status of the button",
            "type": "Boolean",
            "default": "true",
            "class": "Button",
            "module": "button"
        },
        {
            "file": "build/button.js",
            "line": 55,
            "itemtype": "attribute",
            "name": "labelNode",
            "description": "Pointer to the <label> node related to this button",
            "type": "NodeList",
            "readonly": "",
            "class": "Button",
            "module": "button"
        },
        {
            "file": "build/button.js",
            "line": 65,
            "itemtype": "attribute",
            "name": "labelContent",
            "description": "Text of this button's label",
            "type": "String",
            "default": "null",
            "class": "Button",
            "module": "button"
        },
        {
            "file": "build/button.js",
            "line": 75,
            "itemtype": "attribute",
            "name": "text",
            "description": "Text inside the button",
            "default": "''",
            "class": "Button",
            "module": "button"
        },
        {
            "file": "build/button.js",
            "line": 189,
            "itemtype": "attribute",
            "name": "pill",
            "description": "Whether this button group should be styled as a pill",
            "type": "Boolean",
            "default": "false",
            "class": "ButtonGroup",
            "module": "button"
        },
        {
            "file": "build/button.js",
            "line": 224,
            "itemtype": "attribute",
            "name": "value",
            "description": "Sets/returns the value of the option",
            "class": "ComboOption",
            "module": "button"
        },
        {
            "file": "build/button.js",
            "line": 233,
            "itemtype": "attribute",
            "name": "text",
            "description": "Sets/returns the text of the option",
            "class": "ComboOption",
            "module": "button"
        },
        {
            "file": "build/button.js",
            "line": 427,
            "itemtype": "attribute",
            "name": "multiple",
            "description": "Boolean indicating if multiple children can be selected at once. Whether or not multiple selection is enabled is always delegated to the value of the multiple attribute of the root widget in the object hierarchy",
            "default": "false",
            "readonly": "",
            "class": "RadioGroup",
            "module": "button"
        },
        {
            "file": "build/button.js",
            "line": 437,
            "itemtype": "attribute",
            "name": "name",
            "description": "Name attribute of all radio buttons in the group",
            "readonly": "",
            "class": "RadioGroup",
            "module": "button"
        },
        {
            "file": "build/container.js",
            "line": 73,
            "itemtype": "attribute",
            "name": "header",
            "description": "A pointer to the header node",
            "writeonce": "",
            "class": "Module",
            "module": "container"
        },
        {
            "file": "build/container.js",
            "line": 82,
            "itemtype": "attribute",
            "name": "body",
            "description": "A pointer to the body node",
            "writeonce": "",
            "class": "Module",
            "module": "container"
        },
        {
            "file": "build/container.js",
            "line": 91,
            "itemtype": "attribute",
            "name": "footer",
            "description": "A pointer to the footer node",
            "writeonce": "",
            "class": "Module",
            "module": "container"
        },
        {
            "file": "build/container.js",
            "line": 100,
            "itemtype": "attribute",
            "name": "headerContent",
            "description": "The header of the module.\nIf set to a string a node is creating and the string is set to its innerHTML",
            "type": "DOM Node | String | NodeList",
            "class": "Module",
            "module": "container"
        },
        {
            "file": "build/container.js",
            "line": 109,
            "itemtype": "attribute",
            "name": "bodyContent",
            "description": "The body of the module.\nIf set to a string a node is creating and the string is set to its innerHTML\nA body is always present in a Module",
            "type": "DOM Node | String | NodeList",
            "default": "\"\"",
            "class": "Module",
            "module": "container"
        },
        {
            "file": "build/container.js",
            "line": 121,
            "itemtype": "attribute",
            "name": "footerContent",
            "description": "The footer of the module.\nIf set to a string a node is creating and the string is set to its innerHTML",
            "type": "DOM Node | String | NodeList",
            "class": "Module",
            "module": "container"
        },
        {
            "file": "build/container.js",
            "line": 195,
            "itemtype": "attribute",
            "name": "draggable",
            "description": "If true, the overlay can be dragged. Requires $.Drag",
            "default": "false",
            "type": "Boolean",
            "writeonce": "",
            "class": "Overlay",
            "module": "container"
        },
        {
            "file": "build/container.js",
            "line": 209,
            "itemtype": "attribute",
            "name": "modal",
            "description": "Whether this overlay should stop the user from interacting with the rest of the page",
            "default": "false",
            "type": "Boolean",
            "writeonce": "",
            "class": "Overlay",
            "module": "container"
        },
        {
            "file": "build/container.js",
            "line": 227,
            "itemtype": "attribute",
            "name": "Node that prevents the user from interacting with the page if 'modal' is set to true",
            "type": "NodeList",
            "readonly": "",
            "class": "Overlay",
            "module": "container"
        },
        {
            "file": "build/container.js",
            "line": 312,
            "itemtype": "attribute",
            "name": "fadeIn",
            "description": "Whether to use a fade animation when appearing. Requires Anim module",
            "default": "false",
            "class": "Tooltip",
            "module": "container"
        },
        {
            "file": "build/container.js",
            "line": 366,
            "itemtype": "attribute",
            "name": "close",
            "description": "If true, a close button is added to the panel that hides it when clicked",
            "type": "Boolean",
            "default": "true",
            "class": "PanelBase",
            "module": "container"
        },
        {
            "file": "build/container.js",
            "line": 376,
            "itemtype": "attribute",
            "name": "underlay",
            "description": "The underlay is inserted after the contentBox to allow for a more complex design",
            "readonly": "",
            "class": "PanelBase",
            "module": "container"
        },
        {
            "file": "build/container.js",
            "line": 385,
            "itemtype": "attribute",
            "name": "shadow",
            "description": "If true, the panel shows a shadow",
            "default": "true",
            "class": "PanelBase",
            "module": "container"
        },
        {
            "file": "build/container.js",
            "line": 468,
            "itemtype": "attribute",
            "name": "buttons",
            "description": "An array of button configuration objects",
            "default": "[]",
            "type": "Array",
            "class": "SimpleDialog",
            "module": "container"
        },
        {
            "file": "build/cookie.js",
            "line": 19,
            "description": "Sets the value of a cookie variable",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "optional",
                    "description": "- duration of the variable in days",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "Cookie",
            "module": "cookie"
        },
        {
            "file": "build/cookie.js",
            "line": 38,
            "description": "Get the value of a cookie",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Cookie",
            "module": "cookie"
        },
        {
            "file": "build/cookie.js",
            "line": 60,
            "description": "Removes a cookie",
            "itemtype": "method",
            "name": "unset",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "class": "Cookie",
            "module": "cookie"
        },
        {
            "file": "build/cookie.js",
            "line": 69,
            "description": "Returns whether a cookir variable is set",
            "itemtype": "method",
            "name": "isSet",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Cookie",
            "module": "cookie"
        },
        {
            "file": "build/datasource.js",
            "line": 54,
            "description": "Returns the id of the record. Each record has a unique id globally.alert\nThis allows for easy filtering, ordering, etc of records.alert",
            "itemtype": "method",
            "name": "getId",
            "return": {
                "description": "Number"
            },
            "class": "Record",
            "module": "datasource"
        },
        {
            "file": "build/datasource.js",
            "line": 63,
            "description": "Returns the data of the record. Must be an object literal",
            "itemtype": "method",
            "name": "getData",
            "class": "Record",
            "module": "datasource"
        },
        {
            "file": "build/datasource.js",
            "line": 70,
            "description": "Shortcut for getting a value from the record's data",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Record",
            "module": "datasource"
        },
        {
            "file": "build/datasource.js",
            "line": 79,
            "description": "Returns if an object is a Record",
            "itemtype": "method",
            "name": "hasInstance",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "The object to check",
                    "type": "Object"
                }
            ],
            "class": "Record",
            "module": "datasource"
        },
        {
            "file": "build/datasource.js",
            "line": 134,
            "description": "Replaces all records with new data",
            "itemtype": "method",
            "name": "replace",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Array"
                }
            ],
            "chainable": 1,
            "class": "RecordSet",
            "module": "datasource"
        },
        {
            "file": "build/datasource.js",
            "line": 156,
            "description": "Sorts the records based on a key of the data they hold",
            "itemtype": "method",
            "name": "sortBy",
            "params": [
                {
                    "name": "key",
                    "description": "The data key that will be sorted",
                    "type": "String"
                },
                {
                    "name": "order",
                    "description": "the order in which to sort. May be \"asc\" or \"desc\"",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "class": "RecordSet",
            "module": "datasource"
        },
        {
            "file": "build/datasource.js",
            "line": 194,
            "itemtype": "attribute",
            "name": "recordSet",
            "description": "This datasource's associated recordset",
            "type": "RecordSet",
            "writeonce": "",
            "class": "DataSource",
            "module": "datasource"
        },
        {
            "file": "build/datasource.js",
            "line": 203,
            "itemtype": "attribute",
            "name": "responseType",
            "description": "The expected response type ('xml', 'jsarray', 'json', 'text')",
            "required": "",
            "class": "DataSource",
            "module": "datasource"
        },
        {
            "file": "build/datasource.js",
            "line": 211,
            "itemtype": "attribute",
            "name": "responseSchema",
            "description": "<p>The schema by which to parse the response data. May be:</p>\n<p><strong>DataSource.responseType.JSARRAY schema</strong><br/>\nA JSARRAY response type assumes the following response shape:</p>\n<code>//All records are listed as an array<br/>\n[<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;['value1', 'value2', 'value3'], //one record<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;['another1', 'another2', 'another3'] //another record<br/>\n]</code>\n<p></p>\n<p><strong>DataSource.responseType.TEXT schema</strong><br/>\nThis schema essentially splits the string and then acts as if it where a DataSource.responseType.JSARRAY.<br/>\nMust define a <strong>fieldDelim</strong> property. Example (comma separated value):</p>\n<code>responseSchema: {<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;fieldDelim: \",\"<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;fields: [\"firstField\", \"secondField\"]<br/>\n}</code>\n<p></p>\n<p><strong>DataSource.responseType.JSON schema</strong><br/>\nExample:</p>\n<code>responseSchema = {<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;resultList : \"Response.Results\", // String pointer to result data<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;// Field order doesn't matter and not all data is required to have a field<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;fields : [<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ key: \"id\" },                    // simple location<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ key: \"obj\" }<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;]<br/>\n}</code>\n<p></p>\n<p><strong>DataSource.responseType.XML schema</strong><br/>\nExample:</p> \n<code>responseSchema: {<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;resultNode: \"rootNode\", // every result field will be looked for between this node's children<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;fields: [<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ key: \"keyName\", node: \"nodeName\" }, // in this case, the value of the field will be the node's value<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ key: \"otherKey\", node: \"otherNode\", attr: \"type\" }, // in this other case, the field value will be the \"type\" attribute<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ key: \"aNumber\", node: \"someNode\", parser: \"parseFloat\" } // this value will be parsed as a Float<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;]<br/>\n}</code>",
            "type": "Hash",
            "required": "",
            "class": "DataSource",
            "module": "datasource"
        },
        {
            "file": "build/datasource.js",
            "line": 257,
            "itemtype": "attribute",
            "name": "initialRequest",
            "description": "Data to send in the automatic initial request",
            "type": "Object",
            "class": "DataSource",
            "module": "datasource"
        },
        {
            "file": "build/datasource.js",
            "line": 406,
            "description": "Sends a request",
            "itemtype": "method",
            "name": "sendRequest",
            "params": [
                {
                    "name": "request",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "ignoreCache",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "chainable": 1,
            "class": "DataSource",
            "module": "datasource"
        },
        {
            "file": "build/datasource.js",
            "line": 443,
            "itemtype": "method",
            "name": "handleRequest",
            "description": "The logic for the chosen source type. Should be overwritten when extending the DataSourceClass",
            "class": "DataSource",
            "module": "datasource"
        },
        {
            "file": "build/datasource.js",
            "line": 451,
            "description": "Adds an event listener to the \"beforeParse\" event",
            "itemtype": "method",
            "name": "onBeforeParse",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "class": "DataSource",
            "module": "datasource"
        },
        {
            "file": "build/datasource.js",
            "line": 479,
            "itemtype": "attribute",
            "name": "jsonCallbackParam",
            "description": "Name of the URL parameter that defines the name of the JSONP callback",
            "type": "String",
            "default": "\"p\"",
            "class": "DataSource.Get",
            "module": "datasource"
        },
        {
            "file": "build/datasource.js",
            "line": 488,
            "itemtype": "attribute",
            "name": "timeout",
            "description": "Ms after which the request is considered to have timed out",
            "type": "Number",
            "default": "10000",
            "class": "DataSource.Get",
            "module": "datasource"
        },
        {
            "file": "build/datasource.js",
            "line": 497,
            "itemtype": "attribute",
            "name": "url",
            "description": "Url from which to fetch the data",
            "type": "String",
            "required": "",
            "class": "DataSource.Get",
            "module": "datasource"
        },
        {
            "file": "build/datasource.js",
            "line": 531,
            "itemtype": "attribute",
            "name": "url",
            "description": "Url from which to fetch the data",
            "type": "String",
            "required": "",
            "class": "DataSource.Ajax",
            "module": "datasource"
        },
        {
            "file": "build/datasource.js",
            "line": 561,
            "itemtype": "attribute",
            "name": "url",
            "description": "Url from which to fetch the data",
            "type": "String",
            "required": "",
            "class": "DataSource.XDR",
            "module": "datasource"
        },
        {
            "file": "build/datasource.js",
            "line": 592,
            "itemtype": "attribute",
            "name": "localData",
            "description": "The object to use as a datasource",
            "required": "",
            "class": "DataSource.Local",
            "module": "datasource"
        },
        {
            "file": "build/datatable.js",
            "line": 28,
            "itemtype": "attribute",
            "name": "value",
            "description": "The cell's value",
            "required": "",
            "writeonce": "",
            "class": "Cell",
            "module": "datatable"
        },
        {
            "file": "build/datatable.js",
            "line": 38,
            "itemtype": "attribute",
            "name": "td",
            "description": "The cell's td",
            "required": "",
            "writeonce": "",
            "class": "Cell",
            "module": "datatable"
        },
        {
            "file": "build/datatable.js",
            "line": 48,
            "itemtype": "attribute",
            "name": "record",
            "description": "The cell's record",
            "required": "",
            "writeonce": "",
            "class": "Cell",
            "module": "datatable"
        },
        {
            "file": "build/datatable.js",
            "line": 72,
            "itemtype": "attribute",
            "name": "cells",
            "description": "A list of cells",
            "required": "true",
            "writeonce": "",
            "class": "Column",
            "module": "datatable"
        },
        {
            "file": "build/datatable.js",
            "line": 86,
            "itemtype": "method",
            "name": "getFirstTd",
            "description": "Returns the first td element in this column",
            "return": {
                "description": "HTMLElement"
            },
            "class": "Column",
            "module": "datatable"
        },
        {
            "file": "build/datatable.js",
            "line": 95,
            "itemtype": "method",
            "name": "getNextTd",
            "description": "Returns the following td in this column, based on the one passed as a parameter",
            "params": [
                {
                    "name": "td",
                    "description": "The previous td",
                    "type": "HTMLElement"
                }
            ],
            "return": {
                "description": "HTMLElement"
            },
            "class": "Column",
            "module": "datatable"
        },
        {
            "file": "build/datatable.js",
            "line": 111,
            "itemtype": "method",
            "name": "getFirstCell",
            "description": "Gets the first Cell instance in this column",
            "return": {
                "description": "Cell"
            },
            "class": "Column",
            "module": "datatable"
        },
        {
            "file": "build/datatable.js",
            "line": 120,
            "itemtype": "method",
            "name": "getNextCell",
            "description": "Returns the following cell in this collumn base on the one passed as a parameter",
            "params": [
                {
                    "name": "td",
                    "description": "The previous cell",
                    "type": "Cell"
                }
            ],
            "return": {
                "description": "Cell"
            },
            "class": "Column",
            "module": "datatable"
        },
        {
            "file": "build/datatable.js",
            "line": 167,
            "itemtype": "attribute",
            "name": "recordSet",
            "description": "The data table's associated recordSet",
            "type": "RecordSet",
            "class": "DataTable",
            "module": "datatable"
        },
        {
            "file": "build/datatable.js",
            "line": 173,
            "itemtype": "attribute",
            "name": "columnDefinitions",
            "description": "An array mapping record keys to columns",
            "required": "",
            "type": "Array",
            "class": "DataTable",
            "module": "datatable"
        },
        {
            "file": "build/datatable.js",
            "line": 348,
            "description": "Adds a row",
            "itemtype": "method",
            "name": "addRow",
            "params": [
                {
                    "name": "row",
                    "description": "",
                    "type": "Record|HTMLRowElement|Array"
                }
            ],
            "chainable": 1,
            "class": "DataTable",
            "module": "datatable"
        },
        {
            "file": "build/datatable.js",
            "line": 363,
            "description": "Adds several rows",
            "itemtype": "method",
            "name": "addRows",
            "params": [
                {
                    "name": "rows",
                    "description": "",
                    "type": "Array"
                }
            ],
            "chainable": 1,
            "class": "DataTable",
            "module": "datatable"
        },
        {
            "file": "build/datatable.js",
            "line": 403,
            "description": "Returns a column based on an index or the column's key",
            "itemtype": "method",
            "name": "getColumn",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "Number | String"
                }
            ],
            "return": {
                "description": "Column"
            },
            "class": "DataTable",
            "module": "datatable"
        },
        {
            "file": "build/datatable.js",
            "line": 434,
            "description": "Returns the first html row element in the table",
            "itemtype": "method",
            "name": "getFirstTr",
            "return": {
                "description": "NodeList"
            },
            "class": "DataTable",
            "module": "datatable"
        },
        {
            "file": "build/datatable.js",
            "line": 443,
            "description": "Returns the next html row element base on the one passed as a parameter",
            "itemtype": "method",
            "name": "getNextTr",
            "params": [
                {
                    "name": "tr",
                    "description": "",
                    "type": "Record | HTMLTrElement | NodeList | Number"
                }
            ],
            "return": {
                "description": "NodeList"
            },
            "class": "DataTable",
            "module": "datatable"
        },
        {
            "file": "build/datatable.js",
            "line": 459,
            "description": "Returns the first cell element in a row",
            "itemtype": "method",
            "name": "getFirstTd",
            "params": [
                {
                    "name": "row",
                    "description": "",
                    "type": "Record | HTMLTrElement | NodeList | Number"
                }
            ],
            "return": {
                "description": "NodeList"
            },
            "class": "DataTable",
            "module": "datatable"
        },
        {
            "file": "build/datatable.js",
            "line": 475,
            "description": "Returns the next cell element in a row based on the one passed as a parameter",
            "itemtype": "method",
            "name": "getNextTd",
            "params": [
                {
                    "name": "td",
                    "description": "",
                    "type": "Record | HTMLTrElement | NodeList | Number"
                }
            ],
            "return": {
                "description": "NodeList"
            },
            "class": "DataTable",
            "module": "datatable"
        },
        {
            "file": "build/datatable.js",
            "line": 532,
            "description": "Replace all rows when the DataSource updates",
            "itemtype": "method",
            "name": "onDataReturnReplaceRows",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                },
                {
                    "name": "recordSet",
                    "description": "",
                    "type": "RecordSet"
                }
            ],
            "class": "DataTable",
            "module": "datatable"
        },
        {
            "file": "build/datatable.js",
            "line": 544,
            "description": "When the DataSource updates, treat the returned data as additions to the table's recordSet",
            "itemtype": "method",
            "name": "onDataReturnAddRows",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                },
                {
                    "name": "newRecordSet",
                    "description": "",
                    "type": "RecordSet"
                }
            ],
            "class": "DataTable",
            "module": "datatable"
        },
        {
            "file": "build/datatable.js",
            "line": 565,
            "itemtype": "attribute",
            "name": "autoScroll",
            "description": "Scroll the datatable automatically to the bottom when the rows change and the scroll was already at the bottom",
            "default": "false",
            "class": "DataTable",
            "module": "datatable"
        },
        {
            "file": "build/deferred.js",
            "line": 59,
            "itemtype": "method",
            "name": "then",
            "description": "Adds callbacks to the list of callbacks tracked by the promise",
            "params": [
                {
                    "name": "doneCallbacks",
                    "description": "A function or array of functions to run when the promise is resolved",
                    "type": "Function|Array"
                },
                {
                    "name": "failCallbacks",
                    "description": "A function or array of functions to run when the promise is rejected",
                    "type": "Function|Array"
                }
            ],
            "chainable": 1,
            "class": "Deferred",
            "module": "deferred"
        },
        {
            "file": "build/deferred.js",
            "line": 90,
            "itemtype": "method",
            "name": "done",
            "description": "Listens to the 'success' event",
            "params": [
                {
                    "name": "doneCallbacks",
                    "description": "Takes any number of functions or arrays of functions to run when the promise is resolved",
                    "type": "Function|Array"
                }
            ],
            "chainable": 1,
            "class": "Deferred",
            "module": "deferred"
        },
        {
            "file": "build/deferred.js",
            "line": 100,
            "itemtype": "method",
            "name": "fail",
            "description": "Listens to the 'failure' event",
            "params": [
                {
                    "name": "failCallbacks",
                    "description": "Takes any number of functions or arrays of functions to run when the promise is rejected",
                    "type": "Function|Array"
                }
            ],
            "chainable": 1,
            "class": "Deferred",
            "module": "deferred"
        },
        {
            "file": "build/deferred.js",
            "line": 110,
            "itemtype": "method",
            "name": "always",
            "description": "Listens to the 'complete' event",
            "params": [
                {
                    "name": "callbacks",
                    "description": "Takes any number of functions or arrays of functions to run when the promise is rejected or resolved",
                    "type": "Function|Array"
                }
            ],
            "chainable": 1,
            "class": "Deferred",
            "module": "deferred"
        },
        {
            "file": "build/deferred.js",
            "line": 121,
            "itemtype": "method",
            "name": "resolve",
            "description": "Resolves the promise and notifies all callbacks",
            "params": [
                {
                    "name": "o",
                    "description": "Any number of arguments that will be passed to the success callbacks",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "Deferred",
            "module": "deferred"
        },
        {
            "file": "build/deferred.js",
            "line": 132,
            "itemtype": "method",
            "name": "reject",
            "description": "Rejects the promise and notifies all callbacks",
            "params": [
                {
                    "name": "o",
                    "description": "Any number of arguments that will be passed to the failure callbacks",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "Deferred",
            "module": "deferred"
        },
        {
            "file": "build/deferred.js",
            "line": 159,
            "itemtype": "method",
            "name": "defer",
            "description": "Returns a new promise. This method will be mostly used by implementors that extend this class to create\nadditional asynchronous functionalityu. For example:\n<pre><code>\nwait: function (delay) {\n\t\treturn this.defer(function (promise) {\n\t\t$.later(delay || 0, promise, promise.resolve);\n});\n}</code></pre>",
            "return": {
                "description": "",
                "type": "Deferred"
            },
            "class": "Deferred",
            "module": "deferred"
        },
        {
            "file": "build/deferred.js",
            "line": 186,
            "description": "Returns a promise for a (possibly) asynchronous call.\nCalls a given function that receives the new promise as parameter and must call resolve()\nor reject() at a certain point",
            "itemtype": "method",
            "name": "defer",
            "params": [
                {
                    "name": "fn",
                    "description": "A function that encloses an async call.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Promise"
            },
            "class": "jet~deferred",
            "module": "deferred"
        },
        {
            "file": "build/deferred.js",
            "line": 220,
            "itemtype": "method",
            "name": "when",
            "description": "Waits for a series of asynchronous calls to be completed",
            "params": [
                {
                    "name": "deferred",
                    "description": "Any number of Deferred instances or arrays of instances",
                    "type": "Deferred|Array"
                }
            ],
            "return": {
                "description": "Promise"
            },
            "class": "jet~deferred",
            "module": "deferred"
        },
        {
            "file": "build/dragdrop.js",
            "line": 32,
            "itemtype": "attribute",
            "name": "node",
            "description": "node to be dragged",
            "required": "",
            "class": "Drag",
            "module": "dragdrop"
        },
        {
            "file": "build/dragdrop.js",
            "line": 41,
            "itemtype": "attribute",
            "name": "cursor",
            "description": "the type of cursor that will be shown on hover",
            "type": "String",
            "class": "Drag",
            "module": "dragdrop"
        },
        {
            "file": "build/dragdrop.js",
            "line": 49,
            "itemtype": "attribute",
            "name": "tracking",
            "description": "the tracking status",
            "type": "Boolean",
            "class": "Drag",
            "module": "dragdrop"
        },
        {
            "file": "build/dragdrop.js",
            "line": 57,
            "itemtype": "attribute",
            "name": "handlers",
            "description": "A list of elements that will start the dragging",
            "type": "Array | NodeList",
            "class": "Drag",
            "module": "dragdrop"
        },
        {
            "file": "build/dragdrop.js",
            "line": 102,
            "description": "Fires during the drag movement",
            "itemtype": "event",
            "name": "drag",
            "class": "Drag",
            "module": "dragdrop"
        },
        {
            "file": "build/dragdrop.js",
            "line": 116,
            "description": "Fires when the drag ends",
            "itemtype": "event",
            "name": "drag:end",
            "class": "Drag",
            "module": "dragdrop"
        },
        {
            "file": "build/dragdrop.js",
            "line": 131,
            "description": "First when the dragging starts",
            "itemtype": "event",
            "name": "drag:start",
            "class": "Drag",
            "module": "dragdrop"
        },
        {
            "file": "build/dragdrop.js",
            "line": 149,
            "description": "Adds a handler to the handler list",
            "mehtod": "addHandler",
            "params": [
                {
                    "name": "handler",
                    "description": "",
                    "type": "HTMLElement | NodeList"
                }
            ],
            "chainable": 1,
            "class": "Drag",
            "module": "dragdrop"
        },
        {
            "file": "build/dragdrop.js",
            "line": 193,
            "description": "Fires when a draggable object is drop into a target",
            "itemtype": "event",
            "name": "drop:hit",
            "class": "DragDrop",
            "module": "dragdrop"
        },
        {
            "file": "build/dragdrop.js",
            "line": 202,
            "description": "Fires when a draggable object is release but not over any target",
            "itemtype": "event",
            "name": "drop:miss",
            "class": "DragDrop",
            "module": "dragdrop"
        },
        {
            "file": "build/dragdrop.js",
            "line": 214,
            "description": "Adds a drop target",
            "itemtype": "method",
            "name": "addTarget",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "HTMLElement | NodeList"
                }
            ],
            "chainable": 1,
            "class": "DragDrop",
            "module": "dragdrop"
        },
        {
            "file": "build/escape.js",
            "line": 12,
            "description": "Copyright © 2011 Yahoo! Inc. All rights reserved \nCode licensed under the BSD License\nhttp://yuilibrary.com/license/",
            "class": "Escape",
            "module": "escape"
        },
        {
            "file": "build/escape.js",
            "line": 40,
            "description": "Returns a copy of the specified string with special HTML characters\nescaped. The following characters will be converted to their\ncorresponding character entities:\n\n    & < > \" ' / `\n\nThis implementation is based on the [OWASP HTML escaping\nrecommendations][1]. In addition to the characters in the OWASP\nrecommendations, we also escape the <code>&#x60;</code> character, since IE\ninterprets it as an attribute delimiter.\n\nIf _string_ is not already a string, it will be coerced to a string.\n\n[1]: http://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet",
            "itemtype": "method",
            "name": "html",
            "params": [
                {
                    "name": "string",
                    "description": "String to escape.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Escaped string.",
                "type": "String"
            },
            "static": 1,
            "class": "Escape",
            "module": "escape"
        },
        {
            "file": "build/escape.js",
            "line": 65,
            "description": "Returns a copy of the specified string with special regular expression\ncharacters escaped, allowing the string to be used safely inside a regex.\nThe following characters, and all whitespace characters, are escaped:\n\n    - # $ ^ * ( ) + [ ] { } | \\ , . ?\n\nIf _string_ is not already a string, it will be coerced to a string.",
            "itemtype": "method",
            "name": "regex",
            "params": [
                {
                    "name": "string",
                    "description": "String to escape.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Escaped string.",
                "type": "String"
            },
            "static": 1,
            "class": "Escape",
            "module": "escape"
        },
        {
            "file": "build/escape.js",
            "line": 85,
            "description": "Regex replacer for HTML escaping.",
            "itemtype": "method",
            "name": "_htmlReplacer",
            "params": [
                {
                    "name": "match",
                    "description": "Matched character (must exist in HTML_CHARS).",
                    "type": "String"
                }
            ],
            "return": {
                "description": "HTML entity.",
                "type": "String"
            },
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "Escape",
            "module": "escape"
        },
        {
            "file": "build/form.js",
            "line": 21,
            "itemtype": "attribute",
            "name": "value",
            "description": "value of the input node",
            "default": "''",
            "class": "FormField",
            "module": "form"
        },
        {
            "file": "build/form.js",
            "line": 29,
            "itemtype": "attribute",
            "name": "label",
            "description": "Label for the input node",
            "default": "''",
            "class": "FormField",
            "module": "form"
        },
        {
            "file": "build/form.js",
            "line": 42,
            "itemtype": "property",
            "name": "CONTENT_TEMPLATE",
            "type": "String",
            "default": "'<label/>'",
            "class": "FormField",
            "module": "form"
        },
        {
            "file": "build/form.js",
            "line": 87,
            "itemtype": "attribute",
            "name": "checked",
            "description": "Maps to the DOM attribute",
            "default": "false",
            "class": "CheckBox",
            "module": "form"
        },
        {
            "file": "build/form.js",
            "line": 127,
            "itemtype": "attribute",
            "name": "defaultChildType",
            "default": "FormField",
            "class": "FieldSet",
            "module": "form"
        },
        {
            "file": "build/form.js",
            "line": 134,
            "itemtype": "attribute",
            "name": "legend",
            "description": "A title for a fieldset, using a <legend> tag",
            "default": "''",
            "class": "FieldSet",
            "module": "form"
        },
        {
            "file": "build/form.js",
            "line": 142,
            "itemtype": "config",
            "name": "buttons",
            "description": "A list of buttons for a ButtonGroup inside the FieldSet",
            "default": "[]",
            "class": "FieldSet",
            "module": "form"
        },
        {
            "file": "build/form.js",
            "line": 154,
            "itemtype": "property",
            "name": "BOUNDING_TEMPLATE",
            "type": "String",
            "default": "'<fieldset/>'",
            "class": "FieldSet",
            "module": "form"
        },
        {
            "file": "build/form.js",
            "line": 160,
            "itemtype": "property",
            "name": "CONTENT_TEMPLATE",
            "type": "String",
            "default": "'<legend/>'",
            "class": "FieldSet",
            "module": "form"
        },
        {
            "file": "build/form.js",
            "line": 188,
            "itemtype": "attribute",
            "name": "defaultChildType",
            "default": "'FieldSet'",
            "class": "Form",
            "module": "form"
        },
        {
            "file": "build/form.js",
            "line": 195,
            "itemtype": "attribute",
            "name": "action",
            "description": "The target URL for the form",
            "class": "Form",
            "module": "form"
        },
        {
            "file": "build/history.js",
            "line": 221,
            "itemtype": "attribute",
            "name": "firstLoad",
            "description": "Whether this is the first time the History loaded or not",
            "type": "Boolean",
            "readonly": "",
            "class": "History",
            "module": "history"
        },
        {
            "file": "build/history.js",
            "line": 231,
            "itemtype": "attribute",
            "name": "baseTitle",
            "description": "pattern for title changes. Example: \"Armchair DJ [@@@]\" - @@@ will be replaced",
            "type": "String",
            "class": "History",
            "module": "history"
        },
        {
            "file": "build/history.js",
            "line": 245,
            "itemtype": "attribute",
            "name": "blankURL",
            "description": "URL for the blank html file we use for IE; can be overridden via the options bundle. \nOtherwise it must be served in same directory as this library",
            "type": "String",
            "default": "\"blank.html?\"",
            "class": "History",
            "module": "history"
        },
        {
            "file": "build/history.js",
            "line": 258,
            "itemtype": "attribute",
            "name": "encodeURI",
            "description": "Whether to encode the URI or not",
            "type": "Boolean",
            "class": "History",
            "module": "history"
        },
        {
            "file": "build/history.js",
            "line": 432,
            "description": "Fires when the history changes",
            "itemtype": "event",
            "name": "change",
            "params": [
                {
                    "name": "hashData",
                    "description": "A hash with the URI data",
                    "type": "Hash"
                },
                {
                    "name": "Additional",
                    "description": "data associated with the current state",
                    "type": "Object"
                }
            ],
            "class": "History",
            "module": "history"
        },
        {
            "file": "build/history.js",
            "line": 525,
            "itemtype": "method",
            "name": "initialize",
            "description": "Initialize our DHTML history. You must call this after the page is finished loading",
            "chainable": 1,
            "class": "History",
            "module": "history"
        },
        {
            "file": "build/history.js",
            "line": 553,
            "itemtype": "method",
            "name": "changeTitle",
            "description": "Change the current HTML title",
            "chainable": 1,
            "class": "History",
            "module": "history"
        },
        {
            "file": "build/history.js",
            "line": 587,
            "itemtype": "method",
            "name": "go",
            "description": "Add a history point",
            "params": [
                {
                    "name": "newLocation",
                    "description": "required - This will be the #hash value in the URL. Users can bookmark it. It will persist across sessions, so\nyour application should be able to restore itself to a specific state based on just this value. It\nshould be either a simple keyword for a viewstate or else a pseudo-querystring.",
                    "type": "String"
                },
                {
                    "name": "historyData",
                    "description": "optional - This is for complex data that is relevant only to the current browsing session. It will be available\nto your application until the browser is closed. If the user comes back to a bookmarked history point\nduring a later session, this data will no longer be available. Don't rely on it for application\nre-initialization from a bookmark.",
                    "type": "Hash",
                    "props": [
                        {
                            "name": "newTitle",
                            "description": "optional - This will swap out the html <code><title></code> attribute with a new value. \nIf you have set a baseTitle using the options bundle, the value will be plugged into the baseTitle by swapping out the @@@ replacement param.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "chainable": 1,
            "class": "History",
            "module": "history"
        },
        {
            "file": "build/imageloader.js",
            "line": 32,
            "itemtype": "attribute",
            "name": "src",
            "description": "URI of the image to load",
            "required": "",
            "writeonce": "",
            "type": "String",
            "class": "Image",
            "module": "imageloader"
        },
        {
            "file": "build/imageloader.js",
            "line": 44,
            "itemtype": "attribute",
            "name": "image",
            "description": "A pointer to the actual Image object",
            "class": "Image",
            "module": "imageloader"
        },
        {
            "file": "build/imageloader.js",
            "line": 51,
            "itemtype": "attribute",
            "name": "node",
            "description": "A NodeList with the image node",
            "readonly": "",
            "type": "NodeList",
            "class": "Image",
            "module": "imageloader"
        },
        {
            "file": "build/imageloader.js",
            "line": 60,
            "itemtype": "attribute",
            "name": "timeout",
            "description": "Time the image can spend loading before firing the timeout event",
            "default": "5000",
            "type": "Number (ms)",
            "class": "Image",
            "module": "imageloader"
        },
        {
            "file": "build/imageloader.js",
            "line": 69,
            "itemtype": "attribute",
            "name": "type",
            "description": "The image type. Used to specify if an image is PNG",
            "type": "String",
            "class": "Image",
            "module": "imageloader"
        },
        {
            "file": "build/imageloader.js",
            "line": 81,
            "itemtype": "attribute",
            "name": "loaded",
            "description": "Specifies if the image has finished loading or not",
            "type": "Boolean",
            "class": "Image",
            "module": "imageloader"
        },
        {
            "file": "build/imageloader.js",
            "line": 89,
            "description": "Start loading the image",
            "itemtype": "method",
            "name": "load",
            "chainable": 1,
            "class": "Image",
            "module": "imageloader"
        },
        {
            "file": "build/imageloader.js",
            "line": 117,
            "description": "Fires when the image finished loading successfully",
            "itemtype": "event",
            "name": "load",
            "class": "Image",
            "module": "imageloader"
        },
        {
            "file": "build/imageloader.js",
            "line": 122,
            "description": "Fires when the image finished loading, successfully or not",
            "itemtype": "event",
            "name": "complete",
            "class": "Image",
            "module": "imageloader"
        },
        {
            "file": "build/imageloader.js",
            "line": 131,
            "description": "Fires if the image didn't load successfully",
            "itemtype": "event",
            "name": "error",
            "class": "Image",
            "module": "imageloader"
        },
        {
            "file": "build/imageloader.js",
            "line": 141,
            "description": "Fires if the image timed out",
            "itemtype": "event",
            "name": "error",
            "class": "Image",
            "module": "imageloader"
        },
        {
            "file": "build/imageloader.js",
            "line": 152,
            "description": "Set the image as a background once it loaded",
            "itemtype": "method",
            "name": "setAsBackground",
            "params": [
                {
                    "name": "node",
                    "description": "Which node to set the image as background of",
                    "type": "DOMNode | NodeList"
                }
            ],
            "chainable": 1,
            "class": "Image",
            "module": "imageloader"
        },
        {
            "file": "build/imageloader.js",
            "line": 186,
            "itemtype": "attribute",
            "name": "srcs",
            "description": "An array of image URIs",
            "type": "Array",
            "class": "ImageLoader",
            "module": "imageloader"
        },
        {
            "file": "build/imageloader.js",
            "line": 196,
            "description": "Loads all images whose srcs where specified",
            "itemtype": "method",
            "name": "load",
            "chainable": 1,
            "class": "ImageLoader",
            "module": "imageloader"
        },
        {
            "file": "build/imageloader.js",
            "line": 211,
            "description": "Fires when each image fires its load event",
            "itemtype": "event",
            "name": "image:load",
            "params": [
                {
                    "name": "the",
                    "description": "image that fired the event",
                    "type": "Image"
                }
            ],
            "class": "ImageLoader",
            "module": "imageloader"
        },
        {
            "file": "build/imageloader.js",
            "line": 219,
            "description": "Fires when each image fires its error event",
            "itemtype": "event",
            "name": "image:error",
            "params": [
                {
                    "name": "the",
                    "description": "image that fired the event",
                    "type": "Image"
                }
            ],
            "class": "ImageLoader",
            "module": "imageloader"
        },
        {
            "file": "build/imageloader.js",
            "line": 227,
            "description": "Fires when each image fires its timeout event",
            "itemtype": "event",
            "name": "image:timeout",
            "params": [
                {
                    "name": "the",
                    "description": "image that fired the event",
                    "type": "Image"
                }
            ],
            "class": "ImageLoader",
            "module": "imageloader"
        },
        {
            "file": "build/imageloader.js",
            "line": 235,
            "description": "Fires when each image fires its complete event",
            "itemtype": "event",
            "name": "image:complete",
            "params": [
                {
                    "name": "the",
                    "description": "image that fired the event",
                    "type": "Image"
                }
            ],
            "class": "ImageLoader",
            "module": "imageloader"
        },
        {
            "file": "build/imageloader.js",
            "line": 242,
            "description": "Fires each time an image loads",
            "itemtype": "event",
            "name": "progress",
            "params": [
                {
                    "name": "percentage",
                    "description": "completed",
                    "type": "Number"
                }
            ],
            "class": "ImageLoader",
            "module": "imageloader"
        },
        {
            "file": "build/imageloader.js",
            "line": 249,
            "description": "Fires when all images loaded",
            "itemtype": "event",
            "name": "complete",
            "class": "ImageLoader",
            "module": "imageloader"
        },
        {
            "file": "build/io-xdr.js",
            "line": 36,
            "itemtype": "method",
            "name": "flajax",
            "description": "Makes a cross-domain ajax call based on a Flash engine. <strong>Requires the io-xsl submodule</strong>",
            "params": [
                {
                    "name": "settings",
                    "description": "",
                    "type": "Hash"
                }
            ],
            "class": "IO",
            "module": "io-xdr"
        },
        {
            "file": "build/io.js",
            "line": 144,
            "description": "Makes an ajax request",
            "itemtype": "method",
            "name": "ajax",
            "params": [
                {
                    "name": "settings",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "IO",
            "module": "io"
        },
        {
            "file": "build/io.js",
            "line": 315,
            "itemtype": "method",
            "name": "xsl",
            "description": "Makes a XSL transformation. Loads the files with Ajax if needed. <strong>Requires the io-xsl submodule</strong>",
            "params": [
                {
                    "name": "settings",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "IO",
            "module": "io"
        },
        {
            "file": "build/io.js",
            "line": 390,
            "itemtype": "method",
            "name": "abort",
            "description": "Aborts the request if available (doesn't work on JSONP transactions)",
            "chainable": 1,
            "class": "IO",
            "module": "io"
        },
        {
            "file": "build/io.js",
            "line": 402,
            "itemtype": "method",
            "name": "ajax",
            "description": "Calls $.ajax and returns a new Request",
            "params": [
                {
                    "name": "url",
                    "description": "The url for the io request",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "Config options for the io request (see $.io)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Request"
            },
            "class": "IO",
            "module": "io"
        },
        {
            "file": "build/io.js",
            "line": 410,
            "itemtype": "method",
            "name": "jsonp",
            "description": "Calls $.jsonp and returns a new Request",
            "params": [
                {
                    "name": "url",
                    "description": "The url for the jsonp request",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "Config options for the jsonp request (see $.io)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Request"
            },
            "class": "IO",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 170,
            "description": "Returns if o is a number",
            "itemtype": "method",
            "name": "isNumber",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Lang",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 178,
            "description": "Returns if o is a string",
            "itemtype": "method",
            "name": "isString",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Lang",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 186,
            "description": "Returns if o is an array",
            "itemtype": "method",
            "name": "isArray",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Lang",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 194,
            "description": "Returns if o is a function",
            "itemtype": "method",
            "name": "isFunction",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Lang",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 206,
            "description": "Returns if o is a boolean",
            "itemtype": "method",
            "name": "isBoolean",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Lang",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 214,
            "description": "Returns if o is undefined",
            "itemtype": "method",
            "name": "isUndefined",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Lang",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 222,
            "description": "Returns the type of the object",
            "itemtype": "method",
            "name": "type",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Lang",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 228,
            "description": "Returns whether the function is a native function or not",
            "itemtype": "method",
            "name": "isNative",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "Lang",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 234,
            "description": "Returns false if o is undefined, null, NaN or Infinity. In any other case, return true",
            "itemtype": "method",
            "name": "isValue",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Lang",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 256,
            "description": "Returns a string without any leading or trailing whitespace.\nCode by Steven Levithan\nhttp://blog.stevenlevithan.com/archives/faster-trim-javascript",
            "itemtype": "method",
            "name": "trim",
            "params": [
                {
                    "name": "the",
                    "description": "string to trim",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the trimmed string",
                "type": "String"
            },
            "class": "Lang",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 279,
            "description": "A more traditional random function. Returns a random integer between 0 and num-1",
            "itemtype": "method",
            "name": "random",
            "params": [
                {
                    "name": "num",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Lang",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 288,
            "description": "A shim for ES5's Date.now()",
            "itemtype": "method",
            "name": "now",
            "return": {
                "description": "ms Current time in milliseconds",
                "type": "Number"
            },
            "class": "Lang",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 367,
            "description": "Iterates through an array",
            "itemtype": "method",
            "name": "each",
            "params": [
                {
                    "name": "arr",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "fn",
                    "description": "callback",
                    "type": "Function"
                },
                {
                    "name": "thisp",
                    "description": "sets up the <b>this</b> keyword inside the callback",
                    "type": "Object"
                }
            ],
            "class": "Array",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 388,
            "description": "Searchs an haystack and removes the needle if found",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "needle",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "haystack",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "Array",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 406,
            "description": "Returns the index of the first occurence of needle",
            "itemtype": "method",
            "name": "indexOf",
            "params": [
                {
                    "name": "needle",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "haystack",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Array",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 427,
            "description": "Calls a given function on all items of an array and returns a new array with the return value of each call",
            "params": [
                {
                    "name": "array",
                    "description": "Array to map",
                    "type": "Array"
                },
                {
                    "name": "fn",
                    "description": "Function to call on each item",
                    "type": "Function"
                }
            ],
            "pram": "{Object} thisp Optional context to apply to the given function",
            "class": "Array",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 478,
            "description": "Iterats through a hash",
            "itemtype": "method",
            "name": "each",
            "params": [
                {
                    "name": "hash",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "thisp",
                    "description": "Sets the value of the this keyword",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "Object",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 495,
            "description": "Returns an array with all the keys of a hash",
            "itemtype": "method",
            "name": "keys",
            "params": [
                {
                    "name": "hash",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Object",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 508,
            "description": "Returns an array with all the valus of a hash",
            "itemtype": "method",
            "name": "values",
            "params": [
                {
                    "name": "hash",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Object",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 536,
            "description": "Creates a new ArrayList with the results of calling a provided function on every element in this array",
            "itemtype": "method",
            "name": "map",
            "params": [
                {
                    "name": "callback",
                    "description": "Function that produces an element of the new Array from an element of the current one",
                    "type": "Function"
                },
                {
                    "name": "thisp",
                    "description": "Object to use as 'this' when executing 'callback'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "ArrayList"
            },
            "class": "ArrayList",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 563,
            "description": "Returns the length of this ArrayList",
            "itemtype": "method",
            "name": "size",
            "return": {
                "description": "Number"
            },
            "class": "ArrayList",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 571,
            "itemtype": "method",
            "name": "item",
            "description": "Returns the nth element of the current list",
            "params": [
                {
                    "name": "nth",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "ArrayList"
            },
            "class": "ArrayList",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 580,
            "itemtype": "method",
            "name": "concat",
            "params": [
                {
                    "name": "valueN",
                    "description": "Arrays/ArrayLists and/or values to\nconcatenate to the resulting ArrayList",
                    "type": "ArrayList | Array"
                }
            ],
            "return": {
                "description": "A new ArrayList comprised of this ArrayList joined with the input.",
                "type": "ArrayList"
            },
            "class": "ArrayList",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 604,
            "itemtype": "method",
            "name": "pop",
            "return": {
                "description": "The last item in the ArrayList.",
                "type": "Object"
            },
            "class": "ArrayList",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 609,
            "itemtype": "method",
            "name": "push",
            "params": [
                {
                    "name": "nodes",
                    "description": "One or more nodes to add to the end of the ArrayList.",
                    "type": "Node | DOMNode"
                }
            ],
            "class": "ArrayList",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 614,
            "itemtype": "method",
            "name": "shift",
            "return": {
                "description": "The first item in the ArrayList.",
                "type": "Object"
            },
            "class": "ArrayList",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 619,
            "itemtype": "method",
            "name": "slice",
            "params": [
                {
                    "name": "begin",
                    "description": "Zero-based index at which to begin extraction.\n\t  As a negative index, start indicates an offset from the end of the sequence. slice(-2) extracts the second-to-last element and the last element in the sequence.",
                    "type": "Number"
                },
                {
                    "name": "end",
                    "description": "Zero-based index at which to end extraction. slice extracts up to but not including end.\n\t  slice(1,4) extracts the second element through the fourth element (elements indexed 1, 2, and 3).\n\t  As a negative index, end indicates an offset from the end of the sequence. slice(2,-1) extracts the third element through the second-to-last element in the sequence.\n\t  If end is omitted, slice extracts to the end of the sequence.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "A new ArrayList comprised of this ArrayList joined with the input.",
                "type": "ArrayList"
            },
            "class": "ArrayList",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 630,
            "itemtype": "method",
            "name": "splice",
            "params": [
                {
                    "name": "index",
                    "description": "Index at which to start changing the array. If negative, will begin that many elements from the end.",
                    "type": "Number"
                },
                {
                    "name": "howMany",
                    "description": "An integer indicating the number of old array elements to remove. If howMany is 0, no elements are removed. In this case, you should specify at least one new element. If no howMany parameter is specified (second syntax above, which is a SpiderMonkey extension), all elements after index are removed.\n{Node | DOMNode| element1, ..., elementN \n\t  The elements to add to the array. If you don't specify any elements, splice simply removes elements from the array.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The element(s) removed.",
                "type": "ArrayList"
            },
            "class": "ArrayList",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 639,
            "itemtype": "method",
            "name": "push",
            "params": [
                {
                    "name": "nodes",
                    "description": "One or more nodes to add to the ArrayList.",
                    "type": "Object"
                }
            ],
            "class": "ArrayList",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 647,
            "itemtype": "method",
            "name": "indexOf",
            "description": "Returns the index of the searched item or -1 if it didn't find it",
            "params": [
                {
                    "name": "item",
                    "description": "Some object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Number"
            },
            "class": "ArrayList",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 654,
            "description": "Returns a new ArrayList with only the elements for which the provided function returns true",
            "itemtype": "method",
            "name": "filter",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "ArrayList"
            },
            "class": "ArrayList",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 661,
            "description": "Iterates through the ArrayList\nThe callback is passed a reference to the element and an iteration index.",
            "itemtype": "method",
            "name": "forEach",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "class": "ArrayList",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 710,
            "description": "true if the browser uses the Webkit rendering engine (ie: Safari, Chrome)",
            "itemtype": "property",
            "name": "webkit",
            "class": "UA",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 715,
            "description": "If the browser is Internet Explorer, this property is equal to the IE version. If not, it is false",
            "itemtype": "property",
            "name": "ie",
            "class": "UA",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 720,
            "description": "true if the browser is Opera",
            "itemtype": "property",
            "name": "opera",
            "class": "UA",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 725,
            "description": "true if the browser is based on the Gecko rendering engine (ie: Firefox)",
            "itemtype": "property",
            "name": "gecko",
            "class": "UA",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 730,
            "description": "true if the operating system is Windows",
            "itemtype": "property",
            "name": "win",
            "class": "UA",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 735,
            "description": "true if the operating system is Apple OSX",
            "itemtype": "property",
            "name": "mac",
            "class": "UA",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 772,
            "description": "Loads a script asynchronously",
            "itemtype": "method",
            "name": "script",
            "params": [
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "class": "Get",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 852,
            "description": "Loads a CSS file",
            "itemtype": "method",
            "name": "css",
            "params": [
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "class": "Get",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 905,
            "description": "Walks through the DOM tree starting in th branch that derives from node",
            "itemtype": "method",
            "name": "walkTheDOM",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "HTMLElement"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "Core",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 946,
            "description": "The global object is a finder method that finds HTML elements.\nThe query string allows for different simple searches: \"#foo\" (get elemnet by id), \".foo\" (gets elements by class), \"foo\" (get elements by tag) or an array of html elements\nFor more complex queries, take a look at the Sizzle module",
            "itemtype": "method",
            "name": "$",
            "params": [
                {
                    "name": "query",
                    "description": "",
                    "type": "String|HTMLElement|Array"
                },
                {
                    "name": "root",
                    "description": "",
                    "type": "HTMLElement|Document"
                }
            ],
            "return": {
                "description": "",
                "type": "NodeList"
            },
            "class": "Core",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 1008,
            "description": "A pointer to the last Windo that was referenced by the $() function",
            "itemtype": "property",
            "name": "win",
            "class": "Core",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 1013,
            "description": "A pointer to the last Document that was referenced by the $() function.",
            "itemtype": "property",
            "name": "context",
            "class": "Core",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 1019,
            "description": "Does all the work behind the $() function\nYou shouldn't overwrite it unless you know what you're doing",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "query",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "root",
                    "description": "",
                    "type": "HTMLElement|Document"
                }
            ],
            "class": "Core",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 1049,
            "description": "Allows for an inheritance strategy based on prototype chaining.\nWhen exteiding a class with extend, you keep all prototypic methods from all superclasses",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "subclass",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "superclass",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "px",
                    "description": "optional - An object literal with methods to overwrite in the subclass' prototype",
                    "type": "Hash"
                },
                {
                    "name": "ax",
                    "description": "optional - An object literal with properties to add to the subclass' constructor",
                    "type": "Hash"
                }
            ],
            "class": "Core",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 1087,
            "description": "Creates a copy of the provided object",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "deep.",
                    "description": "If true, all properties are cloned recursively",
                    "type": "Boolean"
                }
            ],
            "class": "Core",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 1095,
            "description": "Copies all properties from B to A.\nDoesn't overwrite properties unless the overwrite parameter is true",
            "itemtype": "method",
            "name": "mix",
            "params": [
                {
                    "name": "A",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "B",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "overwrite",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "Core",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 1105,
            "description": "Adds properties to the $ object (shortcut for adding classes)",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "key/value",
                    "description": "pairs of class/function names and definitions",
                    "type": "Object"
                }
            ],
            "class": "Core",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 1145,
            "description": "Checks the state of each queue. If a queue has finished loading it executes it",
            "access": "private",
            "tagname": "",
            "class": "Core",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 1486,
            "itemtype": "attribute",
            "name": "base",
            "description": "prefix for all script and css urls",
            "type": "String",
            "default": "\"//jet-js.googlecode.com/svn/trunk/src/\"",
            "class": "jet",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 1493,
            "itemtype": "attribute",
            "name": "base",
            "description": "defines whether predefined modules should be minified or not",
            "type": "Boolean",
            "default": "true",
            "class": "jet",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 1500,
            "itemtype": "attribute",
            "name": "fetchCSS",
            "description": "If true, css modules are loaded",
            "type": "Boolean",
            "default": "true",
            "class": "jet",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 1507,
            "itemtype": "attribute",
            "name": "modules",
            "description": "Allows to define your own modules. Currently the same as using object literals in the use() method",
            "type": "Array",
            "class": "jet",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 1513,
            "itemtype": "attribute",
            "name": "win",
            "description": "A reference to the global object that is accesible later with $.win",
            "class": "jet",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 1518,
            "itemtype": "attribute",
            "name": "doc",
            "description": "A reference to the document that is accesible later with $.doc",
            "class": "jet",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 1524,
            "itemtype": "attribute",
            "name": "before",
            "description": "id of a node before which to insert all scripts and css files",
            "class": "jet",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 1557,
            "description": "Allows to load modules and obtain a unique reference to the library augmented by the requested modules \n\nThis method works by overloading its parameters. It takes names (String) of predefined modules\nor objects defining name and path/fullpath of a module. The last parameter must be a function \nthat contains the main logic of the application.",
            "itemtype": "method",
            "name": "use",
            "class": "jet",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 1568,
            "description": "Adds a module to the loaded module list and calls update() to check if a queue is ready to fire\nThis method must be called from a module to register it",
            "itemtype": "method",
            "name": "add",
            "static": 1,
            "params": [
                {
                    "name": "moduleName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "expose",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "jet",
            "module": "io"
        },
        {
            "file": "build/jet.js",
            "line": 1645,
            "description": "Adds a listener to the cache",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "DOMNode"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "Event.Cache",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 1662,
            "description": "Removes a method from the cache, but doesn't do anything to the node's listener",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "DOMNode"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "Event.Cache",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 1681,
            "description": "Removes all listeners from a node",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "DOMNode"
                }
            ],
            "class": "Event.Cache",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 1715,
            "description": "Removes all listeners from all nodes recorded in the cache",
            "itemtype": "method",
            "name": "flush",
            "class": "Event.Cache",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 1814,
            "description": "Unbinds all event handlers from their hosts",
            "itemtype": "method",
            "name": "detach",
            "class": "DOMEventHandler",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 1837,
            "description": "Returns the window object to which the current document belongs",
            "itemtype": "method",
            "name": "getWindowFromDocument",
            "params": [
                {
                    "name": "document",
                    "description": "",
                    "type": "Document"
                }
            ],
            "class": "DOM",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 1846,
            "description": "Gets the scrolling width or makes the browser scroll",
            "itemtype": "method",
            "name": "scrollLeft",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "DOM",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 1862,
            "description": "Gets the scrolling height or makes the browser scroll",
            "itemtype": "method",
            "name": "scrollTop",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "DOM",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 1878,
            "description": "Returns the inner size of the screen",
            "itemtype": "method",
            "name": "screenSize",
            "class": "DOM",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 1891,
            "description": "Returns the complete size of the page",
            "itemtype": "method",
            "name": "pageSize",
            "class": "DOM",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 1979,
            "description": "Hides all nodes",
            "itemtype": "method",
            "name": "hide",
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 1993,
            "description": "Shows all nodes",
            "itemtype": "method",
            "name": "show",
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2003,
            "description": "If a node in the collection is hidden, it shows it. If it is visible, it hides it.",
            "itemtype": "method",
            "name": "toggle",
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2018,
            "description": "Returns true if the first node in the collection has the className CSS class",
            "itemtype": "method",
            "name": "hasClass",
            "params": [
                {
                    "name": "className",
                    "description": "",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2027,
            "description": "Removes a number of classes from all nodes in the collection.\nTakes multiple string parameters",
            "itemtype": "method",
            "name": "removeClass",
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2041,
            "description": "Adds a number of classes to all nodes in the collection\nTakes multiple string parameters",
            "itemtype": "method",
            "name": "addClass",
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2057,
            "description": "Adds/removes a certain class from all nodes in the collection",
            "itemtype": "method",
            "name": "toggleClass",
            "params": [
                {
                    "name": "className",
                    "description": "",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2072,
            "description": "Sets the class name of all nodes in the collection",
            "itemtype": "method",
            "name": "setClass",
            "params": [
                {
                    "name": "sClass",
                    "description": "",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2121,
            "description": "Returns an object literal containing:\n<ul>\n<li><strong>top</strong>: top position in px</li>\n<li><strong>left</strong>: left position in px</li>\n</ul>",
            "itemtype": "method",
            "name": "position",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2159,
            "description": "Returns a new NodeList with all the offset parents of this one",
            "itemtype": "method",
            "name": "offsetParent",
            "return": {
                "description": "NodeList"
            },
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2179,
            "description": "Appends nodes to the ones in the current node list",
            "itemtype": "method",
            "name": "append",
            "params": [
                {
                    "name": "appended",
                    "description": "",
                    "type": "DOMNode|Array|NodeList"
                }
            ],
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2192,
            "description": "Appends all nodes in the current collection to the target node",
            "itemtype": "method",
            "name": "appendTo",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "DOMNode|NodeList"
                }
            ],
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2202,
            "description": "Insert nodes to the ones in the current node list, before their first children",
            "itemtype": "method",
            "name": "append",
            "params": [
                {
                    "name": "appended",
                    "description": "",
                    "type": "DOMNode|Array|NodeList"
                }
            ],
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2217,
            "description": "Inserts all nodes in the current collection before the first child of the target node",
            "itemtype": "method",
            "name": "prependTo",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "DOMNode|NodeList"
                }
            ],
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2227,
            "description": "Inserts all nodes in the current node list before the target node",
            "itemtype": "method",
            "name": "insertBefore",
            "params": [
                {
                    "name": "before",
                    "description": "",
                    "type": "DOMNode|NodeList"
                }
            ],
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2239,
            "description": "Returns whether the first node in this NodeList is inserted in the document",
            "itemtype": "method",
            "name": "inDoc",
            "params": [
                {
                    "name": "doc",
                    "description": "",
                    "type": "Document"
                }
            ],
            "return": {
                "description": "Boolean"
            },
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2256,
            "description": "Returns a new NodeList with all the parents of the current nodes",
            "itemtype": "method",
            "name": "parent",
            "return": {
                "description": "",
                "type": "NodeList"
            },
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2268,
            "description": "Looks for a parent by walking up the DOM and executing a function on all nodes",
            "itemtype": "method",
            "name": "ancestor",
            "return": {
                "description": "",
                "type": "NodeList"
            },
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2284,
            "description": "Returns a new NodeList with all the first children of the nodes in the collection",
            "itemtype": "method",
            "name": "first",
            "return": {
                "description": "",
                "type": "NodeList"
            },
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2292,
            "description": "Returns a new NodeList with all the last children of the nodes in the collection",
            "itemtype": "method",
            "name": "first",
            "return": {
                "description": "",
                "type": "NodeList"
            },
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2300,
            "description": "Gets or sets the innerHTML of all the nodes in the node list",
            "itemtype": "method",
            "name": "html",
            "params": [
                {
                    "name": "html",
                    "description": "",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2311,
            "description": "Gets or sets tag attributes to the nodes in the collection",
            "itemtype": "method",
            "name": "attr",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String|Object"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2334,
            "description": "Gets or sets CSS styles",
            "itemtype": "method",
            "name": "css",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String|Object"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2365,
            "description": "Finds all the nodes below the ones in the current collection that match the search query",
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "query",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "NodeList"
            },
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2376,
            "description": "Returns a new NodeList with all the children of the current nodes",
            "itemtype": "method",
            "name": "children",
            "params": [
                {
                    "name": "filter",
                    "description": "Return only the children that match the tag or index in this parameter",
                    "type": "String|Number"
                }
            ],
            "return": {
                "description": "",
                "type": "NodeList"
            },
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2408,
            "description": "Adds an event listener to all the nods in the list",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "thisp",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "handler",
                "type": "DOMEventHandler"
            },
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2431,
            "description": "Removes an event listener from all the nodes",
            "itemtype": "method",
            "name": "removeListener",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2447,
            "description": "Fires an event as if it was created from a user interaction",
            "itemtype": "method",
            "name": "trigger",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "optional. Extra data to pass in the event",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2459,
            "description": "Removes all the nodes from the DOM tree and removes all event listeners from the nodes",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "unbind",
                    "description": "Set to true to remove all event listeners",
                    "type": "Boolean"
                }
            ],
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2475,
            "description": "Sets the innerHTML of the nodelist by safely removing all children first",
            "itemtype": "method",
            "name": "setContent",
            "params": [
                {
                    "name": "content",
                    "description": "",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2490,
            "description": "Returns a new NodeList with all the documents of all the nodes in the collection that are Iframes",
            "itemtype": "method",
            "name": "contentDoc",
            "return": {
                "description": "",
                "type": "NodeList"
            },
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2502,
            "description": "Returns the computed style of the first node in the collection",
            "itemtype": "method",
            "name": "currentStyle",
            "return": {
                "description": "",
                "type": "CSSDeclaration"
            },
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2512,
            "description": "Executes a callback when the DOM to which the first node in the collection belongs is ready",
            "itemtype": "method",
            "name": "ready",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2519,
            "description": "Returns a new NodeList containing all the nodes in the current list and the ones in the new one\nUseful for applying properties to a bigger group of nodes, while keeping the original references",
            "itemtype": "method",
            "name": "link",
            "params": [
                {
                    "name": "nodelist",
                    "description": "",
                    "type": "NodeList"
                }
            ],
            "return": {
                "description": "",
                "type": "NodeList"
            },
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2538,
            "description": "Sets or returns the value of the node. Useful mostly for form elements",
            "params": [
                {
                    "name": "value",
                    "description": "- optional",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2546,
            "description": "Returns true if the nodelist contains a certain node or selector",
            "params": [
                {
                    "name": "node",
                    "description": "or selector",
                    "type": "Node|String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2580,
            "description": "Fires the blur event",
            "itemtype": "method",
            "name": "blur",
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2585,
            "description": "Fires the focus event",
            "itemtype": "method",
            "name": "focus",
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2600,
            "description": "Returns a new NodeList with all the next siblings of the nodes in the collection",
            "itemtype": "method",
            "name": "next",
            "return": {
                "description": "",
                "type": "NodeList"
            },
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2605,
            "description": "Returns a new NodeList with all the previous siblings of the nodes in the collection",
            "itemtype": "method",
            "name": "previous",
            "return": {
                "description": "",
                "type": "NodeList"
            },
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2622,
            "description": "Gets/sets the width of all the nodes in the collection",
            "itemtype": "method",
            "name": "width",
            "params": [
                {
                    "name": "width",
                    "description": "",
                    "type": "String|Number",
                    "optional": true
                }
            ],
            "memberof": "NodeList",
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2629,
            "description": "Gets/sets the height of all the nodes in the collection",
            "itemtype": "method",
            "name": "height",
            "params": [
                {
                    "name": "height",
                    "description": "",
                    "type": "String|Number",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2651,
            "description": "Gets/sets the position of the first node in the collection",
            "itemtype": "method",
            "name": "offsetTop",
            "params": [
                {
                    "name": "top",
                    "description": "",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/jet.js",
            "line": 2657,
            "description": "Gets/sets the position of the first node in the collection",
            "itemtype": "method",
            "name": "offsetLeft",
            "params": [
                {
                    "name": "left",
                    "description": "",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "NodeList",
            "module": "node"
        },
        {
            "file": "build/json.js",
            "line": 18,
            "description": "Takes a string and parses it into an object literal",
            "itemtype": "method",
            "name": "parse",
            "params": [
                {
                    "name": "json",
                    "description": "string",
                    "type": "String"
                }
            ],
            "class": "JSON",
            "module": "json"
        },
        {
            "file": "build/json.js",
            "line": 23,
            "description": "Takes an object literal and serialices it into a string",
            "itemtype": "method",
            "name": "stringify",
            "params": [
                {
                    "name": "an",
                    "description": "object literal",
                    "type": "Object"
                }
            ],
            "class": "JSON",
            "module": "json"
        },
        {
            "file": "build/layout.js",
            "line": 32,
            "itemtype": "config",
            "name": "direction",
            "description": "Direction in which this panel can be resized",
            "default": "LayoutPanelBase.Vertical",
            "writeonce": "",
            "class": "LayoutPanelBase",
            "module": "layout"
        },
        {
            "file": "build/layout.js",
            "line": 42,
            "itemtype": "config",
            "name": "minSize",
            "description": "Minimum size the panel can acquire. Applies to width or height depending on the 'direction' attribute",
            "default": "0",
            "writeonce": "",
            "class": "LayoutPanelBase",
            "module": "layout"
        },
        {
            "file": "build/layout.js",
            "line": 52,
            "itemtype": "config",
            "name": "shim",
            "description": "Whether the resize utility should use a shim to protect the mouse movements",
            "default": "false",
            "writeonce": "",
            "class": "LayoutPanelBase",
            "module": "layout"
        },
        {
            "file": "build/layout.js",
            "line": 62,
            "itemtype": "config",
            "name": "defaultChildType",
            "description": "Default type to apply to children",
            "default": "LayoutPanel",
            "class": "LayoutPanelBase",
            "module": "layout"
        },
        {
            "file": "build/log.js",
            "line": 30,
            "itemtype": "method",
            "name": "error",
            "description": "Logs an error",
            "class": "Log",
            "module": "log"
        },
        {
            "file": "build/log.js",
            "line": 37,
            "itemtype": "method",
            "name": "warning",
            "description": "Logs a warning",
            "class": "Log",
            "module": "log"
        },
        {
            "file": "build/log.js",
            "line": 44,
            "itemtype": "method",
            "name": "log",
            "description": "Logs a message",
            "class": "Log",
            "module": "log"
        },
        {
            "file": "build/menu.js",
            "line": 15,
            "itemtype": "attribute",
            "name": "labelNode",
            "description": "A pointer to the node containing the label",
            "default": "<span/>",
            "class": "Class",
            "module": "menu"
        },
        {
            "file": "build/menu.js",
            "line": 24,
            "itemtype": "attribute",
            "name": "label",
            "description": "The content of the Menu's label",
            "class": "Class",
            "module": "menu"
        },
        {
            "file": "build/oop.js",
            "line": 35,
            "itemtype": "method",
            "name": "create",
            "description": "Shortcut for creating a new class that extends Class",
            "static": 1,
            "params": [
                {
                    "name": "name",
                    "description": "Required. Name of the new class",
                    "type": "String"
                },
                {
                    "name": "superclass",
                    "description": "Optional. Superclass to extend. Default is Class",
                    "type": "Class"
                },
                {
                    "name": "proto",
                    "description": "Optional. An object to map to the created class' prototype",
                    "type": "Object"
                },
                {
                    "name": "attrs",
                    "description": "Optional. An object to map to the created class as static properties",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "built class",
                "type": "BuiltClass"
            },
            "class": "Class",
            "module": "oop"
        },
        {
            "file": "build/oop.js",
            "line": 63,
            "itemtype": "method",
            "name": "mixin",
            "description": "Mixes in a number of classes into another",
            "static": 1,
            "params": [
                {
                    "name": "constructor",
                    "description": "Class into which to mix the others in",
                    "type": "Class"
                },
                {
                    "name": "extensions",
                    "description": "A list of the classes to mix in",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "the mixed class",
                "type": "Class"
            },
            "class": "Class",
            "module": "oop"
        },
        {
            "file": "build/oop.js",
            "line": 91,
            "itemtype": "method",
            "name": "getClasses",
            "description": "Returns an array with all the classes in the prototype chain, from the inner most one to the outer most one",
            "static": 1,
            "params": [
                {
                    "name": "instance",
                    "description": "The instance from which to get all constructors",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Class",
            "module": "oop"
        },
        {
            "file": "build/oop.js",
            "line": 108,
            "itemtype": "method",
            "name": "walk",
            "description": "Runs a function through all the classes returned by Class.getClasses()",
            "static": 1,
            "params": [
                {
                    "name": "instance",
                    "description": "The instance from which to get all constructors",
                    "type": "Object"
                },
                {
                    "name": "fn",
                    "description": "The function to execute on these constructors",
                    "type": "Function"
                },
                {
                    "name": "thisp",
                    "description": "The object to use as context. Default is the instance",
                    "type": "Object"
                }
            ],
            "class": "Class",
            "module": "oop"
        },
        {
            "file": "build/oop.js",
            "line": 127,
            "itemtype": "method",
            "name": "inherit",
            "description": "Creates a new class that inherits from this one",
            "params": [
                {
                    "name": "name",
                    "description": "Required. The name of the new class",
                    "type": "String"
                },
                {
                    "name": "proto",
                    "description": "Optional. Prototype properties of the new class",
                    "type": "Object"
                },
                {
                    "name": "attrs",
                    "description": "Optional. Static properties of the new class",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "BuiltClass"
            },
            "class": "BuiltClass",
            "module": "oop"
        },
        {
            "file": "build/oop.js",
            "line": 135,
            "itemtype": "method",
            "name": "mixin",
            "description": "Mixes other classes into this one",
            "params": [
                {
                    "name": "exts",
                    "description": "A list of classes to mix in",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "BuiltClass"
            },
            "class": "BuiltClass",
            "module": "oop"
        },
        {
            "file": "build/paginator.js",
            "line": 35,
            "itemtype": "attribute",
            "name": "recordSet",
            "description": "A RecordSet with the data the paginator should handle",
            "required": "",
            "type": "RecordSet",
            "class": "Paginator",
            "module": "paginator"
        },
        {
            "file": "build/paginator.js",
            "line": 44,
            "itemtype": "attribute",
            "name": "recordsPerPage",
            "description": "Number of records each page should show",
            "type": "Number",
            "default": "10",
            "class": "Paginator",
            "module": "paginator"
        },
        {
            "file": "build/paginator.js",
            "line": 53,
            "itemtype": "attribute",
            "name": "firstLast",
            "description": "Wheter the 'First' and 'Last' buttons should appear",
            "type": "Boolean",
            "default": "true",
            "class": "Paginator",
            "module": "paginator"
        },
        {
            "file": "build/paginator.js",
            "line": 62,
            "itemtype": "attribute",
            "name": "prevNext",
            "description": "Wheter the 'previous' and 'next' buttons should appear",
            "type": "Boolean",
            "default": "true",
            "class": "Paginator",
            "module": "paginator"
        },
        {
            "file": "build/paginator.js",
            "line": 71,
            "itemtype": "attribute",
            "name": "pagesShown",
            "description": "Number of pages that should be listed in the paginator (1, 2, 3...)",
            "type": "Number",
            "default": "5",
            "class": "Paginator",
            "module": "paginator"
        },
        {
            "file": "build/paginator.js",
            "line": 80,
            "itemtype": "attribute",
            "name": "firstText",
            "description": "The text of the 'first' button",
            "writeonce": "",
            "default": "'<< first'",
            "type": "String",
            "class": "Paginator",
            "module": "paginator"
        },
        {
            "file": "build/paginator.js",
            "line": 91,
            "itemtype": "attribute",
            "name": "prevText",
            "description": "The text of the 'previous' button",
            "writeonce": "",
            "default": "'< prev'",
            "type": "String",
            "class": "Paginator",
            "module": "paginator"
        },
        {
            "file": "build/paginator.js",
            "line": 102,
            "itemtype": "attribute",
            "name": "nextText",
            "description": "The text of the 'next' button",
            "writeonce": "",
            "default": "'next >'",
            "type": "String",
            "class": "Paginator",
            "module": "paginator"
        },
        {
            "file": "build/paginator.js",
            "line": 113,
            "itemtype": "attribute",
            "name": "lastText",
            "description": "The text of the 'last' button",
            "writeonce": "",
            "default": "'last >>'",
            "type": "String",
            "class": "Paginator",
            "module": "paginator"
        },
        {
            "file": "build/paginator.js",
            "line": 128,
            "itemtype": "attribute",
            "name": "currentPage",
            "description": "The current selected page. If set in the config, \nthe paginator will go directly to that page when rendered",
            "writeonce": "",
            "type": "Number",
            "class": "Paginator",
            "module": "paginator"
        },
        {
            "file": "build/paginator.js",
            "line": 139,
            "itemtype": "attribute",
            "name": "pageCount",
            "description": "The number of pages in the paginator",
            "readonly": "",
            "type": "Number",
            "class": "Paginator",
            "module": "paginator"
        },
        {
            "file": "build/paginator.js",
            "line": 164,
            "description": "Go to a certain page",
            "itemtype": "method",
            "name": "goTo",
            "params": [
                {
                    "name": "page",
                    "description": "",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "Paginator",
            "module": "paginator"
        },
        {
            "file": "build/progressbar.js",
            "line": 32,
            "itemtype": "attribute",
            "name": "minMvalue",
            "description": "Minimum value that the progressbar data will take",
            "default": "0",
            "class": "ProgressBar",
            "module": "progressbar"
        },
        {
            "file": "build/progressbar.js",
            "line": 40,
            "itemtype": "attribute",
            "name": "maxMvalue",
            "description": "Maximum value that the progressbar data will take",
            "default": "100",
            "class": "ProgressBar",
            "module": "progressbar"
        },
        {
            "file": "build/progressbar.js",
            "line": 48,
            "itemtype": "attribute",
            "name": "value",
            "description": "Current value the progressbar is taking",
            "default": "0",
            "class": "ProgressBar",
            "module": "progressbar"
        },
        {
            "file": "build/progressbar.js",
            "line": 62,
            "itemtype": "attribute",
            "name": "direction",
            "description": "Direction in which the progressbar increases its size. May be \"ltr\", \"ttb\" or \"btt\"",
            "default": "\"ltr\"",
            "writeonce": "",
            "class": "ProgressBar",
            "module": "progressbar"
        },
        {
            "file": "build/progressbar.js",
            "line": 72,
            "itemtype": "attribute",
            "name": "animate",
            "description": "Whether to animate the progressbar progress. The Anim module must be present",
            "default": "false",
            "writeonce": "",
            "class": "ProgressBar",
            "module": "progressbar"
        },
        {
            "file": "build/progressbar.js",
            "line": 85,
            "itemtype": "attribute",
            "name": "easing",
            "description": "Easing to use when animating",
            "default": "linear",
            "class": "ProgressBar",
            "module": "progressbar"
        },
        {
            "file": "build/progressbar.js",
            "line": 92,
            "itemtype": "attribute",
            "name": "duration",
            "description": "Duration of the animation in case it is being used",
            "default": "500 ms",
            "class": "ProgressBar",
            "module": "progressbar"
        },
        {
            "file": "build/progressbar.js",
            "line": 100,
            "itemtype": "attribute",
            "name": "bar",
            "description": "The DOM element that represents the bar in the progressbar",
            "readonly": "",
            "class": "ProgressBar",
            "module": "progressbar"
        },
        {
            "file": "build/resize.js",
            "line": 46,
            "itemtype": "attribute",
            "name": "node",
            "description": "The node to be resized",
            "required": "",
            "class": "Resize",
            "module": "resize"
        },
        {
            "file": "build/resize.js",
            "line": 57,
            "description": "An array with the position of the needed handles. Posible values: 't', 'b', 'r', 'l', 'tr', 'tl', etc",
            "type": "Array",
            "default": "['b', 'r', 'br']",
            "class": "Resize",
            "module": "resize"
        },
        {
            "file": "build/resize.js",
            "line": 67,
            "itemtype": "attribute",
            "name": "hiddenHandles",
            "description": "If set to true, the handles are interactive but invisible",
            "type": "Boolean",
            "default": "false",
            "class": "Resize",
            "module": "resize"
        },
        {
            "file": "build/resize.js",
            "line": 79,
            "itemtype": "attribute",
            "name": "minWidth",
            "description": "The minimum with the node can achieve",
            "type": "Number",
            "default": "0",
            "class": "Resize",
            "module": "resize"
        },
        {
            "file": "build/resize.js",
            "line": 88,
            "itemtype": "attribute",
            "name": "minHeight",
            "description": "The minimum height the node can achieve",
            "type": "Number",
            "default": "0",
            "class": "Resize",
            "module": "resize"
        },
        {
            "file": "build/resize.js",
            "line": 97,
            "itemtype": "attribute",
            "name": "constrain",
            "description": "If set to true, the node can't become bigger than the screen",
            "type": "Boolean",
            "default": "false",
            "class": "Resize",
            "module": "resize"
        },
        {
            "file": "build/resize.js",
            "line": 106,
            "itemtype": "attribute",
            "name": "useProxy",
            "description": "Whether to use a copy of the node while resizing or not.\nPossible values: false, true, 'clone'",
            "type": "Boolean | String",
            "writeonce": "",
            "default": "false",
            "class": "Resize",
            "module": "resize"
        },
        {
            "file": "build/resize.js",
            "line": 118,
            "itemtype": "attribute",
            "name": "animate",
            "description": "Creates an animation when the resize handle is released. Can only be set to true\nif 'proxy' is set to true. <strong>Requires the Anim module.</strong>",
            "type": "Boolean",
            "default": "false",
            "class": "Resize",
            "module": "resize"
        },
        {
            "file": "build/resize.js",
            "line": 131,
            "ocnfig": "reposition",
            "description": "If set to true, the resize utility will automatically change the position of the \nnode so that is stays in place when resizing it in any direction",
            "type": "Boolean",
            "default": "false",
            "class": "Resize",
            "module": "resize"
        },
        {
            "file": "build/resize.js",
            "line": 141,
            "itemtype": "attribute",
            "name": "shim",
            "description": "Uses invisible elements to be able to resize the node over iframes",
            "type": "Boolean",
            "default": "false",
            "class": "Resize",
            "module": "resize"
        },
        {
            "file": "build/resize.js",
            "line": 150,
            "itemtype": "attribute",
            "name": "locked",
            "description": "If the resize is locked the handles are not interactive",
            "type": "Boolean",
            "default": "false",
            "class": "Resize",
            "module": "resize"
        },
        {
            "file": "build/resize.js",
            "line": 379,
            "itemtype": "event",
            "name": "beforeResize",
            "description": "Fires before the resize action starts. If prevented, the resize action doesn't start",
            "params": [
                {
                    "name": "currentWith",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "currentHeight",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "offsetLeft",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "offsetTop",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Resize",
            "module": "resize"
        },
        {
            "file": "build/resize.js",
            "line": 395,
            "itemtype": "event",
            "name": "resize",
            "description": "Fires during the resize action",
            "params": [
                {
                    "name": "currentWith",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "currentHeight",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "offsetLeft",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "offsetTop",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Resize",
            "module": "resize"
        },
        {
            "file": "build/resize.js",
            "line": 462,
            "itemtype": "event",
            "name": "endResize",
            "description": "Fires when the resize action ends",
            "class": "Resize",
            "module": "resize"
        },
        {
            "file": "build/resize.js",
            "line": 470,
            "itemtype": "method",
            "name": "stop",
            "description": "Makes the resize action end prematurely",
            "chainable": 1,
            "class": "Resize",
            "module": "resize"
        },
        {
            "file": "build/resize.js",
            "line": 479,
            "itemtype": "method",
            "name": "lock",
            "description": "Makes the handles non interactive",
            "chainable": 1,
            "class": "Resize",
            "module": "resize"
        },
        {
            "file": "build/resize.js",
            "line": 487,
            "itemtype": "method",
            "name": "unlock",
            "description": "Makes the handles interactive",
            "chainable": 1,
            "class": "Resize",
            "module": "resize"
        },
        {
            "file": "build/swf.js",
            "line": 35,
            "itemtype": "config",
            "name": "src",
            "description": "The URL of the Flash to create",
            "required": "",
            "class": "SWF",
            "module": "swf"
        },
        {
            "file": "build/swf.js",
            "line": 43,
            "itemtype": "config",
            "name": "swfNode",
            "description": "A pointer to the Flash node",
            "readonly": "",
            "class": "SWF",
            "module": "swf"
        },
        {
            "file": "build/swf.js",
            "line": 53,
            "itemtype": "config",
            "name": "wmode",
            "description": "Type of WMode to apply to the flash. May be 'transparent', 'window' or 'opaque'",
            "type": "String",
            "default": "'transparent'",
            "class": "SWF",
            "module": "swf"
        },
        {
            "file": "build/swf.js",
            "line": 62,
            "itemtype": "config",
            "name": "nodeType",
            "description": "Type attribute for the Flash node",
            "type": "String",
            "default": "'application/x-shockwave-flash'",
            "class": "SWF",
            "module": "swf"
        },
        {
            "file": "build/swf.js",
            "line": 71,
            "itemtype": "config",
            "name": "flashvars",
            "description": "An object literal with variables to pass as flashvars to the SWF",
            "class": "SWF",
            "module": "swf"
        },
        {
            "file": "build/swf.js",
            "line": 83,
            "itemtype": "config",
            "name": "allowFullscreen",
            "description": "Parameter to pass to the flash node that indicates if it can go into fullscreen mode or not",
            "type": "Boolean",
            "default": "true",
            "class": "SWF",
            "module": "swf"
        },
        {
            "file": "build/swf.js",
            "line": 96,
            "itemtype": "config",
            "name": "name",
            "description": "Name SWF attribute. The SWF node's id will be the same as the name",
            "class": "SWF",
            "module": "swf"
        },
        {
            "file": "build/swf.js",
            "line": 103,
            "itemtype": "config",
            "name": "allowScriptAccess",
            "description": "allowScriptAccess SWF attribute",
            "type": "String",
            "default": "'always'",
            "class": "SWF",
            "module": "swf"
        },
        {
            "file": "build/swf.js",
            "line": 113,
            "itemtype": "property",
            "name": "OBJECT_INLINE_ATTRS",
            "description": "Attributes that are applied as tag attributes in an <object> instead of as <param> tags",
            "static": 1,
            "class": "SWF",
            "module": "swf"
        },
        {
            "file": "build/swf.js",
            "line": 126,
            "itemtype": "property",
            "name": "SWF_ATTRS",
            "description": "Class attributes that are applied to the Flash",
            "static": 1,
            "class": "SWF",
            "module": "swf"
        },
        {
            "file": "build/swf.js",
            "line": 189,
            "description": "Set a SWF attribute normalizing cross-browser behaviors.\nUse this to set attributes not defined as class attributes",
            "itemtype": "method",
            "name": "setAttr",
            "params": [
                {
                    "name": "name",
                    "description": "Attribute name",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "class": "SWF",
            "module": "swf"
        },
        {
            "file": "build/swf.js",
            "line": 203,
            "description": "Set multiple SWF parameters",
            "itemtype": "method",
            "name": "setAttrs",
            "params": [
                {
                    "name": "attrs",
                    "description": "Object literal containing multiple parameters",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "SWF",
            "module": "swf"
        },
        {
            "file": "build/tabview.js",
            "line": 38,
            "itemtype": "attribute",
            "name": "panelNode",
            "description": "The element to use as a panel",
            "writeonce": "",
            "class": "Tab",
            "module": "tabview"
        },
        {
            "file": "build/tabview.js",
            "line": 46,
            "itemtype": "attribute",
            "name": "triggerEvent",
            "description": "Event that triggers the selection of this tab",
            "default": "'click'",
            "type": "String",
            "class": "Tab",
            "module": "tabview"
        },
        {
            "file": "build/tabview.js",
            "line": 55,
            "itemtype": "attribute",
            "name": "label",
            "description": "Gets/sets the content of the tab's label",
            "class": "Tab",
            "module": "tabview"
        },
        {
            "file": "build/tabview.js",
            "line": 62,
            "itemtype": "attribute",
            "name": "content",
            "description": "Gets/sets the content of the tab's panel",
            "class": "Tab",
            "module": "tabview"
        },
        {
            "file": "build/tabview.js",
            "line": 69,
            "itemtype": "attribute",
            "name": "href",
            "description": "Href attribute for this tab's label. Useful for progressive enhancement",
            "default": "'#'",
            "writeonce": "",
            "class": "Tab",
            "module": "tabview"
        },
        {
            "file": "build/tabview.js",
            "line": 183,
            "itemtype": "attribute",
            "name": "panelContainer",
            "description": "Node that contains all tab panels",
            "writeonce": "",
            "type": "NodeList",
            "class": "TabView",
            "module": "tabview"
        },
        {
            "file": "build/treeview.js",
            "line": 58,
            "itemtype": "attribute",
            "name": "type",
            "description": "Type of the node. Available types are 'text'",
            "default": "\"text\"",
            "class": "TreeNode",
            "module": "treeview"
        },
        {
            "file": "build/treeview.js",
            "line": 66,
            "itemtype": "attribute",
            "name": "title",
            "description": "Title attribute for the node",
            "type": "String",
            "class": "TreeNode",
            "module": "treeview"
        },
        {
            "file": "build/treeview.js",
            "line": 74,
            "itemtype": "attribute",
            "name": "label",
            "description": "This node's label or title",
            "type": "String|HTMLElement",
            "class": "TreeNode",
            "module": "treeview"
        },
        {
            "file": "build/treeview.js",
            "line": 82,
            "itemtype": "attribute",
            "name": "controlNode",
            "description": "Node that expands/collapses this TreeNode",
            "writeonce": "",
            "class": "TreeNode",
            "module": "treeview"
        },
        {
            "file": "build/treeview.js",
            "line": 90,
            "itemtype": "attribute",
            "name": "labelNode",
            "description": "Node that holds this TreeNode's title/label",
            "writeonce": "",
            "class": "TreeNode",
            "module": "treeview"
        },
        {
            "file": "build/treeview.js",
            "line": 205,
            "itemtype": "event",
            "name": "node:expand",
            "description": "Fires when a node is expanded. Preventing the default behavior will\nstop the node from expanding",
            "params": [
                {
                    "name": "The",
                    "description": "node that initiated the action",
                    "type": "Node"
                }
            ],
            "class": "TreeView",
            "module": "treeview"
        },
        {
            "file": "build/treeview.js",
            "line": 211,
            "itemtype": "event",
            "name": "node:collapse",
            "description": "Fires when a node is collapsed. Preventing the default behavior will\nstop the node from collapsing",
            "params": [
                {
                    "name": "The",
                    "description": "node that initiated the action",
                    "type": "Node"
                }
            ],
            "class": "TreeView",
            "module": "treeview"
        },
        {
            "file": "build/vector.js",
            "line": 38,
            "description": "Short for paseInt(str, 10). Doesn't fail if it isn't a number",
            "itemtype": "method",
            "name": "parseDec",
            "params": [
                {
                    "name": "str",
                    "description": "Decimal number candidate",
                    "type": "String"
                }
            ],
            "final": 1,
            "class": "Vector",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 48,
            "description": "Transforms a decimal number into a hex string",
            "itemtype": "method",
            "name": "decToHex",
            "params": [
                {
                    "name": "dec",
                    "description": "Decimal number",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "String"
            },
            "final": 1,
            "class": "Vector",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 58,
            "description": "Transforms a hext string into a decimal number",
            "itemtype": "method",
            "name": "hexToDec",
            "params": [
                {
                    "name": "hex",
                    "description": "Hex string",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Number"
            },
            "final": 1,
            "class": "Vector",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 68,
            "description": "Takes a hex color and returns an array of three numbers between 0 and 255",
            "itemtype": "method",
            "name": "colorHexToArray",
            "params": [
                {
                    "name": "hexColor",
                    "description": "Hex color string",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Array"
            },
            "final": 1,
            "class": "Vector",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 89,
            "description": "Takes an array of three decimal colors and returns a hex color string",
            "itemtype": "method",
            "name": "colorArrayToHex",
            "params": [
                {
                    "name": "arr",
                    "description": "Color array",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "String"
            },
            "final": 1,
            "class": "Vector",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 254,
            "itemtype": "attribute",
            "name": "node",
            "description": "A pointer to the vector node",
            "type": "SVG/VML node",
            "class": "Vector",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 259,
            "itemtype": "attribute",
            "name": "width",
            "description": "width",
            "class": "Vector",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 263,
            "itemtype": "attribute",
            "name": "fill-opacity",
            "description": "Opacity",
            "class": "Vector",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 289,
            "itemtype": "method",
            "name": "append",
            "description": "Append the passed vector to this vector",
            "params": [
                {
                    "name": "vector",
                    "description": "",
                    "type": "Vector"
                }
            ],
            "chainable": 1,
            "class": "Vector",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 299,
            "itemtype": "method",
            "name": "appendTo",
            "description": "Append this vector's node to the target node",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "NodeList | Vector | DOMNode"
                }
            ],
            "chainable": 1,
            "class": "Vector",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 310,
            "itemtype": "method",
            "name": "remove",
            "description": "Detach this vector from the DOM and remove all event listeners",
            "chainable": 1,
            "class": "Vector",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 323,
            "itemtype": "method",
            "name": "detach",
            "description": "Detach this vector from the DOM but keep all event listeners",
            "class": "Vector",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 334,
            "description": "Gets or sets CSS styles",
            "itemtype": "method",
            "name": "css",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String|Hash"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "Vector",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 356,
            "description": "Hides all nodes",
            "itemtype": "method",
            "name": "hide",
            "chainable": 1,
            "class": "Vector",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 370,
            "description": "Shows all nodes",
            "itemtype": "method",
            "name": "show",
            "chainable": 1,
            "class": "Vector",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 380,
            "description": "Returns true if the first node in the collection has the className CSS class",
            "itemtype": "method",
            "name": "hasClass",
            "params": [
                {
                    "name": "className",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Boolean"
            },
            "class": "Vector",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 391,
            "description": "Removes a number of classes from all nodes in the collection.\nTakes multiple string parameters",
            "itemtype": "method",
            "name": "removeClass",
            "chainable": 1,
            "class": "Vector",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 412,
            "description": "Adds a number of classes to all nodes in the collection\nTakes multiple string parameters",
            "itemtype": "method",
            "name": "addClass",
            "chainable": 1,
            "class": "Vector",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 435,
            "description": "Adds/removes a certain class from all nodes in the collection",
            "itemtype": "method",
            "name": "toggleClass",
            "params": [
                {
                    "name": "sClass",
                    "description": "",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "class": "Vector",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 459,
            "itemtype": "method",
            "name": "on",
            "description": "Adds an event listener to the vector node",
            "params": [
                {
                    "name": "eventType",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "class": "Vector",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 466,
            "itemtype": "method",
            "name": "unbind",
            "description": "Remove an event listeners from the vector node",
            "params": [
                {
                    "name": "eventType",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "class": "Vector",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 473,
            "itemtype": "method",
            "name": "unbindAll",
            "description": "Removes all event listeners of a certain type from the vector node",
            "params": [
                {
                    "name": "eventType",
                    "description": "",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "class": "Vector",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 496,
            "itemtype": "method",
            "name": "rotate",
            "description": "Rotates the rectangle",
            "params": [
                {
                    "name": "angle",
                    "description": "Angle between 0 and 360",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "Vector.Rectangle",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 532,
            "cponfig": "rx",
            "description": "Horizontal radius length",
            "class": "Vector.Ellipse",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 550,
            "itemtype": "attribute",
            "name": "ry",
            "description": "Vertical radius length",
            "class": "Vector.Ellipse",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 568,
            "itemtype": "attribute",
            "name": "cx",
            "description": "X coordinate of the ellipse's center",
            "class": "Vector.Ellipse",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 582,
            "itemtype": "attribute",
            "name": "cy",
            "description": "Y coordinate of the ellipse's center",
            "class": "Vector.Ellipse",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 612,
            "itemtype": "attribute",
            "name": "r",
            "description": "Radius of the circle",
            "class": "Vector.Circle",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 632,
            "itemtype": "attribute",
            "name": "cx",
            "description": "X coordinate of the circle's center",
            "class": "Vector.Circle",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 646,
            "itemtype": "attribute",
            "name": "cy",
            "description": "Y coordinate of the circle's center",
            "class": "Vector.Circle",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 677,
            "itemtype": "attribute",
            "name": "x1",
            "description": "X coordinate of the line's starting point",
            "class": "Vector.Line",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 685,
            "itemtype": "attribute",
            "name": "x2",
            "description": "X coordinate of the line's ending point",
            "class": "Vector.Line",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 693,
            "itemtype": "attribute",
            "name": "y1",
            "description": "Y coordinate of the line's starting point",
            "class": "Vector.Line",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 701,
            "itemtype": "attribute",
            "name": "y2",
            "description": "Y coordinate of the line's ending point",
            "class": "Vector.Line",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 724,
            "itemtype": "attribute",
            "name": "y2",
            "description": "Y coordinate of the line's ending point",
            "class": "Vector.Path",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 796,
            "itemtype": "method",
            "name": "rectangle",
            "description": "Draw a rectangle in this vector view",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Vector.Rectangle"
            },
            "class": "VectorView",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 805,
            "itemtype": "method",
            "name": "circle",
            "description": "Draw a circle in this vector view",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Vector.Circle"
            },
            "class": "VectorView",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 814,
            "itemtype": "method",
            "name": "ellipse",
            "description": "Draw an ellipse in this vector view",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Vector.Ellipse"
            },
            "class": "VectorView",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 823,
            "itemtype": "method",
            "name": "image",
            "description": "Draw an image in this vector view",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Vector.Image"
            },
            "class": "VectorView",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 832,
            "itemtype": "method",
            "name": "text",
            "description": "Draw text in this vector view",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Vector.Text"
            },
            "class": "VectorView",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 841,
            "itemtype": "method",
            "name": "line",
            "description": "Draw a line in this vector view",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Vector.Line"
            },
            "class": "VectorView",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 850,
            "itemtype": "method",
            "name": "path",
            "description": "Draw a path in this vector view",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Vector.Path"
            },
            "class": "VectorView",
            "module": "vector"
        },
        {
            "file": "build/vector.js",
            "line": 859,
            "itemtype": "method",
            "name": "clear",
            "description": "Remove all vectors from this vector view",
            "chainable": 1,
            "class": "VectorView",
            "module": "vector"
        },
        {
            "file": "build/widget-alignment.js",
            "line": 215,
            "itemtype": "attribute",
            "name": "fixed",
            "description": "Whether the widget should stay fixed to the viewport or no",
            "default": "false",
            "class": "WidgetAlignment",
            "module": "widget-alignment"
        },
        {
            "file": "build/widget-alignment.js",
            "line": 224,
            "itemtype": "attribute",
            "name": "constrain",
            "description": "If set to true, the widget will never bleed outside the viewport",
            "default": "false",
            "class": "WidgetAlignment",
            "module": "widget-alignment"
        },
        {
            "file": "build/widget-alignment.js",
            "line": 233,
            "itemtype": "attribute",
            "name": "align",
            "description": "Alignment configuration. An object containing three optional properties:\n- node: a selector or node instance of a node to use as a reference\n- points: an array of two values representing corners of nodes. The first one is this widget's corner to use. The second one is the target's corner\n- offset: an array of two values that move the widget relative to the calculated position",
            "default": "{ points: [WidgetAlignment.TopLeft, WidgetAlignment.TopLeft], offset: [0, 0] }",
            "class": "WidgetAlignment",
            "module": "widget-alignment"
        },
        {
            "file": "build/widget-parentchild.js",
            "line": 70,
            "itemtype": "attribute",
            "name": "childType",
            "description": "Constructor reference to the default type of the children managed by this Widget. The default value is taken from defaultChildType",
            "class": "WidgetParent",
            "module": "widget-parentchild"
        },
        {
            "file": "build/widget-parentchild.js",
            "line": 82,
            "itemtype": "attribute",
            "name": "defaultChildType",
            "description": "default value used when a childType is not provided. This attribute is used mostly by classes using WidgetParent.",
            "default": "WidgetChild",
            "class": "WidgetParent",
            "module": "widget-parentchild"
        },
        {
            "file": "build/widget-parentchild.js",
            "line": 91,
            "itemtype": "attribute",
            "name": "children",
            "description": "An array of instances or configuration objects representing the widget's children",
            "type": "Array",
            "default": "[]",
            "class": "WidgetParent",
            "module": "widget-parentchild"
        },
        {
            "file": "build/widget-parentchild.js",
            "line": 104,
            "itemtype": "attribute",
            "name": "selection",
            "description": "Returns the currently selected child Widget. If the mulitple attribte is set to true will return an Y.ArrayList instance containing the currently selected children. If no children are selected, will return null",
            "default": "null",
            "type": "Widget|Array",
            "class": "WidgetParent",
            "module": "widget-parentchild"
        },
        {
            "file": "build/widget-parentchild.js",
            "line": 114,
            "itemtype": "attribute",
            "name": "multiple",
            "description": "Boolean indicating if multiple children can be selected at once. Whether or not multiple selection is enabled is always delegated to the value of the multiple attribute of the root widget in the object hierarchy",
            "default": "false",
            "class": "WidgetParent",
            "module": "widget-parentchild"
        },
        {
            "file": "build/widget-parentchild.js",
            "line": 124,
            "itemtype": "attribute",
            "name": "selectedIndex",
            "description": "The index of the currently selected item",
            "type": "Number",
            "class": "WidgetParent",
            "module": "widget-parentchild"
        },
        {
            "file": "build/widget-parentchild.js",
            "line": 238,
            "itemtype": "method",
            "name": "addChild",
            "description": "Adds a Widget as a child. If the specified Widget already has a parent it will be removed from its current parent before being added as a child",
            "params": [
                {
                    "name": "child",
                    "description": "<Widget|Object> The Widget instance, or configuration object for the Widget to be added as a child"
                },
                {
                    "name": "index",
                    "description": "<Number> (Optional.) Number representing the position at which the child should be inserted"
                }
            ],
            "return": {
                "description": "child",
                "type": "Widget"
            },
            "class": "WidgetParent",
            "module": "widget-parentchild"
        },
        {
            "file": "build/widget-parentchild.js",
            "line": 260,
            "itemtype": "method",
            "name": "add",
            "description": "Same as addChild, but chainable",
            "params": [
                {
                    "name": "child",
                    "description": "<Widget|Object> The Widget instance, or configuration object for the Widget to be added as a child"
                },
                {
                    "name": "index",
                    "description": "<Number> (Optional.) Number representing the position at which the child should be inserted"
                }
            ],
            "chainable": 1,
            "class": "WidgetParent",
            "module": "widget-parentchild"
        },
        {
            "file": "build/widget-parentchild.js",
            "line": 272,
            "itemtype": "method",
            "name": "remove",
            "description": "Removes a child",
            "params": [
                {
                    "name": "child",
                    "description": "The child widget or its index",
                    "type": "WidgetChild|Number"
                }
            ],
            "chainable": 1,
            "class": "WidgetParent",
            "module": "widget-parentchild"
        },
        {
            "file": "build/widget-parentchild.js",
            "line": 289,
            "itemtype": "method",
            "name": "first",
            "class": "WidgetParent",
            "module": "widget-parentchild"
        },
        {
            "file": "build/widget-parentchild.js",
            "line": 295,
            "itemtype": "method",
            "name": "last",
            "class": "WidgetParent",
            "module": "widget-parentchild"
        },
        {
            "file": "build/widget-parentchild.js",
            "line": 301,
            "itemtype": "method",
            "name": "removeAll",
            "chainable": 1,
            "class": "WidgetParent",
            "module": "widget-parentchild"
        },
        {
            "file": "build/widget-parentchild.js",
            "line": 330,
            "itemtype": "attribute",
            "name": "selected",
            "description": "Boolean indicating if the Widget is selected",
            "type": "Boolean",
            "default": "false",
            "class": "WidgetChild",
            "module": "widget-parentchild"
        },
        {
            "file": "build/widget-parentchild.js",
            "line": 340,
            "itemtype": "attribute",
            "name": "index",
            "description": "Number representing the Widget's ordinal position in its parent Widget",
            "default": "0",
            "type": "Number",
            "class": "WidgetChild",
            "module": "widget-parentchild"
        },
        {
            "file": "build/widget-parentchild.js",
            "line": 350,
            "itemtype": "attribute",
            "name": "parent",
            "description": "Retrieves the parent of the Widget in the object hierarchy",
            "default": "null",
            "class": "WidgetChild",
            "module": "widget-parentchild"
        },
        {
            "file": "build/widget-parentchild.js",
            "line": 358,
            "itemtype": "attribute",
            "name": "root",
            "description": "Retrieves the root parent of the Widget",
            "readonly": "",
            "class": "WidgetChild",
            "module": "widget-parentchild"
        },
        {
            "file": "build/widget-parentchild.js",
            "line": 397,
            "itemtype": "method",
            "name": "select",
            "description": "Selects this widget",
            "chainable": 1,
            "class": "WidgetChild",
            "module": "widget-parentchild"
        },
        {
            "file": "build/widget-parentchild.js",
            "line": 406,
            "itemtype": "method",
            "name": "select",
            "description": "Unselects this widget",
            "chainable": 1,
            "class": "WidgetChild",
            "module": "widget-parentchild"
        },
        {
            "file": "build/widget-parentchild.js",
            "line": 415,
            "itemtype": "method",
            "name": "toggle",
            "description": "Selects/unselects this widget",
            "chainable": 1,
            "class": "WidgetChild",
            "module": "widget-parentchild"
        },
        {
            "file": "build/widget-parentchild.js",
            "line": 424,
            "itemtype": "method",
            "name": "next",
            "description": "Returns the Widget's next sibling",
            "return": {
                "description": "Widget Widget instance"
            },
            "class": "WidgetChild",
            "module": "widget-parentchild"
        },
        {
            "file": "build/widget-parentchild.js",
            "line": 433,
            "itemtype": "method",
            "name": "previous",
            "description": "Returns the Widget's previous sibling",
            "return": {
                "description": "Widget Widget instance"
            },
            "class": "WidgetChild",
            "module": "widget-parentchild"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 33,
            "static": 1,
            "itemtype": "property",
            "name": "DEFAULT_CSS",
            "description": "The default css used when creating the document.",
            "type": "String",
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 40,
            "static": 1,
            "itemtype": "property",
            "name": "HTML",
            "description": "The template string used to create the iframe",
            "type": "String",
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 47,
            "static": 1,
            "itemtype": "property",
            "name": "PAGE_HTML",
            "description": "The template used to create the page when created dynamicall$.",
            "type": "String",
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 55,
            "static": 1,
            "itemtype": "method",
            "name": "getDocType",
            "description": "Parses document.doctype and generates a DocType to match the parent page, if supported.\nFor IE8, it grabs document.all[0].nodeValue and uses that. For IE < 8, it falls back to Frame.DOC_TYPE.",
            "return": {
                "description": "The normalized DocType to apply to the iframe",
                "type": "String"
            },
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 84,
            "static": 1,
            "itemtype": "property",
            "name": "DOC_TYPE",
            "description": "The DOCTYPE to prepend to the new document when created. Should match the one on the page being served.",
            "type": "String",
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 91,
            "static": 1,
            "itemtype": "property",
            "name": "META",
            "description": "The meta-tag for Content-Type to add to the dynamic document",
            "type": "String",
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 99,
            "static": 1,
            "itemtype": "property",
            "name": "NAME",
            "description": "The name of the class (frame)",
            "type": "String",
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 106,
            "itemtype": "attribute",
            "name": "title",
            "description": "The title to give the blank page.",
            "type": "String",
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 114,
            "itemtype": "attribute",
            "name": "dir",
            "description": "The default text direction for this new frame. Default: ltr",
            "type": "String",
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 122,
            "itemtype": "attribute",
            "name": "lang",
            "description": "The default language. Default: en-US",
            "type": "String",
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 130,
            "itemtype": "attribute",
            "name": "src",
            "description": "The src of the iframe/window. Defaults to javascript:;",
            "type": "String",
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 139,
            "itemtype": "attribute",
            "name": "content",
            "description": "The string to inject into the body of the new frame/window.",
            "type": "String",
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 149,
            "itemtype": "attribute",
            "name": "use",
            "description": "Array of modules to include in the scoped YUI instance at render time. Default: ['none', 'selector-css2']",
            "writeonce": "",
            "type": "Array",
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 159,
            "itemtype": "attribute",
            "name": "container",
            "description": "The container to append the iFrame to on render.",
            "type": "String/HTMLElement/Node",
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 170,
            "itemtype": "attribute",
            "name": "node",
            "description": "The Node instance of the iframe.",
            "type": "Node",
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 182,
            "itemtype": "attribute",
            "name": "id",
            "description": "Set the id of the new Node. (optional)",
            "type": "String",
            "writeonce": "",
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 197,
            "itemtype": "attribute",
            "name": "linkedcss",
            "description": "An array of url's to external linked style sheets",
            "type": "String",
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 207,
            "itemtype": "attribute",
            "name": "extracss",
            "description": "A string of CSS to add to the Head of the Editor",
            "type": "String",
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 216,
            "access": "private",
            "tagname": "",
            "itemtype": "attribute",
            "name": "rendered",
            "description": "Internal reference set when render is called.",
            "type": "Boolean",
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 227,
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_ready",
            "description": "Internal reference set when the content is read$.",
            "type": "Boolean",
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 234,
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_iframe",
            "description": "Internal Node reference to the iFrame or the window",
            "type": "Node",
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 241,
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_instance",
            "description": "Internal reference to the YUI instance bound to the iFrame or window",
            "type": "YUI",
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 248,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_create",
            "description": "Create the iframe or Window and get references to the Document & Window",
            "return": {
                "description": "Hash table containing references to the new Document & Window",
                "type": "Object"
            },
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 301,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_resolveWinDoc",
            "description": "Resolves the document and window from an iframe or window instance",
            "params": [
                {
                    "name": "c",
                    "description": "The YUI Config to add the window and document to",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object hash of window and document references, if a YUI config was passed, it is returned.",
                "type": "Object"
            },
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 330,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_onContentReady",
            "description": "Called once the content is available in the frame/window and calls the final use call\non the internal instance so that the modules are loaded properl$.",
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 342,
            "itemtype": "event",
            "name": "contentReady",
            "description": "Fires when the content is ready to use",
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 360,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_getHTML",
            "description": "Get the content from the iframe",
            "params": [
                {
                    "name": "html",
                    "description": "The raw HTML from the body of the iframe.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 374,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_setHTML",
            "description": "Set the content of the iframe",
            "params": [
                {
                    "name": "html",
                    "description": "The raw HTML to set the body of the iframe to.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 394,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_setLinkedCSS",
            "description": "Set's the linked CSS on the instance..",
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 415,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_setLinkedCSS",
            "description": "Set's the linked CSS on the instance..",
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 427,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_setExtraCSS",
            "description": "Set's the extra CSS on the instance..",
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 442,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_instanceLoaded",
            "description": "Called from the first YUI instance that sets up the internal instance.\nThis loads the content into the window/frame and attaches the contentReady event.",
            "params": [
                {
                    "name": "inst",
                    "description": "The internal YUI instance bound to the frame/window",
                    "type": "Jet"
                }
            ],
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 453,
            "itemtype": "method",
            "name": "getInstance",
            "description": "Get a reference to the internal YUI instance.",
            "return": {
                "description": "The internal YUI instance",
                "type": "Jet"
            },
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 461,
            "itemtype": "method",
            "name": "render",
            "description": "Render the iframe into the container config option or open the window.",
            "params": [
                {
                    "name": "node",
                    "description": "The node to render to",
                    "type": "String/HTMLElement/Node"
                }
            ],
            "return": {
                "description": "",
                "type": "$.Frame"
            },
            "chainable": 1,
            "class": "Frame",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-sandbox.js",
            "line": 564,
            "itemtype": "method",
            "name": "getInstance",
            "description": "Returns the jet instance inside the frame",
            "class": "Sandbox",
            "module": "widget-sandbox"
        },
        {
            "file": "build/widget-stack.js",
            "line": 52,
            "itemtype": "attribute",
            "name": "shim",
            "description": "Whether the widget should use shimming or not",
            "type": "Boolean",
            "default": "true If browser is IE 6. Otherwise, false by default",
            "class": "WidgetStack",
            "module": "widget-stack"
        },
        {
            "file": "build/widget-stack.js",
            "line": 63,
            "itemtype": "attribute",
            "name": "zIndex",
            "description": "The current relative zIndex value of the widget",
            "default": "0",
            "class": "WidgetStack",
            "module": "widget-stack"
        },
        {
            "file": "build/widget-stack.js",
            "line": 82,
            "static": 1,
            "itemtype": "property",
            "name": "MIN_ZINDEX",
            "description": "The min zIndex to apply to the widget. This value is added to the zIndex attribute",
            "default": "1",
            "class": "WidgetStack",
            "module": "widget-stack"
        },
        {
            "file": "build/widget-stack.js",
            "line": 149,
            "itemtype": "method",
            "name": "syncShim",
            "description": "Syncs the position of the shimming iframe with the position of the boundingBox",
            "chainable": 1,
            "class": "WidgetStack",
            "module": "widget-stack"
        },
        {
            "file": "build/widget-stack.js",
            "line": 160,
            "itemtype": "method",
            "name": "bringToFront",
            "description": "Brings the widget to the front of the stack",
            "chainable": 1,
            "class": "WidgetStack",
            "module": "widget-stack"
        },
        {
            "file": "build/widget-stack.js",
            "line": 170,
            "itemtype": "method",
            "name": "sendToBack",
            "description": "Sends the widget to the back of the stack",
            "chainable": 1,
            "class": "WidgetStack",
            "module": "widget-stack"
        }
    ]
}