/**
 * @module button
 * @requires base
 * 
 * Copyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.
 * Code licensed under the BSD License
 * https://github.com/juandopazo/jet/blob/master/LICENSE.md
*/
jet.add("button",function(b){var f=b.Lang,d=b.Base,g=b.Widget,i=b.WidgetParent,k=b.WidgetChild,h=jet.namespace("Button"),j=b.Button=d.create("button",g,[k],{ATTRS:{enabled:{value:true,validator:f.isBoolean},labelNode:{value:null,setter:b},labelContent:{value:null,validator:f.isString},text:{value:""}},EVENTS:{mouseover:function(){this.get("boundingBox").addClass(this.getClassName("hover"))},mouseout:function(){this.get("boundingBox").removeClass(this.getClassName("hover"))}}},{CONTENT_TEMPLATE:"<button/>",
LABEL_TEMPLATE:"<label/>",_uiFocusedChange:function(a){this.get("boundingBox").toggleClass(this.getClassName("focus"),a.newVal);this.get("contentBox")[a.newVal?"focus":"blur"]()},_uiTextChange:function(a){this.get("contentBox").html(a.val)},_uiLabelChange:function(a){var c=this.get("labelNode");a=a.newVal;if(f.isString(a)){c.html(a);c.parent().getDOMNode()||this.get("boundingBox").prepend(c)}else c.remove()},_uiEnabledChange:function(a){this.get("boundingBox").toggleClass(this.getClassName("disabled"),
!a.newVal);this.get("contentBox").getDOMNode().disabled=!a.newVal},initializer:function(){this.set("labelNode",this.get("labelNode")||this.LABEL_TEMPLATE);this.after("enabledChange",this._uiEnabledChange);this.after("labelContentChange",this._uiLabelChange);this.after("textChange",this._uiTextChange);this.after("focusedChange",this._uiFocusedChange)},renderUI:function(a,c){var e=this.getClassName("content",this._uid),l=this.get("labelNode"),m=this.get("labelContent");c.attr("id",e).html(this.get("text"));
l.getDOMNode().setAttribute("for",e);f.isString(m)&&a.prepend(l.html(m))},bindUI:function(a,c){this._handlers.push(c.on("focus",this.focus,this),c.on("blur",this.blur,this))},syncUI:function(a,c){c.getDOMNode().disabled=!this.get("enabled")},destructor:function(){this.get("labelNode").remove()}});b.ToggleButton=d.create("button-toggle",j,[],{EVENTS:{click:function(){this.toggle()}}});b.ButtonGroup=d.create("button-group",g,[i],{ATTRS:{defaultChildType:{value:b.Button},pill:{value:false,validator:f.isBoolean}}},
{_uiPillChange:function(a){this.get("boundingBox").toggleClass(this.getClassName("pill"),a.newVal)},initializer:function(){this.after("pillChange",this._uiPillChange)},renderUI:function(a){a.toggleClass(this.getClassName("pill"),this.get("pill"))}});b.ComboOption=d.create("combo-option",g,[k],{ATTRS:{value:{getter:function(a){return a||this.get("text")}},text:{value:""}}},{BOUNDING_TEMPLATE:"<li/>",CONTENT_TEMPLATE:"<span/>",_uiTextChange:function(a){this.get("contentBox").html(a.newVal)},_uiOptHover:function(){this.get("boundingBox").addClass(this.getClassName("hover"))},
_uiOptOut:function(){this.get("boundingBox").removeClass(this.getClassName("hover"))},initializer:function(){this.after("textChange",this._uiTextChange)},bindUI:function(a){a.on("click",this.select,this);this.on("mouseover",this._uiOptHover);this.on("mouseout",this._uiOptOut)},syncUI:function(a,c){c.html(this.get("text"))}});b.ComboBox=d.create("combobox",g,[i],{ATTRS:{defaultChildType:{value:"ComboOption"},multiple:{value:false,readOnly:true},atLeastOne:{value:true,readOnly:true},displayNode:{value:"<span/>",
setter:b},inputNode:{value:"<input/>",setter:b},arrowContainer:{value:"<span/>",setter:b},arrow:{value:"<b/>",setter:b}}},{BOUNDING_TEMPLATE:"<span/>",CONTENT_TEMPLATE:"<ul/>",_uiComboSelectionChange:function(a){if(a.newVal){this.get("displayNode").html(a.newVal.get("text"));this.get("inputNode").attr("value",a.newVal.get("value"));setTimeout(b.bind(this._setMinWidth,this),0)}},_setMinWidth:function(){var a=this.get("contentBox"),c=this.get("boundingBox").width();a.width()<c&&a.width(c)},_toggleContent:function(a){var c=
this.get("contentBox").getDOMNode();b(a.domEvent.target).ancestor(function(e){return e==c}).size()===0&&this.get("boundingBox").toggleClass(this.getClassName("expanded"))},_uiComboHide:function(a){var c=this.get("boundingBox");b(a.target).ancestor(function(e){return e==c.getDOMNode()}).size()===0&&c.removeClass(this.getClassName("expanded"))},_uiContentHide:function(){this.get("boundingBox").removeClass(this.getClassName("expanded"))},initializer:function(){this.set("displayNode",this.get("displayNode"));
this.set("inputNode",this.get("inputNode"));this.set("arrowContainer",this.get("arrowContainer"));this.set("arrow",this.get("arrow"));this.after("addChild",this._setMinWidth);this.on("afterRender",this._setMinWidth)},renderUI:function(a,c){this.get("displayNode").addClass(this.getClassName("display")).prependTo(a);var e=this.get("arrowContainer").addClass(this.getClassName("arrow","container")).prependTo(a);this.get("arrow").addClass(this.getClassName("arrow")).appendTo(e);this.get("inputNode").attr({type:"hidden",
id:this.getClassName("input",this._uid)}).appendTo(a);c.addClass(this.getClassName("collapsed")).on("click",this._uiContentHide,this)},bindUI:function(){this.after("selectionChange",this._uiComboSelectionChange);this.on("click",this._toggleContent);this._handlers.push(b(b.config.doc).on("click",this._uiComboHide,this))},syncUI:function(){this.get("displayNode").html(this.get("selection").get("text"));this.get("inputNode").attr("value",this.get("selection").get("value"));this._setMinWidth()}});if(!f.isNumber(h.radio))h.radio=
0;b.RadioButton=d.create("radio",j,[],{},{CONTENT_TEMPLATE:"<input/>",_rbSelectionChange:function(a){this.get("contentBox").getDOMNode().checked=!!a.newVal},initializer:function(){this.after("selectionChange",this._rbSelectionChange)},renderUI:function(a,c){c.attr({type:"radio",name:this.get("parent").get("name")})}});b.RadioGroup=d.create("radio-group",g,[i],{ATTRS:{multiple:{value:false,readOnly:true},name:{writeOnce:true},defaultChildType:{value:b.RadioButton}}},{initializer:function(){this.set("name",
this.getClassName(++h.radio))}});if(!f.isNumber(h.checkbox))h.checkbox=0;b.CheckBox=d.create("checkbox",j,[],{},{CONTENT_TEMPLATE:"<input/>",_uiCheckBoxSelect:function(a){this.get("contentBox").getDOMNode().checked=!!a.newVal},renderUI:function(){this.get("contentBox").attr({type:"checkbox",name:this.get("parent").get("name")})},initializer:function(){this.after("selectedChange",this._uiCheckBoxSelect)}});b.CheckBoxGroup=d.create("checkbox-group",g,[i],{ATTRS:{name:{writeOnce:true},defaultChildType:{value:"CheckBox"}}},
{initializer:function(){this.set("name",this.getClassName(+h.checkbox))}})});
