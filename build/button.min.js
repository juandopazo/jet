/**
 * @module button
 * @requires base
 * 
 * Copyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.
 * Code licensed under the BSD License
 * https://github.com/juandopazo/jet/blob/master/LICENSE.md
*/
jet.add("button",function(b){var g=b.Lang,e=b.Base,h=b.Widget,j=b.WidgetParent,k=b.WidgetChild;if(!jet.Button)jet.Button={};if(!jet.Button.buttons)jet.Button.buttons=1;var i=e.create("button",h,[k],{ATTRS:{enabled:{value:true,validator:g.isBoolean},labelNode:{value:null,setter:b},labelContent:{value:null,validator:g.isString},text:{value:""}},EVENTS:{enabledChange:function(c,a){var d=this.get("boundingBox"),f=this.getClassName("disabled");a?f.removeClass(f):d.addClass(f);this.get("contentBox")._nodes[0].disabled=
!a},labelContentChange:function(c,a){var d=this.get("labelNode");if(g.isString(a)){d.html(a);d.parent()._nodes[0]||this.get("boundingBox").prepend(d)}else d.remove()},textChange:function(c,a){this.get("contentBox").html(a)},afterFocus:function(){this.get("boundingBox").addClass(this.getClassName("focus"));this.get("contentBox").focus()},afterBlur:function(){this.get("boundingBox").removeClass(this.getClassName("focus"));this.get("contentBox").blur()},mouseover:function(){this.get("boundingBox").addClass(this.getClassName("hover"))},
mouseout:function(){this.get("boundingBox").removeClass(this.getClassName("hover"))},render:function(){var c=this.getClassName("content",this._uid),a=this.get("contentBox").attr("id",c).html(this.get("text")),d=this.get("labelNode"),f=this.get("labelContent");d._nodes[0].setAttribute("for",c);g.isString(f)&&this.get("boundingBox").prepend(d.html(f));a._nodes[0].disabled=!this.get("enabled");this._handlers.push(a.on("focus",this._onDomFocus,this));this._handlers.push(a.on("blur",this._onDomBlur,this))},
destroy:function(){this.get("contentBox").unbind("focus",this._onDomFocus).unbind("blur",this._onDomBlur);this.get("labelNode").remove()}}},{CONTENT_TEMPLATE:"<button/>",LABEL_TEMPLATE:"<label/>",disable:function(){return this.set("enabled",false)},enable:function(){return this.set("enabled",true)},initializer:function(){this.set("labelNode",this.get("labelNode")||this.LABEL_TEMPLATE);this._onDomFocus=b.bind(this.focus,this);this._onDomBlur=b.bind(this.blur,this)}});b.Button=i;b.ToggleButton=e.create("button-toggle",
i,[],{EVENTS:{click:function(){this.toggle()}}});b.ButtonGroup=e.create("button-group",h,[j],{ATTRS:{defaultChildType:{value:b.Button},pill:{value:false,validator:g.isBoolean}},EVENTS:{pillChange:function(c,a){var d=this.get("boundingBox"),f=this.getClassName("pill");a?d.addClass(f):d.removeClass(f)},render:function(){var c=this.get("boundingBox"),a=this.getClassName("pill");this.get("pill")?c.addClass(a):c.removeClass(a)}}});b.ComboOption=e.create("combo-option",h,[k],{ATTRS:{value:{getter:function(){return this.get("boundingBox").value()},
setter:function(c){this.get("boundingBox").value(c);return c}},text:{getter:function(){return this.get("boundingBox").attr("text")},setter:function(c){this.get("boundingBox").attr("text",c);return c}}}},{BOUNDING_TEMPLATE:"<option/>",CONTENT_TEMPLATE:null});b.ComboBox=e.create("combobox",i,[j],{ATTRS:{defaultChildType:{value:b.ComboOption},multiple:{value:false,readOnly:true}},EVENTS:{selectionChange:function(c,a){this.get("contentBox")._nodes[0].selectedIndex=a.get("index")}}},{CONTENT_TEMPLATE:"<select/>"});
if(!g.isNumber(jet.Button.radio))jet.Button.radio=0;b.RadioButton=e.create("radio",i,[],{EVENTS:{selectedChange:function(c,a){this.get("contentBox")._nodes[0].checked=!!a},render:function(){this.get("contentBox").attr({type:"radio",name:this.get("parent").get("name")})}}},{CONTENT_TEMPLATE:"<input/>"});b.RadioGroup=e.create("radio-group",h,[j],{ATTRS:{multiple:{value:false,readOnly:true},name:{writeOnce:true},defaultChildType:{value:b.RadioButton}}},{initializer:function(){this.set("name",this.getClassName(++jet.Button.radio))}});
if(!g.isNumber(jet.Button.checkbox))jet.Button.checkbox=0;b.CheckBox=e.create("checkbox",i,[],{EVENTS:{selectedChange:function(c,a){this.get("contentBox")._nodes[0].checked=!!a},render:function(){this.get("contentBox").attr({type:"checkbox",name:this.get("parent").get("name")})}}},{CONTENT_TEMPLATE:"<input/>"});b.CheckBoxGroup=e.create("checkbox-group",h,[j],{ATTRS:{name:{writeOnce:true},defaultChildType:{value:b.CheckBox}}},{initializer:function(){this.set("name",this.getClassName(+jet.Button.checkbox))}})});
