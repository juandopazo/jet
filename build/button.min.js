/**
 * @module button
 * @requires base
 * 
 * Copyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.
 * Code licensed under the BSD License
 * https://github.com/juandopazo/jet/blob/master/LICENSE.md
*/
jet.add("button",function(b){var d=b.Lang,c=b.Base,f=b.Widget,g=b.WidgetParent,i=b.WidgetChild;if(!jet.Button)jet.Button={};var h=b.Button=c.create("button",f,[i],{ATTRS:{enabled:{value:true,validator:d.isBoolean},labelNode:{value:null,setter:b},labelContent:{value:null,validator:d.isString},text:{value:""}},EVENTS:{mouseover:function(){this.get("boundingBox").addClass(this.getClassName("hover"))},mouseout:function(){this.get("boundingBox").removeClass(this.getClassName("hover"))}}},{CONTENT_TEMPLATE:"<button/>",
LABEL_TEMPLATE:"<label/>",_uiFocusedChange:function(a){this.get("boundingBox").toggleClass(this.getClassName("focus"),a.newVal);this.get("contentBox")[a.newVal?"focus":"blur"]()},_uiTextChange:function(a){this.get("contentBox").html(a.val)},_uiLabelChange:function(a){var e=this.get("labelNode");a=a.newVal;if(d.isString(a)){e.html(a);e.parent()._nodes[0]||this.get("boundingBox").prepend(e)}else e.remove()},_uiEnabledChange:function(a){this.get("boundingBox").toggleClass(this.getClassName("disabled"),
!a.newVal);this.get("contentBox")._nodes[0].disabled=!a.newVal},initializer:function(){this.set("labelNode",this.get("labelNode")||this.LABEL_TEMPLATE);this._onDomFocus=b.bind(this.focus,this);this._onDomBlur=b.bind(this.blur,this)},renderUI:function(a){var e=this.getClassName("content",this._uid),j=this.get("labelNode"),k=this.get("labelContent");this.get("contentBox").attr("id",e).html(this.get("text"));j._nodes[0].setAttribute("for",e);d.isString(k)&&a.prepend(j.html(k))},bindUI:function(){var a=
this.get("contentBox");this.after("enabledChange",this._uiEnabledChange);this.after("labelContentChange",this._uiLabelChange);this.after("textChange",this._uiTextChange);this.after("focusedChange",this._uiFocusedChange);this._handlers.push(a.on("focus",this._onDomFocus,this),a.on("blur",this._onDomBlur,this))},syncUI:function(){this.get("contentBox")._nodes[0].disabled=!this.get("enabled")},destructor:function(){this.get("contentBox").unbind("focus",this._onDomFocus).unbind("blur",this._onDomBlur);
this.get("labelNode").remove()}});b.ToggleButton=c.create("button-toggle",h,[],{EVENTS:{click:function(){this.toggle()}}});b.ButtonGroup=c.create("button-group",f,[g],{ATTRS:{defaultChildType:{value:b.Button},pill:{value:false,validator:d.isBoolean}}},{_uiPillChange:function(a){this.get("boundingBox").toggleClass(this.getClassName("pill"),a.newVal)},renderUI:function(a){a.toggleClass(this.getClassName("pill"),this.get("pill"))}});b.ComboOption=c.create("combo-option",f,[i],{ATTRS:{value:{getter:function(){return this.get("boundingBox").value()},
setter:function(a){this.get("boundingBox").value(a);return a}},text:{getter:function(){return this.get("boundingBox").attr("text")},setter:function(a){this.get("boundingBox").attr("text",a);return a}}}},{BOUNDING_TEMPLATE:"<option/>",CONTENT_TEMPLATE:null});b.ComboBox=c.create("combobox",h,[g],{ATTRS:{defaultChildType:{value:b.ComboOption},multiple:{value:false,readOnly:true}},EVENTS:{afterSelectionChange:function(a){this.get("contentBox")._nodes[0].selectedIndex=a.newVal.get("index")}}},{CONTENT_TEMPLATE:"<select/>"});
if(!d.isNumber(jet.Button.radio))jet.Button.radio=0;b.RadioButton=c.create("radio",h,[],{EVENTS:{afterSelectionChange:function(a){this.get("contentBox")._nodes[0].checked=!!a.newVal},render:function(){this.get("contentBox").attr({type:"radio",name:this.get("parent").get("name")})}}},{CONTENT_TEMPLATE:"<input/>"});b.RadioGroup=c.create("radio-group",f,[g],{ATTRS:{multiple:{value:false,readOnly:true},name:{writeOnce:true},defaultChildType:{value:b.RadioButton}}},{initializer:function(){this.set("name",
this.getClassName(++jet.Button.radio))}});if(!d.isNumber(jet.Button.checkbox))jet.Button.checkbox=0;b.CheckBox=c.create("checkbox",h,[],{},{CONTENT_TEMPLATE:"<input/>",_uiCheckBoxSelect:function(a){this.get("contentBox")._nodes[0].checked=!!a.newVal},renderUI:function(){this.get("contentBox").attr({type:"checkbox",name:this.get("parent").get("name")})},bindUI:function(){this.after("selectedChange",this._uiCheckBoxSelect)}});b.CheckBoxGroup=c.create("checkbox-group",f,[g],{ATTRS:{name:{writeOnce:true},
defaultChildType:{value:"CheckBox"}}},{initializer:function(){this.set("name",this.getClassName(+jet.Button.checkbox))}})});
