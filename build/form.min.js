/**
 * @module form
 * @requires widget
 * 
 * Copyright (c) 2011, Juan Ignacio Dopazo. All rights reserved.
 * Code licensed under the BSD License
 * https://github.com/juandopazo/jet/blob/master/LICENSE.md
*/
jet.add("form",function(a){a.FormField=a.Base.create("formfield",a.Widget,[a.WidgetChild],{ATTRS:{value:{value:""},label:{value:""}}},{CONTENT_TEMPLATE:"<label/>",_syncDom2Attr:function(b){this.set(b,this._inputNode.attr(b))},_syncAttr2Dom:function(b){this._inputNode.attr(b.attrName,b.newVal)},initializer:function(){this._inputNode=a("<input/>").attr({type:"text",id:this.get("id")+"_input"});this.after("valueChange",this._syncAttr2Dom);this.after("legendChange",this.syncUI)},renderUI:function(b,c){this._inputNode.value(this.get("value")).prependTo(b);
c.attr("htmlFor",this._inputNode.attr("id"))},bindUI:function(){this._handlers.push(this._inputNode.on("change",a.bind(this._syncDom2Attr,this,"value")))},syncUI:function(){this.get("contentBox").html(this.get("label"))}});a.CheckBox=a.Base.create("checkbox",a.FormField,[],{ATTRS:{checked:{value:false}}},{initializer:function(){this.after("checkedChange",this._syncAttr2Dom)},renderUI:function(){this._inputNode.attr("type","checkbox")},bindUI:function(){this._handlers.push(this._inputNode.on("click",
a.bind(this._syncDom2Attr,this,"checked")))},syncUI:function(){this._inputNode.attr("checked",this.get("checked"))},initializer:function(){this.after("selectedChange",this._uiCheckBoxSelect)}});a.FieldSet=a.Base.create("fieldset",a.Widget,[a.WidgetChild,a.WidgetParent],{ATTRS:{defaultChildType:{value:"FormField"},legend:{value:""},buttons:{valueFn:function(){return[]}}}},{BOUNDING_TEMPLATE:"<fieldset/>",CONTENT_TEMPLATE:"<legend/>",initializer:function(){this._buttons=new a.ButtonGroup({children:this.get("buttons")})},
renderUI:function(b,c){this._buttons.render(c)},syncUI:function(){this.get("contentBox").html(this.get("legend"))}});a.Form=a.Base.create("form",a.Widget,[a.WidgetParent],{ATTRS:{defaultChildType:{value:"FieldSet"},action:{value:""}}},{CONTENT_TEMPLATE:"<form/>",_relaySubmit:function(b){this.fire("submit",{domEvent:b})},initializer:function(){this.after("actionChange",this.syncUI)},bindUI:function(b,c){this._handlers.push(c.on("submit",this._relaySubmit,this))},syncUI:function(){this.get("contentBox").attr("action",
this.get("action"))}})});
