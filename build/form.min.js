/**
 * @module form
 * @requires widget
 * 
 * Copyright (c) 2012, Juan Ignacio Dopazo. All rights reserved.
 * Code licensed under the BSD License
 * https://github.com/juandopazo/jet/blob/master/LICENSE.md
*/
jet.add("form",function(b){b.FormField=b.Base.create("formfield",b.Widget,[b.WidgetChild],{ATTRS:{value:{value:""},label:{value:""},title:{value:""},type:{setter:function(a){return b.FormField.ALIASES[a]||a}}},ALIASES:{checkbox:"CheckBoxField",fieldset:"FieldSet",radio:"RadioField",select:"SelectField",textarea:"TextareaField",text:"TextField",password:"PasswordField"}},{BOUNDING_TEMPLATE:"<span/>",CONTENT_TEMPLATE:"<input/>",_ffDisabledChange:function(a){this.get("contentBox").getDOMNode().disabled=
a.newVal},_ffFocusedChange:function(a){var c=this.get("contentBox").getDOMNode();if(a.newVal)try{c.focus()}catch(d){}else c.blur()},_insertLabel:function(){this._labelNode.prependTo(this.get("boundingBox"))},_syncLabel:function(a){var c=this._labelNode,d=c.parent().size()>0;if(a.newVal){c.html(a.newVal);d||this._insertLabel()}else d&&c.remove()},_syncDom2Attr:function(a){this.set(a,this.get("contentBox").attr(a))},_syncAttr2Dom:function(a){this.get("contentBox").attr(a.attrName,a.newVal)},_setFieldValue:function(a){this.get("contentBox").attr("value",
a)},initializer:function(){this._labelNode=b("<label/>");this.after({valueChange:this._syncAttr2Dom,labelChange:this._syncLabel,disabledChange:this._ffDisabledChange,focusedChange:this._ffFocusedChange})},renderUI:function(){var a=this.get("id")+"_field";this.get("contentBox").attr("id",a);this._setFieldValue(this.get("value"));this._labelNode.attr("htmlFor",a)},bindUI:function(){this._handlers.push(this.get("contentBox").on("change",b.bind(this._syncDom2Attr,this,"value")))},syncUI:function(){this._syncLabel({newVal:this.get("label")});
this.get("boundingBox").attr("title",this.get("title"));this._ffDisabledChange({newVal:this.get("disabled")})},toJSON:function(){return this.getAttrs(["id","name","value"])}});b.TextField=b.Base.create("textfield",b.FormField,[],{},{renderUI:function(){this.get("contentBox").attr("type","text")}});b.PasswordField=b.Base.create("password",b.FormField,[],{},{renderUI:function(){this.get("contentBox").attr("type","password")}});b.CheckBoxField=b.Base.create("checkbox",b.FormField,[],{ATTRS:{checked:{value:false}}},
{_insertLabel:function(){this._labelNode.appendTo(this.get("boundingBox"))},initializer:function(){this.after("checkedChange",this._syncAttr2Dom);this.after("selectedChange",this._uiCheckBoxSelect);this.get("contentBox").attr("type","checkbox")},bindUI:function(){this._handlers.push(this.get("contentBox").on("click",b.bind(this._syncDom2Attr,this,"checked")))},syncUI:function(){this.get("contentBox").attr("checked",this.get("checked"))}});b.FieldSet=b.Base.create("fieldset",b.Widget,[b.WidgetChild,
b.WidgetParent],{ATTRS:{defaultChildType:{value:"FormField"},legend:{value:""},name:{getter:function(){return this.get("id")}}}},{BOUNDING_TEMPLATE:"<fieldset/>",CONTENT_TEMPLATE:null,LEGEND_TEMPLATE:"<legend/>",_afterLegendChange:function(a){var c=this._legendNode,d=c.parent().size()>0;if(a.newVal){c.html(a.newVal);d||c.prependTo(this.get("boundingBox"))}else d&&c.remove()},initializer:function(){this._legendNode=b(this.LEGEND_TEMPLATE)},syncUI:function(){this._afterLegendChange({newVal:this.get("legend")})},
toJSON:function(){var a={};this.each(function(c){a[c.get("name")]=c.toJSON()});return a}});var f=function(a,c,d){var h=b.config.doc.createElement("select"),i=b.config.doc.createElement("option"),l=false;try{h.add(i,null);l=true}catch(m){h.add(i)}f=l?function(j,k,g){var e=b.config.doc.createElement("option");e.text=k;if(g)e.value=g;j.add(e,null)}:function(j,k,g){var e=b.config.doc.createElement("option");e.text=k;if(g)e.value=g;j.add(e)};f(a,c,d)};b.SelectField=b.Base.create("select-field",b.FormField,
[],{ATTRS:{options:{value:[]},selection:{validator:b.Lang.isNumber,getter:function(){var a=this.get("contentBox").getDOMNode();return a.selectedIndex>=0?a.options[a.selectedIndex]:null},setter:function(a){var c=this.get("contentBox").getDOMNode();if(a>=0&&this.fire("change",c.options[a]))c.selectedIndex=a;return a}},count:{readOnly:true,getter:function(){return this.get("contentBox").getDOMNode().options.length}},value:{readOnly:true,getter:function(){var a=this.get("selection");return a&&(a.value?
a.value:a.text)}}}},{CONTENT_TEMPLATE:"<select/>",_setOptions:function(a,c){b.Array.forEach(c,function(d){b.Lang.isObject(d)?b.Object.each(d,function(h,i){f(a,h,i)}):f(a,d)})},_afterOptionsChange:function(a){var c=this.get("contentBox").getDOMNode();c.options.length=0;this._setOptions(c,a.newVal)},_setFieldValue:function(){},initializer:function(){this.after("optionsChange",this._afterOptionsChange)},renderUI:function(){this._setOptions(this.get("contentBox").getDOMNode(),this.get("options"))},bindUI:function(){var a=
this;this._handlers.push(this.get("contentBox").on("change",function(){a.fire("change",{newVal:this.options[this.selectedIndex]})}))},add:function(a,c){var d;if(c){d={};d[a]=c}else d=a;this.get("options").push(d);f(this.get("contentBox").getDOMNode(),a,c);return this},fill:function(a){b.Lang.isArray(a)?b.Array.forEach(a,function(c){this.add(c)},this):b.Object.each(a,this.add,this);return this},clear:function(){return this.set("options",[])},select:function(a){return this.set("selection",a)},toJSON:function(){var a=
this.get("selection"),c={id:this.get("id"),text:a.text};if(a.value)c.value=a.value;return c}});b.RadioButton=b.Base.create("radio",b.FormField,[],{},{CONTENT_TEMPLATE:"<input/>",_rbSelectedChange:function(a){if(a.newVal&&a.src!="dom")this.get("contentBox").getDOMNode().checked=true},_rbCheckedChange:function(){this.set("selected",this.get("contentBox").getDOMNode().checked,{src:"dom"})},_insertLabel:function(){this._labelNode.appendTo(this.get("boundingBox"))},initializer:function(){this.after("selectedChange",
this._rbSelectedChange);this.get("contentBox").attr("type","radio")},renderUI:function(){this.get("contentBox").attr("name",this.get("parent").get("name"))},bindUI:function(){this._handlers.push(this.get("contentBox").on("change",this._rbCheckedChange,this))}});b.RadioField=b.Base.create("radio-group",b.Widget,[b.WidgetParent],{ATTRS:{multiple:{value:false,readOnly:true},name:{writeOnce:true,valueFn:function(){return this.get("id")}},defaultChildType:{value:b.RadioButton},value:{getter:function(){return this.get("selection").get("value")}}}});
b.TextareaField=b.Base.create("textarea",b.FormField,[],{},{CONTENT_TEMPLATE:"<textarea/>"});b.Form=b.Base.create("form",b.Widget,[b.WidgetParent],{ATTRS:{defaultChildType:{value:"FormField"},action:{value:""}}},{CONTENT_TEMPLATE:"<form/>",_relaySubmit:function(a){this.fire("submit",{domEvent:a})},_registerField:function(a){a=a.child;if(a.get("type")===b.FieldSet)a.each(function(c){this._registerField({child:c})},this);else this._fields[a.get("name")]=a},initializer:function(){this.after("actionChange",
this.syncUI);this._fields={};this.on("afterAddChild",this._registerField)},bindUI:function(){this._handlers.push(this.get("contentBox").on("submit",this._relaySubmit,this))},syncUI:function(){this.get("contentBox").attr("action",this.get("action"))},getField:function(a){return this._fields[a]},toJSON:b.FieldSet.prototype.toJSON})});
